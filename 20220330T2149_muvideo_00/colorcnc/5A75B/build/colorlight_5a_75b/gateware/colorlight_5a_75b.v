// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : colorlight_5a_75b.v
// Device     : LFE5U-25F-6BG256C
// LiteX sha1 : 82daa48e
// Date       : 2022-02-24 23:58:27
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module colorlight_5a_75b (
	input  wire clk25,
	output wire sdram_clock,
	output wire eth_clocks_tx,
	input  wire eth_clocks_rx,
	input  wire eth_mdio,
	output wire eth_mdc,
	input  wire eth_rx_ctl,
	input  wire [3:0] eth_rx_data,
	output wire eth_tx_ctl,
	output wire [3:0] eth_tx_data,
	input  wire encoderJ7_10_A,
	input  wire encoderJ7_10_B,
	input  wire encoderJ7_10_Z,
	input  wire encoderJ7_21_A,
	input  wire encoderJ7_21_B,
	input  wire encoderJ7_21_Z,
	input  wire encoderJ8_12_A,
	input  wire encoderJ8_12_B,
	input  wire encoderJ8_12_Z,
	input  wire encoderJ8_23_A,
	input  wire encoderJ8_23_B,
	input  wire encoderJ8_23_Z,
	output wire stepgenJ10_step,
	output wire stepgenJ10_dir,
	output wire stepgenJ21_step,
	output wire stepgenJ21_dir,
	output wire stepgenJ32_step,
	output wire stepgenJ32_dir,
	output wire stepgenJ43_step,
	output wire stepgenJ43_dir,
	output wire stepgenJ54_step,
	output wire stepgenJ54_dir,
	output wire stepgenJ65_step,
	output wire stepgenJ65_dir,
	input  wire gpio_in0,
	input  wire gpio_in1,
	input  wire gpio_in2,
	input  wire gpio_in3,
	input  wire gpio_in4,
	input  wire gpio_in5,
	input  wire gpio_in6,
	input  wire gpio_in7,
	input  wire gpio_in8,
	input  wire gpio_in9,
	input  wire gpio_in10,
	input  wire gpio_in11,
	output reg  gpio_out0,
	output reg  gpio_out1,
	output reg  gpio_out2,
	output reg  gpio_out3,
	output reg  gpio_out4,
	output reg  gpio_out5,
	output reg  gpio_out6,
	output reg  gpio_out7,
	output reg  gpio_out8,
	output reg  gpio_out9,
	output reg  gpio_out10,
	input  wire gpio_out11,
	output reg  pwm_out0,
	output reg  pwm_out1,
	output reg  pwm_out2,
	output reg  en_out,
	output reg  user_led_n0
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  benchsoc_soc_rst = 1'd0;
wire benchsoc_cpu_rst;
reg  [1:0] benchsoc_reset_storage = 2'd0;
reg  benchsoc_reset_re = 1'd0;
reg  [31:0] benchsoc_scratch_storage = 32'd305419896;
reg  benchsoc_scratch_re = 1'd0;
wire [31:0] benchsoc_bus_errors_status;
wire benchsoc_bus_errors_we;
reg  benchsoc_bus_errors_re = 1'd0;
reg  benchsoc_bus_error = 1'd0;
reg  [31:0] benchsoc_bus_errors = 32'd0;
reg  benchsoc_uartcrossover_rxtx_re = 1'd0;
wire [7:0] benchsoc_uartcrossover_rxtx_r;
reg  benchsoc_uartcrossover_rxtx_we = 1'd0;
wire [7:0] benchsoc_uartcrossover_rxtx_w;
wire benchsoc_uartcrossover_txfull_status;
wire benchsoc_uartcrossover_txfull_we;
reg  benchsoc_uartcrossover_txfull_re = 1'd0;
wire benchsoc_uartcrossover_rxempty_status;
wire benchsoc_uartcrossover_rxempty_we;
reg  benchsoc_uartcrossover_rxempty_re = 1'd0;
wire benchsoc_uartcrossover_irq;
wire benchsoc_uartcrossover_tx_status;
reg  benchsoc_uartcrossover_tx_pending = 1'd0;
wire benchsoc_uartcrossover_tx_trigger;
reg  benchsoc_uartcrossover_tx_clear = 1'd0;
reg  benchsoc_uartcrossover_tx_trigger_d = 1'd0;
wire benchsoc_uartcrossover_rx_status;
reg  benchsoc_uartcrossover_rx_pending = 1'd0;
wire benchsoc_uartcrossover_rx_trigger;
reg  benchsoc_uartcrossover_rx_clear = 1'd0;
reg  benchsoc_uartcrossover_rx_trigger_d = 1'd0;
wire benchsoc_uartcrossover_tx0;
wire benchsoc_uartcrossover_rx0;
reg  [1:0] benchsoc_uartcrossover_status_status = 2'd0;
wire benchsoc_uartcrossover_status_we;
reg  benchsoc_uartcrossover_status_re = 1'd0;
wire benchsoc_uartcrossover_tx1;
wire benchsoc_uartcrossover_rx1;
reg  [1:0] benchsoc_uartcrossover_pending_status = 2'd0;
wire benchsoc_uartcrossover_pending_we;
reg  benchsoc_uartcrossover_pending_re = 1'd0;
reg  [1:0] benchsoc_uartcrossover_pending_r = 2'd0;
wire benchsoc_uartcrossover_tx2;
wire benchsoc_uartcrossover_rx2;
reg  [1:0] benchsoc_uartcrossover_enable_storage = 2'd0;
reg  benchsoc_uartcrossover_enable_re = 1'd0;
wire benchsoc_uartcrossover_txempty_status;
wire benchsoc_uartcrossover_txempty_we;
reg  benchsoc_uartcrossover_txempty_re = 1'd0;
wire benchsoc_uartcrossover_rxfull_status;
wire benchsoc_uartcrossover_rxfull_we;
reg  benchsoc_uartcrossover_rxfull_re = 1'd0;
wire benchsoc_uartcrossover_uartcrossover_sink_valid;
wire benchsoc_uartcrossover_uartcrossover_sink_ready;
wire benchsoc_uartcrossover_uartcrossover_sink_first;
wire benchsoc_uartcrossover_uartcrossover_sink_last;
wire [7:0] benchsoc_uartcrossover_uartcrossover_sink_payload_data;
wire benchsoc_uartcrossover_uartcrossover_source_valid;
wire benchsoc_uartcrossover_uartcrossover_source_ready;
wire benchsoc_uartcrossover_uartcrossover_source_first;
wire benchsoc_uartcrossover_uartcrossover_source_last;
wire [7:0] benchsoc_uartcrossover_uartcrossover_source_payload_data;
wire benchsoc_uartcrossover_tx_fifo_sink_valid;
wire benchsoc_uartcrossover_tx_fifo_sink_ready;
reg  benchsoc_uartcrossover_tx_fifo_sink_first = 1'd0;
reg  benchsoc_uartcrossover_tx_fifo_sink_last = 1'd0;
wire [7:0] benchsoc_uartcrossover_tx_fifo_sink_payload_data;
wire benchsoc_uartcrossover_tx_fifo_source_valid;
wire benchsoc_uartcrossover_tx_fifo_source_ready;
wire benchsoc_uartcrossover_tx_fifo_source_first;
wire benchsoc_uartcrossover_tx_fifo_source_last;
wire [7:0] benchsoc_uartcrossover_tx_fifo_source_payload_data;
wire benchsoc_uartcrossover_tx_fifo_re;
reg  benchsoc_uartcrossover_tx_fifo_readable = 1'd0;
wire benchsoc_uartcrossover_tx_fifo_syncfifo_we;
wire benchsoc_uartcrossover_tx_fifo_syncfifo_writable;
wire benchsoc_uartcrossover_tx_fifo_syncfifo_re;
wire benchsoc_uartcrossover_tx_fifo_syncfifo_readable;
wire [9:0] benchsoc_uartcrossover_tx_fifo_syncfifo_din;
wire [9:0] benchsoc_uartcrossover_tx_fifo_syncfifo_dout;
reg  [4:0] benchsoc_uartcrossover_tx_fifo_level0 = 5'd0;
reg  benchsoc_uartcrossover_tx_fifo_replace = 1'd0;
reg  [3:0] benchsoc_uartcrossover_tx_fifo_produce = 4'd0;
reg  [3:0] benchsoc_uartcrossover_tx_fifo_consume = 4'd0;
reg  [3:0] benchsoc_uartcrossover_tx_fifo_wrport_adr = 4'd0;
wire [9:0] benchsoc_uartcrossover_tx_fifo_wrport_dat_r;
wire benchsoc_uartcrossover_tx_fifo_wrport_we;
wire [9:0] benchsoc_uartcrossover_tx_fifo_wrport_dat_w;
wire benchsoc_uartcrossover_tx_fifo_do_read;
wire [3:0] benchsoc_uartcrossover_tx_fifo_rdport_adr;
wire [9:0] benchsoc_uartcrossover_tx_fifo_rdport_dat_r;
wire benchsoc_uartcrossover_tx_fifo_rdport_re;
wire [4:0] benchsoc_uartcrossover_tx_fifo_level1;
wire [7:0] benchsoc_uartcrossover_tx_fifo_fifo_in_payload_data;
wire benchsoc_uartcrossover_tx_fifo_fifo_in_first;
wire benchsoc_uartcrossover_tx_fifo_fifo_in_last;
wire [7:0] benchsoc_uartcrossover_tx_fifo_fifo_out_payload_data;
wire benchsoc_uartcrossover_tx_fifo_fifo_out_first;
wire benchsoc_uartcrossover_tx_fifo_fifo_out_last;
wire benchsoc_uartcrossover_rx_fifo_sink_valid;
wire benchsoc_uartcrossover_rx_fifo_sink_ready;
wire benchsoc_uartcrossover_rx_fifo_sink_first;
wire benchsoc_uartcrossover_rx_fifo_sink_last;
wire [7:0] benchsoc_uartcrossover_rx_fifo_sink_payload_data;
wire benchsoc_uartcrossover_rx_fifo_source_valid;
wire benchsoc_uartcrossover_rx_fifo_source_ready;
wire benchsoc_uartcrossover_rx_fifo_source_first;
wire benchsoc_uartcrossover_rx_fifo_source_last;
wire [7:0] benchsoc_uartcrossover_rx_fifo_source_payload_data;
wire benchsoc_uartcrossover_rx_fifo_re;
reg  benchsoc_uartcrossover_rx_fifo_readable = 1'd0;
wire benchsoc_uartcrossover_rx_fifo_syncfifo_we;
wire benchsoc_uartcrossover_rx_fifo_syncfifo_writable;
wire benchsoc_uartcrossover_rx_fifo_syncfifo_re;
wire benchsoc_uartcrossover_rx_fifo_syncfifo_readable;
wire [9:0] benchsoc_uartcrossover_rx_fifo_syncfifo_din;
wire [9:0] benchsoc_uartcrossover_rx_fifo_syncfifo_dout;
reg  [4:0] benchsoc_uartcrossover_rx_fifo_level0 = 5'd0;
reg  benchsoc_uartcrossover_rx_fifo_replace = 1'd0;
reg  [3:0] benchsoc_uartcrossover_rx_fifo_produce = 4'd0;
reg  [3:0] benchsoc_uartcrossover_rx_fifo_consume = 4'd0;
reg  [3:0] benchsoc_uartcrossover_rx_fifo_wrport_adr = 4'd0;
wire [9:0] benchsoc_uartcrossover_rx_fifo_wrport_dat_r;
wire benchsoc_uartcrossover_rx_fifo_wrport_we;
wire [9:0] benchsoc_uartcrossover_rx_fifo_wrport_dat_w;
wire benchsoc_uartcrossover_rx_fifo_do_read;
wire [3:0] benchsoc_uartcrossover_rx_fifo_rdport_adr;
wire [9:0] benchsoc_uartcrossover_rx_fifo_rdport_dat_r;
wire benchsoc_uartcrossover_rx_fifo_rdport_re;
wire [4:0] benchsoc_uartcrossover_rx_fifo_level1;
wire [7:0] benchsoc_uartcrossover_rx_fifo_fifo_in_payload_data;
wire benchsoc_uartcrossover_rx_fifo_fifo_in_first;
wire benchsoc_uartcrossover_rx_fifo_fifo_in_last;
wire [7:0] benchsoc_uartcrossover_rx_fifo_fifo_out_payload_data;
wire benchsoc_uartcrossover_rx_fifo_fifo_out_first;
wire benchsoc_uartcrossover_rx_fifo_fifo_out_last;
reg  benchsoc_xover_rxtx_re = 1'd0;
wire [7:0] benchsoc_xover_rxtx_r;
reg  benchsoc_xover_rxtx_we = 1'd0;
wire [7:0] benchsoc_xover_rxtx_w;
wire benchsoc_xover_txfull_status;
wire benchsoc_xover_txfull_we;
reg  benchsoc_xover_txfull_re = 1'd0;
wire benchsoc_xover_rxempty_status;
wire benchsoc_xover_rxempty_we;
reg  benchsoc_xover_rxempty_re = 1'd0;
wire benchsoc_xover_irq;
wire benchsoc_xover_tx_status;
reg  benchsoc_xover_tx_pending = 1'd0;
wire benchsoc_xover_tx_trigger;
reg  benchsoc_xover_tx_clear = 1'd0;
reg  benchsoc_xover_tx_trigger_d = 1'd0;
wire benchsoc_xover_rx_status;
reg  benchsoc_xover_rx_pending = 1'd0;
wire benchsoc_xover_rx_trigger;
reg  benchsoc_xover_rx_clear = 1'd0;
reg  benchsoc_xover_rx_trigger_d = 1'd0;
wire benchsoc_xover_tx0;
wire benchsoc_xover_rx0;
reg  [1:0] benchsoc_xover_status_status = 2'd0;
wire benchsoc_xover_status_we;
reg  benchsoc_xover_status_re = 1'd0;
wire benchsoc_xover_tx1;
wire benchsoc_xover_rx1;
reg  [1:0] benchsoc_xover_pending_status = 2'd0;
wire benchsoc_xover_pending_we;
reg  benchsoc_xover_pending_re = 1'd0;
reg  [1:0] benchsoc_xover_pending_r = 2'd0;
wire benchsoc_xover_tx2;
wire benchsoc_xover_rx2;
reg  [1:0] benchsoc_xover_enable_storage = 2'd0;
reg  benchsoc_xover_enable_re = 1'd0;
wire benchsoc_xover_txempty_status;
wire benchsoc_xover_txempty_we;
reg  benchsoc_xover_txempty_re = 1'd0;
wire benchsoc_xover_rxfull_status;
wire benchsoc_xover_rxfull_we;
reg  benchsoc_xover_rxfull_re = 1'd0;
wire benchsoc_xover_uart_sink_valid;
wire benchsoc_xover_uart_sink_ready;
wire benchsoc_xover_uart_sink_first;
wire benchsoc_xover_uart_sink_last;
wire [7:0] benchsoc_xover_uart_sink_payload_data;
wire benchsoc_xover_uart_source_valid;
wire benchsoc_xover_uart_source_ready;
wire benchsoc_xover_uart_source_first;
wire benchsoc_xover_uart_source_last;
wire [7:0] benchsoc_xover_uart_source_payload_data;
wire benchsoc_xover_tx_fifo_sink_valid;
wire benchsoc_xover_tx_fifo_sink_ready;
reg  benchsoc_xover_tx_fifo_sink_first = 1'd0;
reg  benchsoc_xover_tx_fifo_sink_last = 1'd0;
wire [7:0] benchsoc_xover_tx_fifo_sink_payload_data;
reg  benchsoc_xover_tx_fifo_source_valid = 1'd0;
wire benchsoc_xover_tx_fifo_source_ready;
reg  benchsoc_xover_tx_fifo_source_first = 1'd0;
reg  benchsoc_xover_tx_fifo_source_last = 1'd0;
reg  [7:0] benchsoc_xover_tx_fifo_source_payload_data = 8'd0;
wire benchsoc_xover_rx_fifo_sink_valid;
wire benchsoc_xover_rx_fifo_sink_ready;
wire benchsoc_xover_rx_fifo_sink_first;
wire benchsoc_xover_rx_fifo_sink_last;
wire [7:0] benchsoc_xover_rx_fifo_sink_payload_data;
wire benchsoc_xover_rx_fifo_source_valid;
wire benchsoc_xover_rx_fifo_source_ready;
wire benchsoc_xover_rx_fifo_source_first;
wire benchsoc_xover_rx_fifo_source_last;
wire [7:0] benchsoc_xover_rx_fifo_source_payload_data;
wire benchsoc_xover_rx_fifo_re;
reg  benchsoc_xover_rx_fifo_readable = 1'd0;
wire benchsoc_xover_rx_fifo_syncfifo_we;
wire benchsoc_xover_rx_fifo_syncfifo_writable;
wire benchsoc_xover_rx_fifo_syncfifo_re;
wire benchsoc_xover_rx_fifo_syncfifo_readable;
wire [9:0] benchsoc_xover_rx_fifo_syncfifo_din;
wire [9:0] benchsoc_xover_rx_fifo_syncfifo_dout;
reg  [4:0] benchsoc_xover_rx_fifo_level0 = 5'd0;
reg  benchsoc_xover_rx_fifo_replace = 1'd0;
reg  [3:0] benchsoc_xover_rx_fifo_produce = 4'd0;
reg  [3:0] benchsoc_xover_rx_fifo_consume = 4'd0;
reg  [3:0] benchsoc_xover_rx_fifo_wrport_adr = 4'd0;
wire [9:0] benchsoc_xover_rx_fifo_wrport_dat_r;
wire benchsoc_xover_rx_fifo_wrport_we;
wire [9:0] benchsoc_xover_rx_fifo_wrport_dat_w;
wire benchsoc_xover_rx_fifo_do_read;
wire [3:0] benchsoc_xover_rx_fifo_rdport_adr;
wire [9:0] benchsoc_xover_rx_fifo_rdport_dat_r;
wire benchsoc_xover_rx_fifo_rdport_re;
wire [4:0] benchsoc_xover_rx_fifo_level1;
wire [7:0] benchsoc_xover_rx_fifo_fifo_in_payload_data;
wire benchsoc_xover_rx_fifo_fifo_in_first;
wire benchsoc_xover_rx_fifo_fifo_in_last;
wire [7:0] benchsoc_xover_rx_fifo_fifo_out_payload_data;
wire benchsoc_xover_rx_fifo_fifo_out_first;
wire benchsoc_xover_rx_fifo_fifo_out_last;
wire crg_rst;
(* keep = "true" *) wire sys_clk;
wire sys_rst;
wire sys_ps_clk;
wire crg_reset;
wire crg_locked;
reg  crg_stdby = 1'd0;
wire crg_clkin;
wire crg_clkout0;
wire crg_clkout1;
reg  ethphy_reset_storage = 1'd0;
reg  ethphy_reset_re = 1'd0;
(* keep = "true" *) wire eth_rx_clk;
wire eth_rx_rst;
(* keep = "true" *) wire eth_tx_clk;
wire eth_tx_rst;
wire ethphy_eth_tx_clk_o;
wire ethphy_reset;
wire ethphy_sink_valid;
wire ethphy_sink_ready;
wire ethphy_sink_first;
wire ethphy_sink_last;
wire [7:0] ethphy_sink_payload_data;
wire ethphy_sink_payload_last_be;
wire ethphy_sink_payload_error;
wire ethphy_tx_ctl_oddrx1f;
wire [3:0] ethphy_tx_data_oddrx1f;
reg  ethphy_source_valid = 1'd0;
wire ethphy_source_ready;
reg  ethphy_source_first = 1'd0;
wire ethphy_source_last;
reg  [7:0] ethphy_source_payload_data = 8'd0;
reg  ethphy_source_payload_last_be = 1'd0;
reg  ethphy_source_payload_error = 1'd0;
reg  ethphy_link_status = 1'd0;
reg  ethphy_clock_speed = 1'd0;
reg  ethphy_duplex_status = 1'd0;
reg  [2:0] ethphy_status = 3'd0;
wire ethphy_we;
reg  ethphy_re = 1'd0;
wire ethphy_rx_ctl_delayf;
wire [1:0] ethphy_rx_ctl;
reg  [1:0] ethphy_rx_ctl_reg = 2'd0;
wire [3:0] ethphy_rx_data_delayf;
wire [7:0] ethphy_rx_data;
reg  [7:0] ethphy_rx_data_reg = 8'd0;
reg  [1:0] ethphy_rx_ctl_reg_d = 2'd0;
wire ethphy_last;
wire ethphy_mdc;
wire ethphy_oe;
wire ethphy_w;
reg  [2:0] ethphy__w_storage = 3'd0;
reg  ethphy__w_re = 1'd0;
reg  ethphy_r = 1'd0;
reg  ethphy__r_status = 1'd0;
wire ethphy__r_we;
reg  ethphy__r_re = 1'd0;
wire ethphy_data_w;
wire ethphy_data_oe;
wire ethphy_data_r;
wire benchsoc_ethcore_mac_core_sink_valid;
wire benchsoc_ethcore_mac_core_sink_ready;
wire benchsoc_ethcore_mac_core_sink_first;
wire benchsoc_ethcore_mac_core_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_sink_payload_data;
wire benchsoc_ethcore_mac_core_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_sink_payload_error;
wire benchsoc_ethcore_mac_core_source_valid;
wire benchsoc_ethcore_mac_core_source_ready;
wire benchsoc_ethcore_mac_core_source_first;
wire benchsoc_ethcore_mac_core_source_last;
wire [7:0] benchsoc_ethcore_mac_core_source_payload_data;
wire benchsoc_ethcore_mac_core_source_payload_last_be;
wire benchsoc_ethcore_mac_core_source_payload_error;
wire benchsoc_ethcore_mac_core_sink_sink_valid;
wire benchsoc_ethcore_mac_core_sink_sink_ready;
wire benchsoc_ethcore_mac_core_sink_sink_first;
wire benchsoc_ethcore_mac_core_sink_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_sink_sink_payload_data;
wire benchsoc_ethcore_mac_core_sink_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_sink_sink_payload_error;
wire benchsoc_ethcore_mac_core_source_source_valid;
wire benchsoc_ethcore_mac_core_source_source_ready;
wire benchsoc_ethcore_mac_core_source_source_first;
wire benchsoc_ethcore_mac_core_source_source_last;
wire [7:0] benchsoc_ethcore_mac_core_source_source_payload_data;
wire benchsoc_ethcore_mac_core_source_source_payload_last_be;
wire benchsoc_ethcore_mac_core_source_source_payload_error;
wire benchsoc_ethcore_mac_core_cdc_sink_valid;
wire benchsoc_ethcore_mac_core_cdc_sink_ready;
wire benchsoc_ethcore_mac_core_cdc_sink_first;
wire benchsoc_ethcore_mac_core_cdc_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_cdc_sink_payload_data;
wire benchsoc_ethcore_mac_core_cdc_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_cdc_sink_payload_error;
wire benchsoc_ethcore_mac_core_cdc_source_valid;
wire benchsoc_ethcore_mac_core_cdc_source_ready;
wire benchsoc_ethcore_mac_core_cdc_source_first;
wire benchsoc_ethcore_mac_core_cdc_source_last;
wire [7:0] benchsoc_ethcore_mac_core_cdc_source_payload_data;
wire benchsoc_ethcore_mac_core_cdc_source_payload_last_be;
wire benchsoc_ethcore_mac_core_cdc_source_payload_error;
wire benchsoc_ethcore_mac_core_cdc_asyncfifo_we;
wire benchsoc_ethcore_mac_core_cdc_asyncfifo_writable;
wire benchsoc_ethcore_mac_core_cdc_asyncfifo_re;
wire benchsoc_ethcore_mac_core_cdc_asyncfifo_readable;
wire [11:0] benchsoc_ethcore_mac_core_cdc_asyncfifo_din;
wire [11:0] benchsoc_ethcore_mac_core_cdc_asyncfifo_dout;
wire benchsoc_ethcore_mac_core_cdc_graycounter0_ce;
reg  [5:0] benchsoc_ethcore_mac_core_cdc_graycounter0_q = 6'd0;
wire [5:0] benchsoc_ethcore_mac_core_cdc_graycounter0_q_next;
reg  [5:0] benchsoc_ethcore_mac_core_cdc_graycounter0_q_binary = 6'd0;
reg  [5:0] benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary = 6'd0;
wire benchsoc_ethcore_mac_core_cdc_graycounter1_ce;
reg  [5:0] benchsoc_ethcore_mac_core_cdc_graycounter1_q = 6'd0;
wire [5:0] benchsoc_ethcore_mac_core_cdc_graycounter1_q_next;
reg  [5:0] benchsoc_ethcore_mac_core_cdc_graycounter1_q_binary = 6'd0;
reg  [5:0] benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary = 6'd0;
wire [5:0] benchsoc_ethcore_mac_core_cdc_produce_rdomain;
wire [5:0] benchsoc_ethcore_mac_core_cdc_consume_wdomain;
wire [4:0] benchsoc_ethcore_mac_core_cdc_wrport_adr;
wire [11:0] benchsoc_ethcore_mac_core_cdc_wrport_dat_r;
wire benchsoc_ethcore_mac_core_cdc_wrport_we;
wire [11:0] benchsoc_ethcore_mac_core_cdc_wrport_dat_w;
wire [4:0] benchsoc_ethcore_mac_core_cdc_rdport_adr;
wire [11:0] benchsoc_ethcore_mac_core_cdc_rdport_dat_r;
wire [7:0] benchsoc_ethcore_mac_core_cdc_fifo_in_payload_data;
wire benchsoc_ethcore_mac_core_cdc_fifo_in_payload_last_be;
wire benchsoc_ethcore_mac_core_cdc_fifo_in_payload_error;
wire benchsoc_ethcore_mac_core_cdc_fifo_in_first;
wire benchsoc_ethcore_mac_core_cdc_fifo_in_last;
wire [7:0] benchsoc_ethcore_mac_core_cdc_fifo_out_payload_data;
wire benchsoc_ethcore_mac_core_cdc_fifo_out_payload_last_be;
wire benchsoc_ethcore_mac_core_cdc_fifo_out_payload_error;
wire benchsoc_ethcore_mac_core_cdc_fifo_out_first;
wire benchsoc_ethcore_mac_core_cdc_fifo_out_last;
wire benchsoc_ethcore_mac_core_tx_padding_sink_valid;
reg  benchsoc_ethcore_mac_core_tx_padding_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_core_tx_padding_sink_first;
wire benchsoc_ethcore_mac_core_tx_padding_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_tx_padding_sink_payload_data;
wire benchsoc_ethcore_mac_core_tx_padding_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_tx_padding_sink_payload_error;
reg  benchsoc_ethcore_mac_core_tx_padding_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_tx_padding_source_ready;
reg  benchsoc_ethcore_mac_core_tx_padding_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_tx_padding_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_tx_padding_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_tx_padding_source_payload_error = 1'd0;
reg  [15:0] benchsoc_ethcore_mac_core_tx_padding_counter = 16'd0;
wire benchsoc_ethcore_mac_core_tx_padding_counter_done;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_first;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_data;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_error;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_error = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data0 = 8'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be0 = 1'd0;
reg  [31:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_value = 32'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_error = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be1 = 1'd0;
wire [7:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1;
wire [31:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last;
reg  [31:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next = 32'd0;
reg  [31:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reg = 32'd4294967295;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_ce = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reset = 1'd0;
reg  [31:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet = 32'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2 = 1'd0;
reg  [1:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt = 2'd3;
wire benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt_done;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing1 = 1'd0;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_sink_valid;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_sink_ready;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_sink_first;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_data;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_error;
reg  benchsoc_ethcore_mac_core_bufferizeendpoints_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_bufferizeendpoints_source_ready;
reg  benchsoc_ethcore_mac_core_bufferizeendpoints_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_bufferizeendpoints_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_error = 1'd0;
wire benchsoc_ethcore_mac_core_tx_preamble_sink_valid;
reg  benchsoc_ethcore_mac_core_tx_preamble_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_core_tx_preamble_sink_first;
wire benchsoc_ethcore_mac_core_tx_preamble_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_tx_preamble_sink_payload_data;
wire benchsoc_ethcore_mac_core_tx_preamble_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_tx_preamble_sink_payload_error;
reg  benchsoc_ethcore_mac_core_tx_preamble_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_tx_preamble_source_ready;
reg  benchsoc_ethcore_mac_core_tx_preamble_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_tx_preamble_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_tx_preamble_source_payload_data = 8'd0;
wire benchsoc_ethcore_mac_core_tx_preamble_source_payload_last_be;
reg  benchsoc_ethcore_mac_core_tx_preamble_source_payload_error = 1'd0;
reg  [63:0] benchsoc_ethcore_mac_core_tx_preamble_preamble = 64'd15372286728091293013;
reg  [2:0] benchsoc_ethcore_mac_core_tx_preamble_count = 3'd0;
wire benchsoc_ethcore_mac_core_tx_gap_sink_valid;
reg  benchsoc_ethcore_mac_core_tx_gap_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_core_tx_gap_sink_first;
wire benchsoc_ethcore_mac_core_tx_gap_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_tx_gap_sink_payload_data;
wire benchsoc_ethcore_mac_core_tx_gap_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_tx_gap_sink_payload_error;
reg  benchsoc_ethcore_mac_core_tx_gap_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_tx_gap_source_ready;
reg  benchsoc_ethcore_mac_core_tx_gap_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_tx_gap_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_tx_gap_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_core_tx_gap_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_tx_gap_source_payload_error = 1'd0;
reg  [3:0] benchsoc_ethcore_mac_core_tx_gap_counter = 4'd0;
reg  [31:0] benchsoc_ethcore_mac_core_preamble_errors_status = 32'd0;
reg  [31:0] benchsoc_ethcore_mac_core_crc_errors_status = 32'd0;
wire benchsoc_ethcore_mac_core_rx_preamble_sink_valid;
reg  benchsoc_ethcore_mac_core_rx_preamble_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_core_rx_preamble_sink_first;
wire benchsoc_ethcore_mac_core_rx_preamble_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_preamble_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_preamble_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_preamble_sink_payload_error;
reg  benchsoc_ethcore_mac_core_rx_preamble_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_rx_preamble_source_ready;
reg  benchsoc_ethcore_mac_core_rx_preamble_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_preamble_source_last = 1'd0;
wire [7:0] benchsoc_ethcore_mac_core_rx_preamble_source_payload_data;
wire benchsoc_ethcore_mac_core_rx_preamble_source_payload_last_be;
reg  benchsoc_ethcore_mac_core_rx_preamble_source_payload_error = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_preamble_error = 1'd0;
reg  [63:0] benchsoc_ethcore_mac_core_rx_preamble_preamble = 64'd15372286728091293013;
wire benchsoc_ethcore_mac_core_pulsesynchronizer0_i;
wire benchsoc_ethcore_mac_core_pulsesynchronizer0_o;
reg  benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_i = 1'd0;
wire benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o;
reg  benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o_r = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid;
reg  benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_sink_sink_first;
wire benchsoc_ethcore_mac_core_rx_crc_sink_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_error;
reg  benchsoc_ethcore_mac_core_rx_crc_source_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_source_source_ready;
reg  benchsoc_ethcore_mac_core_rx_crc_source_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_source_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_rx_crc_source_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_error = 1'd0;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_crc_data0;
wire benchsoc_ethcore_mac_core_rx_crc_crc_last_be0;
reg  [31:0] benchsoc_ethcore_mac_core_rx_crc_crc_value = 32'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_error0 = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_last_be1 = 1'd0;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_crc_data1;
wire [31:0] benchsoc_ethcore_mac_core_rx_crc_crc_last;
reg  [31:0] benchsoc_ethcore_mac_core_rx_crc_crc_next = 32'd0;
reg  [31:0] benchsoc_ethcore_mac_core_rx_crc_crc_reg = 32'd4294967295;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_ce = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_reset = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_valid = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_ready;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_first;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_error;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_valid;
reg  benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_ready = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_first;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_data;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_error;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_we;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_writable;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_re;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_readable;
wire [11:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_din;
wire [11:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_dout;
reg  [2:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_level = 3'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_syncfifo_replace = 1'd0;
reg  [2:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce = 3'd0;
reg  [2:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume = 3'd0;
reg  [2:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_adr = 3'd0;
wire [11:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_dat_r;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_we;
wire [11:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_dat_w;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_do_read;
wire [2:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_rdport_adr;
wire [11:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_rdport_dat_r;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_data;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_error;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_first;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_data;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_error;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_first;
wire benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_last;
reg  benchsoc_ethcore_mac_core_rx_crc_fifo_reset = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_fifo_in;
wire benchsoc_ethcore_mac_core_rx_crc_fifo_out;
wire benchsoc_ethcore_mac_core_rx_crc_fifo_full;
reg  benchsoc_ethcore_mac_core_rx_crc_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_error1 = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_sink_valid;
wire benchsoc_ethcore_mac_core_rx_crc_sink_ready;
wire benchsoc_ethcore_mac_core_rx_crc_sink_first;
wire benchsoc_ethcore_mac_core_rx_crc_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_crc_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_crc_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_crc_sink_payload_error;
reg  benchsoc_ethcore_mac_core_rx_crc_source_valid = 1'd0;
wire benchsoc_ethcore_mac_core_rx_crc_source_ready;
reg  benchsoc_ethcore_mac_core_rx_crc_source_first = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_core_rx_crc_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_source_payload_error = 1'd0;
wire benchsoc_ethcore_mac_core_pulsesynchronizer1_i;
wire benchsoc_ethcore_mac_core_pulsesynchronizer1_o;
reg  benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_i = 1'd0;
wire benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o;
reg  benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o_r = 1'd0;
wire benchsoc_ethcore_mac_core_rx_padding_sink_valid;
wire benchsoc_ethcore_mac_core_rx_padding_sink_ready;
wire benchsoc_ethcore_mac_core_rx_padding_sink_first;
wire benchsoc_ethcore_mac_core_rx_padding_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_padding_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_padding_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_padding_sink_payload_error;
wire benchsoc_ethcore_mac_core_rx_padding_source_valid;
wire benchsoc_ethcore_mac_core_rx_padding_source_ready;
wire benchsoc_ethcore_mac_core_rx_padding_source_first;
wire benchsoc_ethcore_mac_core_rx_padding_source_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_padding_source_payload_data;
wire benchsoc_ethcore_mac_core_rx_padding_source_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_padding_source_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_sink_sink_valid;
wire benchsoc_ethcore_mac_core_rx_cdc_sink_sink_ready;
wire benchsoc_ethcore_mac_core_rx_cdc_sink_sink_first;
wire benchsoc_ethcore_mac_core_rx_cdc_sink_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_source_source_valid;
wire benchsoc_ethcore_mac_core_rx_cdc_source_source_ready;
wire benchsoc_ethcore_mac_core_rx_cdc_source_source_first;
wire benchsoc_ethcore_mac_core_rx_cdc_source_source_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_data;
wire benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_valid;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_ready;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_first;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_data;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_source_valid;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_source_ready;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_source_first;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_source_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_data;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_we;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_writable;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_re;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_readable;
wire [11:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_din;
wire [11:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_dout;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_ce;
reg  [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q = 6'd0;
wire [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next;
reg  [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_binary = 6'd0;
reg  [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary = 6'd0;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_ce;
reg  [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q = 6'd0;
wire [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next;
reg  [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_binary = 6'd0;
reg  [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary = 6'd0;
wire [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_produce_rdomain;
wire [5:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_consume_wdomain;
wire [4:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_adr;
wire [11:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_dat_r;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_we;
wire [11:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_dat_w;
wire [4:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_rdport_adr;
wire [11:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_rdport_dat_r;
wire [7:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_data;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_first;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_last;
wire [7:0] benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_data;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_last_be;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_error;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_first;
wire benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_last;
reg  benchsoc_ethcore_mac_crossbar_source_valid = 1'd0;
wire benchsoc_ethcore_mac_crossbar_source_ready;
reg  benchsoc_ethcore_mac_crossbar_source_first = 1'd0;
reg  benchsoc_ethcore_mac_crossbar_source_last = 1'd0;
reg  [15:0] benchsoc_ethcore_mac_crossbar_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_mac_crossbar_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_mac_crossbar_source_payload_target_mac = 48'd0;
reg  [7:0] benchsoc_ethcore_mac_crossbar_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_crossbar_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_mac_crossbar_source_payload_error = 1'd0;
wire benchsoc_ethcore_mac_crossbar_sink_valid;
reg  benchsoc_ethcore_mac_crossbar_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_crossbar_sink_first;
wire benchsoc_ethcore_mac_crossbar_sink_last;
wire [15:0] benchsoc_ethcore_mac_crossbar_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_mac_crossbar_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_mac_crossbar_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_mac_crossbar_sink_payload_data;
wire benchsoc_ethcore_mac_crossbar_sink_payload_last_be;
wire benchsoc_ethcore_mac_crossbar_sink_payload_error;
wire benchsoc_ethcore_mac_packetizer_sink_valid;
reg  benchsoc_ethcore_mac_packetizer_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_packetizer_sink_first;
wire benchsoc_ethcore_mac_packetizer_sink_last;
wire [15:0] benchsoc_ethcore_mac_packetizer_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_mac_packetizer_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_mac_packetizer_sink_payload_data;
wire benchsoc_ethcore_mac_packetizer_sink_payload_last_be;
wire benchsoc_ethcore_mac_packetizer_sink_payload_error;
reg  benchsoc_ethcore_mac_packetizer_source_valid = 1'd0;
wire benchsoc_ethcore_mac_packetizer_source_ready;
reg  benchsoc_ethcore_mac_packetizer_source_first = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_mac_packetizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_packetizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_mac_packetizer_source_payload_error;
reg  [111:0] benchsoc_ethcore_mac_packetizer_header = 112'd0;
reg  [111:0] benchsoc_ethcore_mac_packetizer_sr = 112'd0;
reg  benchsoc_ethcore_mac_packetizer_sr_load = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_sr_shift = 1'd0;
reg  [3:0] benchsoc_ethcore_mac_packetizer_count = 4'd0;
reg  benchsoc_ethcore_mac_packetizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_mac_packetizer_sink_last_be;
wire benchsoc_ethcore_mac_packetizer_new_last_be;
reg  benchsoc_ethcore_mac_packetizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_mac_packetizer_in_data_copy;
reg  benchsoc_ethcore_mac_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_is_ongoing2 = 1'd0;
wire benchsoc_ethcore_mac_depacketizer_sink_valid;
reg  benchsoc_ethcore_mac_depacketizer_sink_ready = 1'd0;
wire benchsoc_ethcore_mac_depacketizer_sink_first;
wire benchsoc_ethcore_mac_depacketizer_sink_last;
wire [7:0] benchsoc_ethcore_mac_depacketizer_sink_payload_data;
wire benchsoc_ethcore_mac_depacketizer_sink_payload_last_be;
wire benchsoc_ethcore_mac_depacketizer_sink_payload_error;
reg  benchsoc_ethcore_mac_depacketizer_source_valid = 1'd0;
wire benchsoc_ethcore_mac_depacketizer_source_ready;
reg  benchsoc_ethcore_mac_depacketizer_source_first = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_source_last = 1'd0;
wire [15:0] benchsoc_ethcore_mac_depacketizer_source_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_mac_depacketizer_source_payload_sender_mac;
wire [47:0] benchsoc_ethcore_mac_depacketizer_source_payload_target_mac;
reg  [7:0] benchsoc_ethcore_mac_depacketizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_mac_depacketizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_mac_depacketizer_source_payload_error;
wire [111:0] benchsoc_ethcore_mac_depacketizer_header;
reg  [111:0] benchsoc_ethcore_mac_depacketizer_sr = 112'd0;
reg  benchsoc_ethcore_mac_depacketizer_sr_shift = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_sr_shift_leftover = 1'd0;
reg  [3:0] benchsoc_ethcore_mac_depacketizer_count = 4'd0;
reg  benchsoc_ethcore_mac_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_mac_depacketizer_sink_last_be;
wire benchsoc_ethcore_mac_depacketizer_new_last_be;
reg  benchsoc_ethcore_mac_depacketizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_mac_depacketizer_is_in_copy;
reg  benchsoc_ethcore_mac_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_is_ongoing3 = 1'd0;
wire benchsoc_ethcore_arp_tx_sink_sink_valid;
reg  benchsoc_ethcore_arp_tx_sink_sink_ready = 1'd0;
wire benchsoc_ethcore_arp_tx_sink_sink_first;
wire benchsoc_ethcore_arp_tx_sink_sink_last;
wire benchsoc_ethcore_arp_tx_sink_sink_payload_reply;
wire benchsoc_ethcore_arp_tx_sink_sink_payload_request;
wire [31:0] benchsoc_ethcore_arp_tx_sink_sink_payload_ip_address;
wire [47:0] benchsoc_ethcore_arp_tx_sink_sink_payload_mac_address;
reg  benchsoc_ethcore_arp_tx_source_source_valid = 1'd0;
wire benchsoc_ethcore_arp_tx_source_source_ready;
wire benchsoc_ethcore_arp_tx_source_source_first;
wire benchsoc_ethcore_arp_tx_source_source_last;
reg  [15:0] benchsoc_ethcore_arp_tx_source_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_arp_tx_source_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_arp_tx_source_source_payload_target_mac = 48'd0;
wire [7:0] benchsoc_ethcore_arp_tx_source_source_payload_data;
wire benchsoc_ethcore_arp_tx_source_source_payload_last_be;
wire benchsoc_ethcore_arp_tx_source_source_payload_error;
reg  [5:0] benchsoc_ethcore_arp_tx_counter = 6'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_sink_valid = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_sink_ready = 1'd0;
wire benchsoc_ethcore_arp_tx_packetizer_sink_last;
reg  [7:0] benchsoc_ethcore_arp_tx_packetizer_sink_payload_data = 8'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_sink_payload_last_be = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_sink_payload_error = 1'd0;
wire [7:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_hwsize;
wire [15:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_hwtype;
reg  [15:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_opcode = 16'd0;
wire [15:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_proto;
wire [7:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_protosize;
wire [31:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_ip;
wire [47:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac;
wire [31:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_target_ip;
reg  [47:0] benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac = 48'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_valid = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_ready = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_first = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_last = 1'd0;
reg  [15:0] benchsoc_ethcore_arp_tx_packetizer_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_arp_tx_packetizer_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_arp_tx_packetizer_source_payload_target_mac = 48'd0;
reg  [7:0] benchsoc_ethcore_arp_tx_packetizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_arp_tx_packetizer_source_payload_error;
reg  [223:0] benchsoc_ethcore_arp_tx_packetizer_header = 224'd0;
reg  [223:0] benchsoc_ethcore_arp_tx_packetizer_sr = 224'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_sr_load = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_sr_shift = 1'd0;
reg  [4:0] benchsoc_ethcore_arp_tx_packetizer_count = 5'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_arp_tx_packetizer_sink_last_be;
wire benchsoc_ethcore_arp_tx_packetizer_new_last_be;
reg  benchsoc_ethcore_arp_tx_packetizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_arp_tx_packetizer_in_data_copy;
reg  benchsoc_ethcore_arp_tx_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_is_ongoing2 = 1'd0;
wire benchsoc_ethcore_arp_rx_sink_sink_valid;
wire benchsoc_ethcore_arp_rx_sink_sink_ready;
wire benchsoc_ethcore_arp_rx_sink_sink_first;
wire benchsoc_ethcore_arp_rx_sink_sink_last;
wire [15:0] benchsoc_ethcore_arp_rx_sink_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_arp_rx_sink_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_arp_rx_sink_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_arp_rx_sink_sink_payload_data;
wire benchsoc_ethcore_arp_rx_sink_sink_payload_last_be;
wire benchsoc_ethcore_arp_rx_sink_sink_payload_error;
reg  benchsoc_ethcore_arp_rx_source_source_valid = 1'd0;
wire benchsoc_ethcore_arp_rx_source_source_ready;
reg  benchsoc_ethcore_arp_rx_source_source_first = 1'd0;
reg  benchsoc_ethcore_arp_rx_source_source_last = 1'd0;
reg  benchsoc_ethcore_arp_rx_source_source_payload_reply = 1'd0;
reg  benchsoc_ethcore_arp_rx_source_source_payload_request = 1'd0;
wire [31:0] benchsoc_ethcore_arp_rx_source_source_payload_ip_address;
wire [47:0] benchsoc_ethcore_arp_rx_source_source_payload_mac_address;
wire benchsoc_ethcore_arp_rx_depacketizer_sink_valid;
reg  benchsoc_ethcore_arp_rx_depacketizer_sink_ready = 1'd0;
wire benchsoc_ethcore_arp_rx_depacketizer_sink_first;
wire benchsoc_ethcore_arp_rx_depacketizer_sink_last;
wire [15:0] benchsoc_ethcore_arp_rx_depacketizer_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_arp_rx_depacketizer_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_arp_rx_depacketizer_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_arp_rx_depacketizer_sink_payload_data;
wire benchsoc_ethcore_arp_rx_depacketizer_sink_payload_last_be;
wire benchsoc_ethcore_arp_rx_depacketizer_sink_payload_error;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_valid = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_ready = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_arp_rx_depacketizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_arp_rx_depacketizer_source_payload_error;
wire [7:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_hwsize;
wire [15:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_hwtype;
wire [15:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_opcode;
wire [15:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_proto;
wire [7:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_protosize;
wire [31:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_sender_ip;
wire [47:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_sender_mac;
wire [31:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_target_ip;
wire [47:0] benchsoc_ethcore_arp_rx_depacketizer_source_param_target_mac;
wire [223:0] benchsoc_ethcore_arp_rx_depacketizer_header;
reg  [223:0] benchsoc_ethcore_arp_rx_depacketizer_sr = 224'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_sr_shift = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_sr_shift_leftover = 1'd0;
reg  [4:0] benchsoc_ethcore_arp_rx_depacketizer_count = 5'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_arp_rx_depacketizer_sink_last_be;
wire benchsoc_ethcore_arp_rx_depacketizer_new_last_be;
reg  benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_arp_rx_depacketizer_is_in_copy;
reg  benchsoc_ethcore_arp_rx_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_is_ongoing3 = 1'd0;
reg  benchsoc_ethcore_arp_rx_valid = 1'd0;
reg  benchsoc_ethcore_arp_rx_reply = 1'd0;
reg  benchsoc_ethcore_arp_rx_request = 1'd0;
wire benchsoc_ethcore_arp_table_sink_valid;
reg  benchsoc_ethcore_arp_table_sink_ready = 1'd0;
wire benchsoc_ethcore_arp_table_sink_first;
wire benchsoc_ethcore_arp_table_sink_last;
wire benchsoc_ethcore_arp_table_sink_payload_reply;
wire benchsoc_ethcore_arp_table_sink_payload_request;
wire [31:0] benchsoc_ethcore_arp_table_sink_payload_ip_address;
wire [47:0] benchsoc_ethcore_arp_table_sink_payload_mac_address;
reg  benchsoc_ethcore_arp_table_source_valid = 1'd0;
wire benchsoc_ethcore_arp_table_source_ready;
reg  benchsoc_ethcore_arp_table_source_first = 1'd0;
reg  benchsoc_ethcore_arp_table_source_last = 1'd0;
reg  benchsoc_ethcore_arp_table_source_payload_reply = 1'd0;
reg  benchsoc_ethcore_arp_table_source_payload_request = 1'd0;
reg  [31:0] benchsoc_ethcore_arp_table_source_payload_ip_address = 32'd0;
reg  [47:0] benchsoc_ethcore_arp_table_source_payload_mac_address = 48'd0;
reg  benchsoc_ethcore_arp_table_request_valid = 1'd0;
reg  benchsoc_ethcore_arp_table_request_ready = 1'd0;
wire [31:0] benchsoc_ethcore_arp_table_request_payload_ip_address;
reg  benchsoc_ethcore_arp_table_response_valid = 1'd0;
reg  benchsoc_ethcore_arp_table_response_ready = 1'd0;
reg  benchsoc_ethcore_arp_table_response_payload_failed = 1'd0;
wire [47:0] benchsoc_ethcore_arp_table_response_payload_mac_address;
reg  benchsoc_ethcore_arp_table_request_pending = 1'd0;
reg  benchsoc_ethcore_arp_table_request_pending_clr = 1'd0;
reg  benchsoc_ethcore_arp_table_request_pending_set = 1'd0;
reg  [31:0] benchsoc_ethcore_arp_table_request_ip_address = 32'd0;
reg  benchsoc_ethcore_arp_table_request_ip_address_reset = 1'd0;
reg  benchsoc_ethcore_arp_table_request_ip_address_update = 1'd0;
wire benchsoc_ethcore_arp_table_request_timer_wait;
wire benchsoc_ethcore_arp_table_request_timer_done;
reg  [22:0] benchsoc_ethcore_arp_table_request_timer_count = 23'd5000000;
reg  [2:0] benchsoc_ethcore_arp_table_request_counter = 3'd0;
reg  benchsoc_ethcore_arp_table_request_counter_reset = 1'd0;
reg  benchsoc_ethcore_arp_table_request_counter_ce = 1'd0;
reg  benchsoc_ethcore_arp_table_update = 1'd0;
reg  benchsoc_ethcore_arp_table_cached_valid = 1'd0;
reg  [31:0] benchsoc_ethcore_arp_table_cached_ip_address = 32'd0;
reg  [47:0] benchsoc_ethcore_arp_table_cached_mac_address = 48'd0;
wire benchsoc_ethcore_arp_table_cached_timer_wait;
wire benchsoc_ethcore_arp_table_cached_timer_done;
reg  [28:0] benchsoc_ethcore_arp_table_cached_timer_count = 29'd500000000;
wire benchsoc_ethcore_arp_mac_port_sink_valid;
reg  benchsoc_ethcore_arp_mac_port_sink_ready = 1'd0;
wire benchsoc_ethcore_arp_mac_port_sink_first;
wire benchsoc_ethcore_arp_mac_port_sink_last;
wire [15:0] benchsoc_ethcore_arp_mac_port_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_arp_mac_port_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_arp_mac_port_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_arp_mac_port_sink_payload_data;
wire benchsoc_ethcore_arp_mac_port_sink_payload_last_be;
wire benchsoc_ethcore_arp_mac_port_sink_payload_error;
reg  benchsoc_ethcore_arp_mac_port_source_valid = 1'd0;
wire benchsoc_ethcore_arp_mac_port_source_ready;
reg  benchsoc_ethcore_arp_mac_port_source_first = 1'd0;
reg  benchsoc_ethcore_arp_mac_port_source_last = 1'd0;
reg  [15:0] benchsoc_ethcore_arp_mac_port_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_arp_mac_port_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_arp_mac_port_source_payload_target_mac = 48'd0;
reg  [7:0] benchsoc_ethcore_arp_mac_port_source_payload_data = 8'd0;
reg  benchsoc_ethcore_arp_mac_port_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_arp_mac_port_source_payload_error = 1'd0;
wire benchsoc_ethcore_ip_tx_sink_sink_valid;
wire benchsoc_ethcore_ip_tx_sink_sink_ready;
wire benchsoc_ethcore_ip_tx_sink_sink_first;
wire benchsoc_ethcore_ip_tx_sink_sink_last;
wire [7:0] benchsoc_ethcore_ip_tx_sink_sink_payload_data;
wire benchsoc_ethcore_ip_tx_sink_sink_payload_last_be;
wire benchsoc_ethcore_ip_tx_sink_sink_payload_error;
wire [15:0] benchsoc_ethcore_ip_tx_sink_sink_param_length;
wire [7:0] benchsoc_ethcore_ip_tx_sink_sink_param_protocol;
wire [31:0] benchsoc_ethcore_ip_tx_sink_sink_param_ip_address;
reg  benchsoc_ethcore_ip_tx_source_source_valid = 1'd0;
wire benchsoc_ethcore_ip_tx_source_source_ready;
reg  benchsoc_ethcore_ip_tx_source_source_first = 1'd0;
reg  benchsoc_ethcore_ip_tx_source_source_last = 1'd0;
reg  [15:0] benchsoc_ethcore_ip_tx_source_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_ip_tx_source_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_ip_tx_source_source_payload_target_mac = 48'd0;
reg  [7:0] benchsoc_ethcore_ip_tx_source_source_payload_data = 8'd0;
reg  benchsoc_ethcore_ip_tx_source_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_ip_tx_source_source_payload_error = 1'd0;
reg  benchsoc_ethcore_ip_tx_target_unreachable = 1'd0;
wire [159:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_header;
wire [15:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_value;
wire benchsoc_ethcore_ip_tx_liteethipv4checksum_done;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r = 17'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next0;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next0 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum0 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next1;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next1 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum1 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next2;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next2 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum2 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next3;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next3 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum3 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next4;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next4 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum4 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next5;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next5 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum5 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next6;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next6 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum6 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next7;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next7 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum7 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next8;
reg  [16:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next8 = 17'd0;
reg  benchsoc_ethcore_ip_tx_liteethipv4checksum8 = 1'd0;
reg  [3:0] benchsoc_ethcore_ip_tx_liteethipv4checksum_counter = 4'd0;
wire benchsoc_ethcore_ip_tx_liteethipv4checksum_counter_ce;
wire benchsoc_ethcore_ip_tx_ce;
wire benchsoc_ethcore_ip_tx_reset;
wire benchsoc_ethcore_ip_tx_packetizer_sink_valid;
reg  benchsoc_ethcore_ip_tx_packetizer_sink_ready = 1'd0;
wire benchsoc_ethcore_ip_tx_packetizer_sink_last;
wire [7:0] benchsoc_ethcore_ip_tx_packetizer_sink_payload_data;
wire benchsoc_ethcore_ip_tx_packetizer_sink_payload_last_be;
reg  benchsoc_ethcore_ip_tx_packetizer_sink_payload_error = 1'd0;
wire [15:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_checksum;
wire [15:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_identification;
wire [3:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_ihl;
wire [7:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_protocol;
wire [31:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_sender_ip;
wire [31:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_target_ip;
wire [15:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_total_length;
wire [7:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_ttl;
wire [3:0] benchsoc_ethcore_ip_tx_packetizer_sink_param_version;
reg  benchsoc_ethcore_ip_tx_packetizer_source_valid = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_ready = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_first = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_last = 1'd0;
reg  [15:0] benchsoc_ethcore_ip_tx_packetizer_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_ip_tx_packetizer_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_ip_tx_packetizer_source_payload_target_mac = 48'd0;
reg  [7:0] benchsoc_ethcore_ip_tx_packetizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_ip_tx_packetizer_source_payload_error;
reg  [159:0] benchsoc_ethcore_ip_tx_packetizer_header = 160'd0;
reg  [159:0] benchsoc_ethcore_ip_tx_packetizer_sr = 160'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_sr_load = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_sr_shift = 1'd0;
reg  [4:0] benchsoc_ethcore_ip_tx_packetizer_count = 5'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_ip_tx_packetizer_sink_last_be;
wire benchsoc_ethcore_ip_tx_packetizer_new_last_be;
reg  benchsoc_ethcore_ip_tx_packetizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_ip_tx_packetizer_in_data_copy;
reg  benchsoc_ethcore_ip_tx_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_is_ongoing2 = 1'd0;
reg  [47:0] benchsoc_ethcore_ip_tx_target_mac = 48'd0;
wire benchsoc_ethcore_ip_rx_sink_sink_valid;
wire benchsoc_ethcore_ip_rx_sink_sink_ready;
wire benchsoc_ethcore_ip_rx_sink_sink_first;
wire benchsoc_ethcore_ip_rx_sink_sink_last;
wire [15:0] benchsoc_ethcore_ip_rx_sink_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_ip_rx_sink_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_ip_rx_sink_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_ip_rx_sink_sink_payload_data;
wire benchsoc_ethcore_ip_rx_sink_sink_payload_last_be;
wire benchsoc_ethcore_ip_rx_sink_sink_payload_error;
reg  benchsoc_ethcore_ip_rx_source_source_valid = 1'd0;
wire benchsoc_ethcore_ip_rx_source_source_ready;
reg  benchsoc_ethcore_ip_rx_source_source_first = 1'd0;
wire benchsoc_ethcore_ip_rx_source_source_last;
wire [7:0] benchsoc_ethcore_ip_rx_source_source_payload_data;
wire benchsoc_ethcore_ip_rx_source_source_payload_last_be;
wire benchsoc_ethcore_ip_rx_source_source_payload_error;
wire [15:0] benchsoc_ethcore_ip_rx_source_source_param_length;
wire [7:0] benchsoc_ethcore_ip_rx_source_source_param_protocol;
wire [31:0] benchsoc_ethcore_ip_rx_source_source_param_ip_address;
wire benchsoc_ethcore_ip_rx_depacketizer_sink_valid;
reg  benchsoc_ethcore_ip_rx_depacketizer_sink_ready = 1'd0;
wire benchsoc_ethcore_ip_rx_depacketizer_sink_first;
wire benchsoc_ethcore_ip_rx_depacketizer_sink_last;
wire [15:0] benchsoc_ethcore_ip_rx_depacketizer_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_ip_rx_depacketizer_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_ip_rx_depacketizer_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_ip_rx_depacketizer_sink_payload_data;
wire benchsoc_ethcore_ip_rx_depacketizer_sink_payload_last_be;
wire benchsoc_ethcore_ip_rx_depacketizer_sink_payload_error;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_valid = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_ready = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_ip_rx_depacketizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_ip_rx_depacketizer_source_payload_error;
wire [15:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_checksum;
wire [15:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_identification;
wire [3:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_ihl;
wire [7:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_protocol;
wire [31:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_sender_ip;
wire [31:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_target_ip;
wire [15:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_total_length;
wire [7:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_ttl;
wire [3:0] benchsoc_ethcore_ip_rx_depacketizer_source_param_version;
wire [159:0] benchsoc_ethcore_ip_rx_depacketizer_header;
reg  [159:0] benchsoc_ethcore_ip_rx_depacketizer_sr = 160'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_sr_shift = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_sr_shift_leftover = 1'd0;
reg  [4:0] benchsoc_ethcore_ip_rx_depacketizer_count = 5'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_ip_rx_depacketizer_sink_last_be;
wire benchsoc_ethcore_ip_rx_depacketizer_new_last_be;
reg  benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_ip_rx_depacketizer_is_in_copy;
reg  benchsoc_ethcore_ip_rx_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_is_ongoing3 = 1'd0;
wire [159:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_header;
wire [15:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_value;
wire benchsoc_ethcore_ip_rx_liteethipv4checksum_done;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r = 17'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next0;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next0 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum0 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next1;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next1 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum1 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next2;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next2 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum2 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next3;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next3 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum3 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next4;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next4 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum4 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next5;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next5 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum5 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next6;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next6 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum6 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next7;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next7 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum7 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next8;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next8 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum8 = 1'd0;
wire [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next9;
reg  [16:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next9 = 17'd0;
reg  benchsoc_ethcore_ip_rx_liteethipv4checksum9 = 1'd0;
reg  [3:0] benchsoc_ethcore_ip_rx_liteethipv4checksum_counter = 4'd0;
wire benchsoc_ethcore_ip_rx_liteethipv4checksum_counter_ce;
wire benchsoc_ethcore_ip_rx_ce;
wire benchsoc_ethcore_ip_rx_reset;
wire benchsoc_ethcore_ip_mac_port_sink_valid;
reg  benchsoc_ethcore_ip_mac_port_sink_ready = 1'd0;
wire benchsoc_ethcore_ip_mac_port_sink_first;
wire benchsoc_ethcore_ip_mac_port_sink_last;
wire [15:0] benchsoc_ethcore_ip_mac_port_sink_payload_ethernet_type;
wire [47:0] benchsoc_ethcore_ip_mac_port_sink_payload_sender_mac;
wire [47:0] benchsoc_ethcore_ip_mac_port_sink_payload_target_mac;
wire [7:0] benchsoc_ethcore_ip_mac_port_sink_payload_data;
wire benchsoc_ethcore_ip_mac_port_sink_payload_last_be;
wire benchsoc_ethcore_ip_mac_port_sink_payload_error;
reg  benchsoc_ethcore_ip_mac_port_source_valid = 1'd0;
wire benchsoc_ethcore_ip_mac_port_source_ready;
reg  benchsoc_ethcore_ip_mac_port_source_first = 1'd0;
reg  benchsoc_ethcore_ip_mac_port_source_last = 1'd0;
reg  [15:0] benchsoc_ethcore_ip_mac_port_source_payload_ethernet_type = 16'd0;
reg  [47:0] benchsoc_ethcore_ip_mac_port_source_payload_sender_mac = 48'd0;
reg  [47:0] benchsoc_ethcore_ip_mac_port_source_payload_target_mac = 48'd0;
reg  [7:0] benchsoc_ethcore_ip_mac_port_source_payload_data = 8'd0;
reg  benchsoc_ethcore_ip_mac_port_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_ip_mac_port_source_payload_error = 1'd0;
reg  benchsoc_ethcore_ip_crossbar_source_valid = 1'd0;
wire benchsoc_ethcore_ip_crossbar_source_ready;
reg  benchsoc_ethcore_ip_crossbar_source_first = 1'd0;
reg  benchsoc_ethcore_ip_crossbar_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_ip_crossbar_source_payload_data = 8'd0;
reg  benchsoc_ethcore_ip_crossbar_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_ip_crossbar_source_payload_error = 1'd0;
reg  [15:0] benchsoc_ethcore_ip_crossbar_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_ip_crossbar_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_ip_crossbar_source_param_ip_address = 32'd0;
wire benchsoc_ethcore_ip_crossbar_sink_valid;
reg  benchsoc_ethcore_ip_crossbar_sink_ready = 1'd0;
wire benchsoc_ethcore_ip_crossbar_sink_first;
wire benchsoc_ethcore_ip_crossbar_sink_last;
wire [7:0] benchsoc_ethcore_ip_crossbar_sink_payload_data;
wire benchsoc_ethcore_ip_crossbar_sink_payload_last_be;
wire benchsoc_ethcore_ip_crossbar_sink_payload_error;
wire [15:0] benchsoc_ethcore_ip_crossbar_sink_param_length;
wire [7:0] benchsoc_ethcore_ip_crossbar_sink_param_protocol;
wire [31:0] benchsoc_ethcore_ip_crossbar_sink_param_ip_address;
wire benchsoc_ethcore_icmp_tx_sink_sink_valid;
wire benchsoc_ethcore_icmp_tx_sink_sink_ready;
wire benchsoc_ethcore_icmp_tx_sink_sink_first;
wire benchsoc_ethcore_icmp_tx_sink_sink_last;
wire [7:0] benchsoc_ethcore_icmp_tx_sink_sink_payload_data;
wire benchsoc_ethcore_icmp_tx_sink_sink_payload_last_be;
wire benchsoc_ethcore_icmp_tx_sink_sink_payload_error;
wire [15:0] benchsoc_ethcore_icmp_tx_sink_sink_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_tx_sink_sink_param_code;
wire [7:0] benchsoc_ethcore_icmp_tx_sink_sink_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_tx_sink_sink_param_quench;
wire [31:0] benchsoc_ethcore_icmp_tx_sink_sink_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_tx_sink_sink_param_length;
reg  benchsoc_ethcore_icmp_tx_source_source_valid = 1'd0;
wire benchsoc_ethcore_icmp_tx_source_source_ready;
wire benchsoc_ethcore_icmp_tx_source_source_first;
wire benchsoc_ethcore_icmp_tx_source_source_last;
wire [7:0] benchsoc_ethcore_icmp_tx_source_source_payload_data;
wire benchsoc_ethcore_icmp_tx_source_source_payload_last_be;
wire benchsoc_ethcore_icmp_tx_source_source_payload_error;
reg  [15:0] benchsoc_ethcore_icmp_tx_source_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_icmp_tx_source_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_icmp_tx_source_source_param_ip_address = 32'd0;
wire benchsoc_ethcore_icmp_tx_packetizer_sink_valid;
reg  benchsoc_ethcore_icmp_tx_packetizer_sink_ready = 1'd0;
wire benchsoc_ethcore_icmp_tx_packetizer_sink_last;
wire [7:0] benchsoc_ethcore_icmp_tx_packetizer_sink_payload_data;
wire benchsoc_ethcore_icmp_tx_packetizer_sink_payload_last_be;
reg  benchsoc_ethcore_icmp_tx_packetizer_sink_payload_error = 1'd0;
wire [15:0] benchsoc_ethcore_icmp_tx_packetizer_sink_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_tx_packetizer_sink_param_code;
wire [7:0] benchsoc_ethcore_icmp_tx_packetizer_sink_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_tx_packetizer_sink_param_quench;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_valid = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_ready = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_first = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_icmp_tx_packetizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_icmp_tx_packetizer_source_payload_error;
reg  [15:0] benchsoc_ethcore_icmp_tx_packetizer_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_icmp_tx_packetizer_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_icmp_tx_packetizer_source_param_ip_address = 32'd0;
reg  [63:0] benchsoc_ethcore_icmp_tx_packetizer_header = 64'd0;
reg  [63:0] benchsoc_ethcore_icmp_tx_packetizer_sr = 64'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_sr_load = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_sr_shift = 1'd0;
reg  [2:0] benchsoc_ethcore_icmp_tx_packetizer_count = 3'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_icmp_tx_packetizer_sink_last_be;
wire benchsoc_ethcore_icmp_tx_packetizer_new_last_be;
reg  benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_icmp_tx_packetizer_in_data_copy;
reg  benchsoc_ethcore_icmp_tx_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_is_ongoing2 = 1'd0;
wire benchsoc_ethcore_icmp_rx_sink_sink_valid;
wire benchsoc_ethcore_icmp_rx_sink_sink_ready;
wire benchsoc_ethcore_icmp_rx_sink_sink_first;
wire benchsoc_ethcore_icmp_rx_sink_sink_last;
wire [7:0] benchsoc_ethcore_icmp_rx_sink_sink_payload_data;
wire benchsoc_ethcore_icmp_rx_sink_sink_payload_last_be;
wire benchsoc_ethcore_icmp_rx_sink_sink_payload_error;
wire [15:0] benchsoc_ethcore_icmp_rx_sink_sink_param_length;
wire [7:0] benchsoc_ethcore_icmp_rx_sink_sink_param_protocol;
wire [31:0] benchsoc_ethcore_icmp_rx_sink_sink_param_ip_address;
reg  benchsoc_ethcore_icmp_rx_source_source_valid = 1'd0;
wire benchsoc_ethcore_icmp_rx_source_source_ready;
reg  benchsoc_ethcore_icmp_rx_source_source_first = 1'd0;
wire benchsoc_ethcore_icmp_rx_source_source_last;
wire [7:0] benchsoc_ethcore_icmp_rx_source_source_payload_data;
wire benchsoc_ethcore_icmp_rx_source_source_payload_last_be;
wire benchsoc_ethcore_icmp_rx_source_source_payload_error;
wire [15:0] benchsoc_ethcore_icmp_rx_source_source_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_rx_source_source_param_code;
wire [7:0] benchsoc_ethcore_icmp_rx_source_source_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_rx_source_source_param_quench;
wire [31:0] benchsoc_ethcore_icmp_rx_source_source_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_rx_source_source_param_length;
wire benchsoc_ethcore_icmp_rx_depacketizer_sink_valid;
reg  benchsoc_ethcore_icmp_rx_depacketizer_sink_ready = 1'd0;
wire benchsoc_ethcore_icmp_rx_depacketizer_sink_first;
wire benchsoc_ethcore_icmp_rx_depacketizer_sink_last;
wire [7:0] benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_data;
wire benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_last_be;
wire benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_error;
wire [15:0] benchsoc_ethcore_icmp_rx_depacketizer_sink_param_length;
wire [7:0] benchsoc_ethcore_icmp_rx_depacketizer_sink_param_protocol;
wire [31:0] benchsoc_ethcore_icmp_rx_depacketizer_sink_param_ip_address;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_valid = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_ready = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_icmp_rx_depacketizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_icmp_rx_depacketizer_source_payload_error;
wire [15:0] benchsoc_ethcore_icmp_rx_depacketizer_source_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_rx_depacketizer_source_param_code;
wire [7:0] benchsoc_ethcore_icmp_rx_depacketizer_source_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_rx_depacketizer_source_param_quench;
wire [63:0] benchsoc_ethcore_icmp_rx_depacketizer_header;
reg  [63:0] benchsoc_ethcore_icmp_rx_depacketizer_sr = 64'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_sr_shift = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_sr_shift_leftover = 1'd0;
reg  [2:0] benchsoc_ethcore_icmp_rx_depacketizer_count = 3'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_icmp_rx_depacketizer_sink_last_be;
wire benchsoc_ethcore_icmp_rx_depacketizer_new_last_be;
reg  benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_icmp_rx_depacketizer_is_in_copy;
reg  benchsoc_ethcore_icmp_rx_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing3 = 1'd0;
wire benchsoc_ethcore_icmp_echo_sink_sink_valid;
wire benchsoc_ethcore_icmp_echo_sink_sink_ready;
wire benchsoc_ethcore_icmp_echo_sink_sink_first;
wire benchsoc_ethcore_icmp_echo_sink_sink_last;
wire [7:0] benchsoc_ethcore_icmp_echo_sink_sink_payload_data;
wire benchsoc_ethcore_icmp_echo_sink_sink_payload_last_be;
wire benchsoc_ethcore_icmp_echo_sink_sink_payload_error;
wire [15:0] benchsoc_ethcore_icmp_echo_sink_sink_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_echo_sink_sink_param_code;
wire [7:0] benchsoc_ethcore_icmp_echo_sink_sink_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_echo_sink_sink_param_quench;
wire [31:0] benchsoc_ethcore_icmp_echo_sink_sink_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_echo_sink_sink_param_length;
wire benchsoc_ethcore_icmp_echo_source_source_valid;
wire benchsoc_ethcore_icmp_echo_source_source_ready;
wire benchsoc_ethcore_icmp_echo_source_source_first;
wire benchsoc_ethcore_icmp_echo_source_source_last;
wire [7:0] benchsoc_ethcore_icmp_echo_source_source_payload_data;
wire benchsoc_ethcore_icmp_echo_source_source_payload_last_be;
wire benchsoc_ethcore_icmp_echo_source_source_payload_error;
wire [15:0] benchsoc_ethcore_icmp_echo_source_source_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_echo_source_source_param_code;
reg  [7:0] benchsoc_ethcore_icmp_echo_source_source_param_msgtype = 8'd0;
wire [31:0] benchsoc_ethcore_icmp_echo_source_source_param_quench;
wire [31:0] benchsoc_ethcore_icmp_echo_source_source_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_echo_source_source_param_length;
wire benchsoc_ethcore_icmp_echo_buffer_sink_valid;
wire benchsoc_ethcore_icmp_echo_buffer_sink_ready;
wire benchsoc_ethcore_icmp_echo_buffer_sink_first;
wire benchsoc_ethcore_icmp_echo_buffer_sink_last;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_sink_payload_data;
wire benchsoc_ethcore_icmp_echo_buffer_sink_payload_last_be;
wire benchsoc_ethcore_icmp_echo_buffer_sink_payload_error;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_sink_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_sink_param_code;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_sink_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_sink_param_quench;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_sink_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_sink_param_length;
wire benchsoc_ethcore_icmp_echo_buffer_source_valid;
wire benchsoc_ethcore_icmp_echo_buffer_source_ready;
wire benchsoc_ethcore_icmp_echo_buffer_source_first;
wire benchsoc_ethcore_icmp_echo_buffer_source_last;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_source_payload_data;
wire benchsoc_ethcore_icmp_echo_buffer_source_payload_last_be;
wire benchsoc_ethcore_icmp_echo_buffer_source_payload_error;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_source_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_source_param_code;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_source_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_source_param_quench;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_source_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_source_param_length;
wire benchsoc_ethcore_icmp_echo_buffer_re;
reg  benchsoc_ethcore_icmp_echo_buffer_readable = 1'd0;
wire benchsoc_ethcore_icmp_echo_buffer_syncfifo_we;
wire benchsoc_ethcore_icmp_echo_buffer_syncfifo_writable;
wire benchsoc_ethcore_icmp_echo_buffer_syncfifo_re;
wire benchsoc_ethcore_icmp_echo_buffer_syncfifo_readable;
wire [123:0] benchsoc_ethcore_icmp_echo_buffer_syncfifo_din;
wire [123:0] benchsoc_ethcore_icmp_echo_buffer_syncfifo_dout;
reg  [7:0] benchsoc_ethcore_icmp_echo_buffer_level0 = 8'd0;
reg  benchsoc_ethcore_icmp_echo_buffer_replace = 1'd0;
reg  [6:0] benchsoc_ethcore_icmp_echo_buffer_produce = 7'd0;
reg  [6:0] benchsoc_ethcore_icmp_echo_buffer_consume = 7'd0;
reg  [6:0] benchsoc_ethcore_icmp_echo_buffer_wrport_adr = 7'd0;
wire [123:0] benchsoc_ethcore_icmp_echo_buffer_wrport_dat_r;
wire benchsoc_ethcore_icmp_echo_buffer_wrport_we;
wire [123:0] benchsoc_ethcore_icmp_echo_buffer_wrport_dat_w;
wire benchsoc_ethcore_icmp_echo_buffer_do_read;
wire [6:0] benchsoc_ethcore_icmp_echo_buffer_rdport_adr;
wire [123:0] benchsoc_ethcore_icmp_echo_buffer_rdport_dat_r;
wire benchsoc_ethcore_icmp_echo_buffer_rdport_re;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_level1;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_data;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_last_be;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_error;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_code;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_quench;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_length;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_in_first;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_in_last;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_data;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_last_be;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_error;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_checksum;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_code;
wire [7:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_msgtype;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_quench;
wire [31:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_ip_address;
wire [15:0] benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_length;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_out_first;
wire benchsoc_ethcore_icmp_echo_buffer_fifo_out_last;
wire benchsoc_ethcore_icmp_sink_valid;
reg  benchsoc_ethcore_icmp_sink_ready = 1'd0;
wire benchsoc_ethcore_icmp_sink_first;
wire benchsoc_ethcore_icmp_sink_last;
wire [7:0] benchsoc_ethcore_icmp_sink_payload_data;
wire benchsoc_ethcore_icmp_sink_payload_last_be;
wire benchsoc_ethcore_icmp_sink_payload_error;
wire [15:0] benchsoc_ethcore_icmp_sink_param_length;
wire [7:0] benchsoc_ethcore_icmp_sink_param_protocol;
wire [31:0] benchsoc_ethcore_icmp_sink_param_ip_address;
reg  benchsoc_ethcore_icmp_source_valid = 1'd0;
wire benchsoc_ethcore_icmp_source_ready;
reg  benchsoc_ethcore_icmp_source_first = 1'd0;
reg  benchsoc_ethcore_icmp_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_icmp_source_payload_data = 8'd0;
reg  benchsoc_ethcore_icmp_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_icmp_source_payload_error = 1'd0;
reg  [15:0] benchsoc_ethcore_icmp_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_icmp_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_icmp_source_param_ip_address = 32'd0;
wire benchsoc_ethcore_tx_sink_sink_valid;
wire benchsoc_ethcore_tx_sink_sink_ready;
wire benchsoc_ethcore_tx_sink_sink_first;
wire benchsoc_ethcore_tx_sink_sink_last;
wire [7:0] benchsoc_ethcore_tx_sink_sink_payload_data;
wire benchsoc_ethcore_tx_sink_sink_payload_last_be;
wire benchsoc_ethcore_tx_sink_sink_payload_error;
wire [15:0] benchsoc_ethcore_tx_sink_sink_param_src_port;
wire [15:0] benchsoc_ethcore_tx_sink_sink_param_dst_port;
wire [31:0] benchsoc_ethcore_tx_sink_sink_param_ip_address;
wire [15:0] benchsoc_ethcore_tx_sink_sink_param_length;
reg  benchsoc_ethcore_tx_source_source_valid = 1'd0;
wire benchsoc_ethcore_tx_source_source_ready;
reg  benchsoc_ethcore_tx_source_source_first = 1'd0;
reg  benchsoc_ethcore_tx_source_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_tx_source_source_payload_data = 8'd0;
reg  benchsoc_ethcore_tx_source_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_tx_source_source_payload_error = 1'd0;
reg  [15:0] benchsoc_ethcore_tx_source_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_tx_source_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_tx_source_source_param_ip_address = 32'd0;
wire benchsoc_ethcore_tx_packetizer_sink_valid;
reg  benchsoc_ethcore_tx_packetizer_sink_ready = 1'd0;
wire benchsoc_ethcore_tx_packetizer_sink_last;
wire [7:0] benchsoc_ethcore_tx_packetizer_sink_payload_data;
wire benchsoc_ethcore_tx_packetizer_sink_payload_last_be;
reg  benchsoc_ethcore_tx_packetizer_sink_payload_error = 1'd0;
wire [15:0] benchsoc_ethcore_tx_packetizer_sink_param_checksum;
wire [15:0] benchsoc_ethcore_tx_packetizer_sink_param_dst_port;
wire [15:0] benchsoc_ethcore_tx_packetizer_sink_param_length;
wire [15:0] benchsoc_ethcore_tx_packetizer_sink_param_src_port;
reg  benchsoc_ethcore_tx_packetizer_source_valid = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_source_ready = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_source_first = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_tx_packetizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_tx_packetizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_tx_packetizer_source_payload_error;
reg  [15:0] benchsoc_ethcore_tx_packetizer_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_tx_packetizer_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_tx_packetizer_source_param_ip_address = 32'd0;
reg  [63:0] benchsoc_ethcore_tx_packetizer_header = 64'd0;
reg  [63:0] benchsoc_ethcore_tx_packetizer_sr = 64'd0;
reg  benchsoc_ethcore_tx_packetizer_sr_load = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_sr_shift = 1'd0;
reg  [2:0] benchsoc_ethcore_tx_packetizer_count = 3'd0;
reg  benchsoc_ethcore_tx_packetizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_tx_packetizer_sink_last_be;
wire benchsoc_ethcore_tx_packetizer_new_last_be;
reg  benchsoc_ethcore_tx_packetizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_tx_packetizer_in_data_copy;
reg  benchsoc_ethcore_tx_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_is_ongoing2 = 1'd0;
wire benchsoc_ethcore_rx_sink_sink_valid;
wire benchsoc_ethcore_rx_sink_sink_ready;
wire benchsoc_ethcore_rx_sink_sink_first;
wire benchsoc_ethcore_rx_sink_sink_last;
wire [7:0] benchsoc_ethcore_rx_sink_sink_payload_data;
wire benchsoc_ethcore_rx_sink_sink_payload_last_be;
wire benchsoc_ethcore_rx_sink_sink_payload_error;
wire [15:0] benchsoc_ethcore_rx_sink_sink_param_length;
wire [7:0] benchsoc_ethcore_rx_sink_sink_param_protocol;
wire [31:0] benchsoc_ethcore_rx_sink_sink_param_ip_address;
reg  benchsoc_ethcore_rx_source_source_valid = 1'd0;
wire benchsoc_ethcore_rx_source_source_ready;
reg  benchsoc_ethcore_rx_source_source_first = 1'd0;
reg  benchsoc_ethcore_rx_source_source_last = 1'd0;
wire [7:0] benchsoc_ethcore_rx_source_source_payload_data;
reg  benchsoc_ethcore_rx_source_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_rx_source_source_payload_error;
wire [15:0] benchsoc_ethcore_rx_source_source_param_src_port;
wire [15:0] benchsoc_ethcore_rx_source_source_param_dst_port;
wire [31:0] benchsoc_ethcore_rx_source_source_param_ip_address;
wire [15:0] benchsoc_ethcore_rx_source_source_param_length;
wire benchsoc_ethcore_rx_depacketizer_sink_valid;
reg  benchsoc_ethcore_rx_depacketizer_sink_ready = 1'd0;
wire benchsoc_ethcore_rx_depacketizer_sink_first;
wire benchsoc_ethcore_rx_depacketizer_sink_last;
wire [7:0] benchsoc_ethcore_rx_depacketizer_sink_payload_data;
wire benchsoc_ethcore_rx_depacketizer_sink_payload_last_be;
wire benchsoc_ethcore_rx_depacketizer_sink_payload_error;
wire [15:0] benchsoc_ethcore_rx_depacketizer_sink_param_length;
wire [7:0] benchsoc_ethcore_rx_depacketizer_sink_param_protocol;
wire [31:0] benchsoc_ethcore_rx_depacketizer_sink_param_ip_address;
reg  benchsoc_ethcore_rx_depacketizer_source_valid = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_source_ready = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_rx_depacketizer_source_payload_data = 8'd0;
reg  benchsoc_ethcore_rx_depacketizer_source_payload_last_be = 1'd0;
wire benchsoc_ethcore_rx_depacketizer_source_payload_error;
wire [15:0] benchsoc_ethcore_rx_depacketizer_source_param_checksum;
wire [15:0] benchsoc_ethcore_rx_depacketizer_source_param_dst_port;
wire [15:0] benchsoc_ethcore_rx_depacketizer_source_param_length;
wire [15:0] benchsoc_ethcore_rx_depacketizer_source_param_src_port;
wire [63:0] benchsoc_ethcore_rx_depacketizer_header;
reg  [63:0] benchsoc_ethcore_rx_depacketizer_sr = 64'd0;
reg  benchsoc_ethcore_rx_depacketizer_sr_shift = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_sr_shift_leftover = 1'd0;
reg  [2:0] benchsoc_ethcore_rx_depacketizer_count = 3'd0;
reg  benchsoc_ethcore_rx_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_source_last_a = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_source_last_b = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_source_last_s = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_fsm_from_idle = 1'd0;
wire benchsoc_ethcore_rx_depacketizer_sink_last_be;
wire benchsoc_ethcore_rx_depacketizer_new_last_be;
reg  benchsoc_ethcore_rx_depacketizer_delayed_last_be = 1'd0;
wire benchsoc_ethcore_rx_depacketizer_is_in_copy;
reg  benchsoc_ethcore_rx_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_is_ongoing3 = 1'd0;
reg  [15:0] benchsoc_ethcore_rx_count = 16'd0;
wire benchsoc_ethcore_ip_port_sink_valid;
reg  benchsoc_ethcore_ip_port_sink_ready = 1'd0;
wire benchsoc_ethcore_ip_port_sink_first;
wire benchsoc_ethcore_ip_port_sink_last;
wire [7:0] benchsoc_ethcore_ip_port_sink_payload_data;
wire benchsoc_ethcore_ip_port_sink_payload_last_be;
wire benchsoc_ethcore_ip_port_sink_payload_error;
wire [15:0] benchsoc_ethcore_ip_port_sink_param_length;
wire [7:0] benchsoc_ethcore_ip_port_sink_param_protocol;
wire [31:0] benchsoc_ethcore_ip_port_sink_param_ip_address;
reg  benchsoc_ethcore_ip_port_source_valid = 1'd0;
wire benchsoc_ethcore_ip_port_source_ready;
reg  benchsoc_ethcore_ip_port_source_first = 1'd0;
reg  benchsoc_ethcore_ip_port_source_last = 1'd0;
reg  [7:0] benchsoc_ethcore_ip_port_source_payload_data = 8'd0;
reg  benchsoc_ethcore_ip_port_source_payload_last_be = 1'd0;
reg  benchsoc_ethcore_ip_port_source_payload_error = 1'd0;
reg  [15:0] benchsoc_ethcore_ip_port_source_param_length = 16'd0;
reg  [7:0] benchsoc_ethcore_ip_port_source_param_protocol = 8'd0;
reg  [31:0] benchsoc_ethcore_ip_port_source_param_ip_address = 32'd0;
wire benchsoc_ethcore_crossbar_source_valid;
wire benchsoc_ethcore_crossbar_source_ready;
wire benchsoc_ethcore_crossbar_source_first;
wire benchsoc_ethcore_crossbar_source_last;
wire [7:0] benchsoc_ethcore_crossbar_source_payload_data;
wire benchsoc_ethcore_crossbar_source_payload_last_be;
wire benchsoc_ethcore_crossbar_source_payload_error;
wire [15:0] benchsoc_ethcore_crossbar_source_param_src_port;
wire [15:0] benchsoc_ethcore_crossbar_source_param_dst_port;
wire [31:0] benchsoc_ethcore_crossbar_source_param_ip_address;
wire [15:0] benchsoc_ethcore_crossbar_source_param_length;
wire benchsoc_ethcore_crossbar_sink_valid;
wire benchsoc_ethcore_crossbar_sink_ready;
wire benchsoc_ethcore_crossbar_sink_first;
wire benchsoc_ethcore_crossbar_sink_last;
wire [7:0] benchsoc_ethcore_crossbar_sink_payload_data;
wire benchsoc_ethcore_crossbar_sink_payload_last_be;
wire benchsoc_ethcore_crossbar_sink_payload_error;
wire [15:0] benchsoc_ethcore_crossbar_sink_param_src_port;
wire [15:0] benchsoc_ethcore_crossbar_sink_param_dst_port;
wire [31:0] benchsoc_ethcore_crossbar_sink_param_ip_address;
wire [15:0] benchsoc_ethcore_crossbar_sink_param_length;
wire etherbone_clk;
wire etherbone_rst;
reg  benchsoc_etherbone_tx_sink_sink_valid = 1'd0;
wire benchsoc_etherbone_tx_sink_sink_ready;
reg  benchsoc_etherbone_tx_sink_sink_first = 1'd0;
reg  benchsoc_etherbone_tx_sink_sink_last = 1'd0;
reg  [31:0] benchsoc_etherbone_tx_sink_sink_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_tx_sink_sink_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_tx_sink_sink_payload_error = 4'd0;
reg  [3:0] benchsoc_etherbone_tx_sink_sink_param_addr_size = 4'd0;
reg  benchsoc_etherbone_tx_sink_sink_param_nr = 1'd0;
reg  benchsoc_etherbone_tx_sink_sink_param_pf = 1'd0;
reg  [3:0] benchsoc_etherbone_tx_sink_sink_param_port_size = 4'd0;
reg  benchsoc_etherbone_tx_sink_sink_param_pr = 1'd0;
reg  [15:0] benchsoc_etherbone_tx_sink_sink_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_tx_sink_sink_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_tx_sink_sink_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_tx_sink_sink_param_length = 16'd0;
reg  benchsoc_etherbone_tx_source_source_valid = 1'd0;
wire benchsoc_etherbone_tx_source_source_ready;
reg  benchsoc_etherbone_tx_source_source_first = 1'd0;
reg  benchsoc_etherbone_tx_source_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_tx_source_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_tx_source_source_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_tx_source_source_payload_error = 4'd0;
reg  [15:0] benchsoc_etherbone_tx_source_source_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_tx_source_source_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_tx_source_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_tx_source_source_param_length = 16'd0;
wire benchsoc_etherbone_tx_packetizer_sink_valid;
reg  benchsoc_etherbone_tx_packetizer_sink_ready = 1'd0;
wire benchsoc_etherbone_tx_packetizer_sink_last;
wire [31:0] benchsoc_etherbone_tx_packetizer_sink_payload_data;
wire [3:0] benchsoc_etherbone_tx_packetizer_sink_payload_last_be;
reg  [3:0] benchsoc_etherbone_tx_packetizer_sink_payload_error = 4'd0;
wire [3:0] benchsoc_etherbone_tx_packetizer_sink_param_addr_size;
wire [15:0] benchsoc_etherbone_tx_packetizer_sink_param_magic;
wire benchsoc_etherbone_tx_packetizer_sink_param_nr;
wire benchsoc_etherbone_tx_packetizer_sink_param_pf;
wire [3:0] benchsoc_etherbone_tx_packetizer_sink_param_port_size;
wire benchsoc_etherbone_tx_packetizer_sink_param_pr;
wire [3:0] benchsoc_etherbone_tx_packetizer_sink_param_version;
reg  benchsoc_etherbone_tx_packetizer_source_valid = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_source_ready = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_source_first = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_tx_packetizer_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_tx_packetizer_source_payload_last_be = 4'd0;
wire [3:0] benchsoc_etherbone_tx_packetizer_source_payload_error;
reg  [15:0] benchsoc_etherbone_tx_packetizer_source_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_tx_packetizer_source_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_tx_packetizer_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_tx_packetizer_source_param_length = 16'd0;
reg  [63:0] benchsoc_etherbone_tx_packetizer_header = 64'd0;
reg  [63:0] benchsoc_etherbone_tx_packetizer_sr = 64'd0;
reg  benchsoc_etherbone_tx_packetizer_sr_load = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_sr_shift = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_count = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_source_last_a = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_source_last_b = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_source_last_s = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_fsm_from_idle = 1'd0;
wire [3:0] benchsoc_etherbone_tx_packetizer_new_last_be;
reg  [3:0] benchsoc_etherbone_tx_packetizer_delayed_last_be = 4'd0;
wire benchsoc_etherbone_tx_packetizer_in_data_copy;
reg  benchsoc_etherbone_tx_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_is_ongoing2 = 1'd0;
wire benchsoc_etherbone_rx_sink_sink_valid;
wire benchsoc_etherbone_rx_sink_sink_ready;
wire benchsoc_etherbone_rx_sink_sink_first;
wire benchsoc_etherbone_rx_sink_sink_last;
wire [31:0] benchsoc_etherbone_rx_sink_sink_payload_data;
wire [3:0] benchsoc_etherbone_rx_sink_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_sink_sink_payload_error;
wire [15:0] benchsoc_etherbone_rx_sink_sink_param_src_port;
wire [15:0] benchsoc_etherbone_rx_sink_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_sink_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_sink_sink_param_length;
reg  benchsoc_etherbone_rx_source_source_valid = 1'd0;
reg  benchsoc_etherbone_rx_source_source_ready = 1'd0;
reg  benchsoc_etherbone_rx_source_source_first = 1'd0;
wire benchsoc_etherbone_rx_source_source_last;
wire [31:0] benchsoc_etherbone_rx_source_source_payload_data;
wire [3:0] benchsoc_etherbone_rx_source_source_payload_last_be;
reg  [3:0] benchsoc_etherbone_rx_source_source_payload_error = 4'd0;
reg  [3:0] benchsoc_etherbone_rx_source_source_param_addr_size = 4'd0;
wire benchsoc_etherbone_rx_source_source_param_nr;
wire benchsoc_etherbone_rx_source_source_param_pf;
reg  [3:0] benchsoc_etherbone_rx_source_source_param_port_size = 4'd0;
wire benchsoc_etherbone_rx_source_source_param_pr;
wire [15:0] benchsoc_etherbone_rx_source_source_param_src_port;
wire [15:0] benchsoc_etherbone_rx_source_source_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_source_source_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_source_source_param_length;
wire benchsoc_etherbone_rx_depacketizer_sink_valid;
reg  benchsoc_etherbone_rx_depacketizer_sink_ready = 1'd0;
wire benchsoc_etherbone_rx_depacketizer_sink_first;
wire benchsoc_etherbone_rx_depacketizer_sink_last;
wire [31:0] benchsoc_etherbone_rx_depacketizer_sink_payload_data;
wire [3:0] benchsoc_etherbone_rx_depacketizer_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_depacketizer_sink_payload_error;
wire [15:0] benchsoc_etherbone_rx_depacketizer_sink_param_src_port;
wire [15:0] benchsoc_etherbone_rx_depacketizer_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_depacketizer_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_depacketizer_sink_param_length;
reg  benchsoc_etherbone_rx_depacketizer_source_valid = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_source_ready = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_rx_depacketizer_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_rx_depacketizer_source_payload_last_be = 4'd0;
wire [3:0] benchsoc_etherbone_rx_depacketizer_source_payload_error;
wire [3:0] benchsoc_etherbone_rx_depacketizer_source_param_addr_size;
wire [15:0] benchsoc_etherbone_rx_depacketizer_source_param_magic;
wire benchsoc_etherbone_rx_depacketizer_source_param_nr;
wire benchsoc_etherbone_rx_depacketizer_source_param_pf;
wire [3:0] benchsoc_etherbone_rx_depacketizer_source_param_port_size;
wire benchsoc_etherbone_rx_depacketizer_source_param_pr;
wire [3:0] benchsoc_etherbone_rx_depacketizer_source_param_version;
wire [63:0] benchsoc_etherbone_rx_depacketizer_header;
reg  [63:0] benchsoc_etherbone_rx_depacketizer_sr = 64'd0;
reg  benchsoc_etherbone_rx_depacketizer_sr_shift = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_sr_shift_leftover = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_count = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_source_last_a = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_source_last_b = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_source_last_s = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_fsm_from_idle = 1'd0;
wire [3:0] benchsoc_etherbone_rx_depacketizer_new_last_be;
reg  [3:0] benchsoc_etherbone_rx_depacketizer_delayed_last_be = 4'd0;
wire benchsoc_etherbone_rx_depacketizer_is_in_copy;
reg  benchsoc_etherbone_rx_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_is_ongoing3 = 1'd0;
wire benchsoc_etherbone_user_port_sink_valid;
wire benchsoc_etherbone_user_port_sink_ready;
wire benchsoc_etherbone_user_port_sink_first;
wire benchsoc_etherbone_user_port_sink_last;
wire [31:0] benchsoc_etherbone_user_port_sink_payload_data;
wire [3:0] benchsoc_etherbone_user_port_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_user_port_sink_payload_error;
wire [15:0] benchsoc_etherbone_user_port_sink_param_src_port;
wire [15:0] benchsoc_etherbone_user_port_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_user_port_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_user_port_sink_param_length;
wire benchsoc_etherbone_user_port_source_valid;
wire benchsoc_etherbone_user_port_source_ready;
wire benchsoc_etherbone_user_port_source_first;
wire benchsoc_etherbone_user_port_source_last;
wire [31:0] benchsoc_etherbone_user_port_source_payload_data;
wire [3:0] benchsoc_etherbone_user_port_source_payload_last_be;
wire [3:0] benchsoc_etherbone_user_port_source_payload_error;
wire [15:0] benchsoc_etherbone_user_port_source_param_src_port;
wire [15:0] benchsoc_etherbone_user_port_source_param_dst_port;
wire [31:0] benchsoc_etherbone_user_port_source_param_ip_address;
wire [15:0] benchsoc_etherbone_user_port_source_param_length;
wire benchsoc_etherbone_internal_port_sink_valid;
wire benchsoc_etherbone_internal_port_sink_ready;
wire benchsoc_etherbone_internal_port_sink_first;
wire benchsoc_etherbone_internal_port_sink_last;
wire [7:0] benchsoc_etherbone_internal_port_sink_payload_data;
wire benchsoc_etherbone_internal_port_sink_payload_last_be;
wire benchsoc_etherbone_internal_port_sink_payload_error;
wire [15:0] benchsoc_etherbone_internal_port_sink_param_src_port;
wire [15:0] benchsoc_etherbone_internal_port_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_internal_port_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_internal_port_sink_param_length;
wire benchsoc_etherbone_internal_port_source_valid;
wire benchsoc_etherbone_internal_port_source_ready;
wire benchsoc_etherbone_internal_port_source_first;
wire benchsoc_etherbone_internal_port_source_last;
wire [7:0] benchsoc_etherbone_internal_port_source_payload_data;
wire benchsoc_etherbone_internal_port_source_payload_last_be;
wire benchsoc_etherbone_internal_port_source_payload_error;
wire [15:0] benchsoc_etherbone_internal_port_source_param_src_port;
wire [15:0] benchsoc_etherbone_internal_port_source_param_dst_port;
wire [31:0] benchsoc_etherbone_internal_port_source_param_ip_address;
wire [15:0] benchsoc_etherbone_internal_port_source_param_length;
wire benchsoc_etherbone_tx_cdc_sink_sink_valid;
wire benchsoc_etherbone_tx_cdc_sink_sink_ready;
wire benchsoc_etherbone_tx_cdc_sink_sink_first;
wire benchsoc_etherbone_tx_cdc_sink_sink_last;
wire [31:0] benchsoc_etherbone_tx_cdc_sink_sink_payload_data;
wire [3:0] benchsoc_etherbone_tx_cdc_sink_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_cdc_sink_sink_payload_error;
wire [15:0] benchsoc_etherbone_tx_cdc_sink_sink_param_src_port;
wire [15:0] benchsoc_etherbone_tx_cdc_sink_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_cdc_sink_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_cdc_sink_sink_param_length;
wire benchsoc_etherbone_tx_cdc_source_source_valid;
wire benchsoc_etherbone_tx_cdc_source_source_ready;
wire benchsoc_etherbone_tx_cdc_source_source_first;
wire benchsoc_etherbone_tx_cdc_source_source_last;
wire [31:0] benchsoc_etherbone_tx_cdc_source_source_payload_data;
wire [3:0] benchsoc_etherbone_tx_cdc_source_source_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_cdc_source_source_payload_error;
wire [15:0] benchsoc_etherbone_tx_cdc_source_source_param_src_port;
wire [15:0] benchsoc_etherbone_tx_cdc_source_source_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_cdc_source_source_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_cdc_source_source_param_length;
wire benchsoc_etherbone_tx_cdc_cdc_sink_valid;
wire benchsoc_etherbone_tx_cdc_cdc_sink_ready;
wire benchsoc_etherbone_tx_cdc_cdc_sink_first;
wire benchsoc_etherbone_tx_cdc_cdc_sink_last;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_sink_payload_data;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_sink_payload_error;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_sink_param_src_port;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_sink_param_length;
wire benchsoc_etherbone_tx_cdc_cdc_source_valid;
wire benchsoc_etherbone_tx_cdc_cdc_source_ready;
wire benchsoc_etherbone_tx_cdc_cdc_source_first;
wire benchsoc_etherbone_tx_cdc_cdc_source_last;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_source_payload_data;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_source_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_source_payload_error;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_source_param_src_port;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_source_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_source_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_source_param_length;
wire benchsoc_etherbone_tx_cdc_cdc_asyncfifo_we;
wire benchsoc_etherbone_tx_cdc_cdc_asyncfifo_writable;
wire benchsoc_etherbone_tx_cdc_cdc_asyncfifo_re;
wire benchsoc_etherbone_tx_cdc_cdc_asyncfifo_readable;
wire [121:0] benchsoc_etherbone_tx_cdc_cdc_asyncfifo_din;
wire [121:0] benchsoc_etherbone_tx_cdc_cdc_asyncfifo_dout;
wire benchsoc_etherbone_tx_cdc_cdc_graycounter0_ce;
reg  [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter0_q = 3'd0;
wire [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next;
reg  [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_binary = 3'd0;
reg  [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary = 3'd0;
wire benchsoc_etherbone_tx_cdc_cdc_graycounter1_ce;
reg  [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter1_q = 3'd0;
wire [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next;
reg  [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_binary = 3'd0;
reg  [2:0] benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] benchsoc_etherbone_tx_cdc_cdc_produce_rdomain;
wire [2:0] benchsoc_etherbone_tx_cdc_cdc_consume_wdomain;
wire [1:0] benchsoc_etherbone_tx_cdc_cdc_wrport_adr;
wire [121:0] benchsoc_etherbone_tx_cdc_cdc_wrport_dat_r;
wire benchsoc_etherbone_tx_cdc_cdc_wrport_we;
wire [121:0] benchsoc_etherbone_tx_cdc_cdc_wrport_dat_w;
wire [1:0] benchsoc_etherbone_tx_cdc_cdc_rdport_adr;
wire [121:0] benchsoc_etherbone_tx_cdc_cdc_rdport_dat_r;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_data;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_error;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_src_port;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_length;
wire benchsoc_etherbone_tx_cdc_cdc_fifo_in_first;
wire benchsoc_etherbone_tx_cdc_cdc_fifo_in_last;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_data;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_error;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_src_port;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_length;
wire benchsoc_etherbone_tx_cdc_cdc_fifo_out_first;
wire benchsoc_etherbone_tx_cdc_cdc_fifo_out_last;
wire benchsoc_etherbone_tx_converter_sink_valid;
wire benchsoc_etherbone_tx_converter_sink_ready;
wire benchsoc_etherbone_tx_converter_sink_first;
wire benchsoc_etherbone_tx_converter_sink_last;
wire [31:0] benchsoc_etherbone_tx_converter_sink_payload_data;
wire [3:0] benchsoc_etherbone_tx_converter_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_tx_converter_sink_payload_error;
wire [15:0] benchsoc_etherbone_tx_converter_sink_param_src_port;
wire [15:0] benchsoc_etherbone_tx_converter_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_converter_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_converter_sink_param_length;
wire benchsoc_etherbone_tx_converter_source_valid;
wire benchsoc_etherbone_tx_converter_source_ready;
wire benchsoc_etherbone_tx_converter_source_first;
wire benchsoc_etherbone_tx_converter_source_last;
wire [7:0] benchsoc_etherbone_tx_converter_source_payload_data;
wire benchsoc_etherbone_tx_converter_source_payload_last_be;
wire benchsoc_etherbone_tx_converter_source_payload_error;
wire [15:0] benchsoc_etherbone_tx_converter_source_param_src_port;
wire [15:0] benchsoc_etherbone_tx_converter_source_param_dst_port;
wire [31:0] benchsoc_etherbone_tx_converter_source_param_ip_address;
wire [15:0] benchsoc_etherbone_tx_converter_source_param_length;
wire benchsoc_etherbone_tx_converter_converter_sink_valid;
wire benchsoc_etherbone_tx_converter_converter_sink_ready;
wire benchsoc_etherbone_tx_converter_converter_sink_first;
wire benchsoc_etherbone_tx_converter_converter_sink_last;
reg  [39:0] benchsoc_etherbone_tx_converter_converter_sink_payload_data = 40'd0;
wire benchsoc_etherbone_tx_converter_converter_source_valid;
wire benchsoc_etherbone_tx_converter_converter_source_ready;
wire benchsoc_etherbone_tx_converter_converter_source_first;
wire benchsoc_etherbone_tx_converter_converter_source_last;
reg  [9:0] benchsoc_etherbone_tx_converter_converter_source_payload_data = 10'd0;
wire benchsoc_etherbone_tx_converter_converter_source_payload_valid_token_count;
reg  [1:0] benchsoc_etherbone_tx_converter_converter_mux = 2'd0;
wire benchsoc_etherbone_tx_converter_converter_first;
wire benchsoc_etherbone_tx_converter_converter_last;
wire benchsoc_etherbone_tx_converter_source_source_valid;
wire benchsoc_etherbone_tx_converter_source_source_ready;
wire benchsoc_etherbone_tx_converter_source_source_first;
wire benchsoc_etherbone_tx_converter_source_source_last;
wire [9:0] benchsoc_etherbone_tx_converter_source_source_payload_data;
wire benchsoc_etherbone_rx_converter_sink_valid;
wire benchsoc_etherbone_rx_converter_sink_ready;
wire benchsoc_etherbone_rx_converter_sink_first;
wire benchsoc_etherbone_rx_converter_sink_last;
wire [7:0] benchsoc_etherbone_rx_converter_sink_payload_data;
wire benchsoc_etherbone_rx_converter_sink_payload_last_be;
wire benchsoc_etherbone_rx_converter_sink_payload_error;
wire [15:0] benchsoc_etherbone_rx_converter_sink_param_src_port;
wire [15:0] benchsoc_etherbone_rx_converter_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_converter_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_converter_sink_param_length;
wire benchsoc_etherbone_rx_converter_source_valid;
wire benchsoc_etherbone_rx_converter_source_ready;
wire benchsoc_etherbone_rx_converter_source_first;
wire benchsoc_etherbone_rx_converter_source_last;
reg  [31:0] benchsoc_etherbone_rx_converter_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_rx_converter_source_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_rx_converter_source_payload_error = 4'd0;
reg  [15:0] benchsoc_etherbone_rx_converter_source_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_rx_converter_source_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_rx_converter_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_rx_converter_source_param_length = 16'd0;
wire benchsoc_etherbone_rx_converter_converter_sink_valid;
wire benchsoc_etherbone_rx_converter_converter_sink_ready;
wire benchsoc_etherbone_rx_converter_converter_sink_first;
wire benchsoc_etherbone_rx_converter_converter_sink_last;
wire [9:0] benchsoc_etherbone_rx_converter_converter_sink_payload_data;
wire benchsoc_etherbone_rx_converter_converter_source_valid;
wire benchsoc_etherbone_rx_converter_converter_source_ready;
reg  benchsoc_etherbone_rx_converter_converter_source_first = 1'd0;
reg  benchsoc_etherbone_rx_converter_converter_source_last = 1'd0;
reg  [39:0] benchsoc_etherbone_rx_converter_converter_source_payload_data = 40'd0;
reg  [2:0] benchsoc_etherbone_rx_converter_converter_source_payload_valid_token_count = 3'd0;
reg  [1:0] benchsoc_etherbone_rx_converter_converter_demux = 2'd0;
wire benchsoc_etherbone_rx_converter_converter_load_part;
reg  benchsoc_etherbone_rx_converter_converter_strobe_all = 1'd0;
wire benchsoc_etherbone_rx_converter_source_source_valid;
wire benchsoc_etherbone_rx_converter_source_source_ready;
wire benchsoc_etherbone_rx_converter_source_source_first;
wire benchsoc_etherbone_rx_converter_source_source_last;
wire [39:0] benchsoc_etherbone_rx_converter_source_source_payload_data;
wire benchsoc_etherbone_rx_cdc_sink_sink_valid;
wire benchsoc_etherbone_rx_cdc_sink_sink_ready;
wire benchsoc_etherbone_rx_cdc_sink_sink_first;
wire benchsoc_etherbone_rx_cdc_sink_sink_last;
wire [31:0] benchsoc_etherbone_rx_cdc_sink_sink_payload_data;
wire [3:0] benchsoc_etherbone_rx_cdc_sink_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_cdc_sink_sink_payload_error;
wire [15:0] benchsoc_etherbone_rx_cdc_sink_sink_param_src_port;
wire [15:0] benchsoc_etherbone_rx_cdc_sink_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_cdc_sink_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_cdc_sink_sink_param_length;
wire benchsoc_etherbone_rx_cdc_source_source_valid;
wire benchsoc_etherbone_rx_cdc_source_source_ready;
wire benchsoc_etherbone_rx_cdc_source_source_first;
wire benchsoc_etherbone_rx_cdc_source_source_last;
wire [31:0] benchsoc_etherbone_rx_cdc_source_source_payload_data;
wire [3:0] benchsoc_etherbone_rx_cdc_source_source_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_cdc_source_source_payload_error;
wire [15:0] benchsoc_etherbone_rx_cdc_source_source_param_src_port;
wire [15:0] benchsoc_etherbone_rx_cdc_source_source_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_cdc_source_source_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_cdc_source_source_param_length;
wire benchsoc_etherbone_rx_cdc_cdc_sink_valid;
wire benchsoc_etherbone_rx_cdc_cdc_sink_ready;
wire benchsoc_etherbone_rx_cdc_cdc_sink_first;
wire benchsoc_etherbone_rx_cdc_cdc_sink_last;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_sink_payload_data;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_sink_payload_error;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_sink_param_src_port;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_sink_param_length;
wire benchsoc_etherbone_rx_cdc_cdc_source_valid;
wire benchsoc_etherbone_rx_cdc_cdc_source_ready;
wire benchsoc_etherbone_rx_cdc_cdc_source_first;
wire benchsoc_etherbone_rx_cdc_cdc_source_last;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_source_payload_data;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_source_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_source_payload_error;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_source_param_src_port;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_source_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_source_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_source_param_length;
wire benchsoc_etherbone_rx_cdc_cdc_asyncfifo_we;
wire benchsoc_etherbone_rx_cdc_cdc_asyncfifo_writable;
wire benchsoc_etherbone_rx_cdc_cdc_asyncfifo_re;
wire benchsoc_etherbone_rx_cdc_cdc_asyncfifo_readable;
wire [121:0] benchsoc_etherbone_rx_cdc_cdc_asyncfifo_din;
wire [121:0] benchsoc_etherbone_rx_cdc_cdc_asyncfifo_dout;
wire benchsoc_etherbone_rx_cdc_cdc_graycounter0_ce;
reg  [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter0_q = 3'd0;
wire [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next;
reg  [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_binary = 3'd0;
reg  [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary = 3'd0;
wire benchsoc_etherbone_rx_cdc_cdc_graycounter1_ce;
reg  [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter1_q = 3'd0;
wire [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next;
reg  [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_binary = 3'd0;
reg  [2:0] benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary = 3'd0;
wire [2:0] benchsoc_etherbone_rx_cdc_cdc_produce_rdomain;
wire [2:0] benchsoc_etherbone_rx_cdc_cdc_consume_wdomain;
wire [1:0] benchsoc_etherbone_rx_cdc_cdc_wrport_adr;
wire [121:0] benchsoc_etherbone_rx_cdc_cdc_wrport_dat_r;
wire benchsoc_etherbone_rx_cdc_cdc_wrport_we;
wire [121:0] benchsoc_etherbone_rx_cdc_cdc_wrport_dat_w;
wire [1:0] benchsoc_etherbone_rx_cdc_cdc_rdport_adr;
wire [121:0] benchsoc_etherbone_rx_cdc_cdc_rdport_dat_r;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_data;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_error;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_src_port;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_length;
wire benchsoc_etherbone_rx_cdc_cdc_fifo_in_first;
wire benchsoc_etherbone_rx_cdc_cdc_fifo_in_last;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_data;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_last_be;
wire [3:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_error;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_src_port;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_dst_port;
wire [31:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_ip_address;
wire [15:0] benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_length;
wire benchsoc_etherbone_rx_cdc_cdc_fifo_out_first;
wire benchsoc_etherbone_rx_cdc_cdc_fifo_out_last;
reg  benchsoc_etherbone_probe_sink_valid = 1'd0;
wire benchsoc_etherbone_probe_sink_ready;
reg  benchsoc_etherbone_probe_sink_first = 1'd0;
reg  benchsoc_etherbone_probe_sink_last = 1'd0;
reg  [31:0] benchsoc_etherbone_probe_sink_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_probe_sink_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_probe_sink_payload_error = 4'd0;
reg  [3:0] benchsoc_etherbone_probe_sink_param_addr_size = 4'd0;
reg  benchsoc_etherbone_probe_sink_param_nr = 1'd0;
reg  benchsoc_etherbone_probe_sink_param_pf = 1'd0;
reg  [3:0] benchsoc_etherbone_probe_sink_param_port_size = 4'd0;
reg  benchsoc_etherbone_probe_sink_param_pr = 1'd0;
reg  [15:0] benchsoc_etherbone_probe_sink_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_probe_sink_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_probe_sink_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_probe_sink_param_length = 16'd0;
reg  benchsoc_etherbone_probe_source_valid = 1'd0;
reg  benchsoc_etherbone_probe_source_ready = 1'd0;
reg  benchsoc_etherbone_probe_source_first = 1'd0;
reg  benchsoc_etherbone_probe_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_probe_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_probe_source_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_probe_source_payload_error = 4'd0;
reg  [3:0] benchsoc_etherbone_probe_source_param_addr_size = 4'd0;
reg  benchsoc_etherbone_probe_source_param_nr = 1'd0;
reg  benchsoc_etherbone_probe_source_param_pf = 1'd0;
reg  [3:0] benchsoc_etherbone_probe_source_param_port_size = 4'd0;
reg  benchsoc_etherbone_probe_source_param_pr = 1'd0;
reg  [15:0] benchsoc_etherbone_probe_source_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_probe_source_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_probe_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_probe_source_param_length = 16'd0;
wire benchsoc_etherbone_probe_sink_sink_valid;
wire benchsoc_etherbone_probe_sink_sink_ready;
wire benchsoc_etherbone_probe_sink_sink_first;
wire benchsoc_etherbone_probe_sink_sink_last;
wire [31:0] benchsoc_etherbone_probe_sink_sink_payload_data;
wire [3:0] benchsoc_etherbone_probe_sink_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_probe_sink_sink_payload_error;
wire [3:0] benchsoc_etherbone_probe_sink_sink_param_addr_size;
wire benchsoc_etherbone_probe_sink_sink_param_nr;
wire benchsoc_etherbone_probe_sink_sink_param_pf;
wire [3:0] benchsoc_etherbone_probe_sink_sink_param_port_size;
wire benchsoc_etherbone_probe_sink_sink_param_pr;
wire [15:0] benchsoc_etherbone_probe_sink_sink_param_src_port;
wire [15:0] benchsoc_etherbone_probe_sink_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_probe_sink_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_probe_sink_sink_param_length;
wire benchsoc_etherbone_probe_source_source_valid;
reg  benchsoc_etherbone_probe_source_source_ready = 1'd0;
reg  benchsoc_etherbone_probe_source_source_first = 1'd0;
wire benchsoc_etherbone_probe_source_source_last;
wire [31:0] benchsoc_etherbone_probe_source_source_payload_data;
wire [3:0] benchsoc_etherbone_probe_source_source_payload_last_be;
wire [3:0] benchsoc_etherbone_probe_source_source_payload_error;
wire [3:0] benchsoc_etherbone_probe_source_source_param_addr_size;
wire benchsoc_etherbone_probe_source_source_param_nr;
wire benchsoc_etherbone_probe_source_source_param_pf;
wire [3:0] benchsoc_etherbone_probe_source_source_param_port_size;
wire benchsoc_etherbone_probe_source_source_param_pr;
wire [15:0] benchsoc_etherbone_probe_source_source_param_src_port;
wire [15:0] benchsoc_etherbone_probe_source_source_param_dst_port;
wire [31:0] benchsoc_etherbone_probe_source_source_param_ip_address;
wire [15:0] benchsoc_etherbone_probe_source_source_param_length;
wire benchsoc_etherbone_probe_payload_fifo_sink_valid;
wire benchsoc_etherbone_probe_payload_fifo_sink_ready;
reg  benchsoc_etherbone_probe_payload_fifo_sink_first = 1'd0;
wire benchsoc_etherbone_probe_payload_fifo_sink_last;
wire [31:0] benchsoc_etherbone_probe_payload_fifo_sink_payload_data;
wire [3:0] benchsoc_etherbone_probe_payload_fifo_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_probe_payload_fifo_sink_payload_error;
reg  benchsoc_etherbone_probe_payload_fifo_source_valid = 1'd0;
wire benchsoc_etherbone_probe_payload_fifo_source_ready;
reg  benchsoc_etherbone_probe_payload_fifo_source_first = 1'd0;
reg  benchsoc_etherbone_probe_payload_fifo_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_probe_payload_fifo_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_probe_payload_fifo_source_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_probe_payload_fifo_source_payload_error = 4'd0;
wire benchsoc_etherbone_probe_param_fifo_sink_valid;
wire benchsoc_etherbone_probe_param_fifo_sink_ready;
reg  benchsoc_etherbone_probe_param_fifo_sink_first = 1'd0;
reg  benchsoc_etherbone_probe_param_fifo_sink_last = 1'd0;
wire [3:0] benchsoc_etherbone_probe_param_fifo_sink_param_addr_size;
wire benchsoc_etherbone_probe_param_fifo_sink_param_nr;
wire benchsoc_etherbone_probe_param_fifo_sink_param_pf;
wire [3:0] benchsoc_etherbone_probe_param_fifo_sink_param_port_size;
wire benchsoc_etherbone_probe_param_fifo_sink_param_pr;
wire [15:0] benchsoc_etherbone_probe_param_fifo_sink_param_src_port;
wire [15:0] benchsoc_etherbone_probe_param_fifo_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_probe_param_fifo_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_probe_param_fifo_sink_param_length;
reg  benchsoc_etherbone_probe_param_fifo_source_valid = 1'd0;
wire benchsoc_etherbone_probe_param_fifo_source_ready;
reg  benchsoc_etherbone_probe_param_fifo_source_first = 1'd0;
reg  benchsoc_etherbone_probe_param_fifo_source_last = 1'd0;
reg  [3:0] benchsoc_etherbone_probe_param_fifo_source_param_addr_size = 4'd0;
reg  benchsoc_etherbone_probe_param_fifo_source_param_nr = 1'd0;
reg  benchsoc_etherbone_probe_param_fifo_source_param_pf = 1'd0;
reg  [3:0] benchsoc_etherbone_probe_param_fifo_source_param_port_size = 4'd0;
reg  benchsoc_etherbone_probe_param_fifo_source_param_pr = 1'd0;
reg  [15:0] benchsoc_etherbone_probe_param_fifo_source_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_probe_param_fifo_source_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_probe_param_fifo_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_probe_param_fifo_source_param_length = 16'd0;
reg  benchsoc_etherbone_record_sink_sink_valid = 1'd0;
wire benchsoc_etherbone_record_sink_sink_ready;
reg  benchsoc_etherbone_record_sink_sink_first = 1'd0;
reg  benchsoc_etherbone_record_sink_sink_last = 1'd0;
reg  [31:0] benchsoc_etherbone_record_sink_sink_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_record_sink_sink_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_record_sink_sink_payload_error = 4'd0;
reg  [3:0] benchsoc_etherbone_record_sink_sink_param_addr_size = 4'd0;
reg  benchsoc_etherbone_record_sink_sink_param_nr = 1'd0;
reg  benchsoc_etherbone_record_sink_sink_param_pf = 1'd0;
reg  [3:0] benchsoc_etherbone_record_sink_sink_param_port_size = 4'd0;
reg  benchsoc_etherbone_record_sink_sink_param_pr = 1'd0;
reg  [15:0] benchsoc_etherbone_record_sink_sink_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_record_sink_sink_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_record_sink_sink_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_record_sink_sink_param_length = 16'd0;
wire benchsoc_etherbone_record_source_source_valid;
reg  benchsoc_etherbone_record_source_source_ready = 1'd0;
wire benchsoc_etherbone_record_source_source_first;
wire benchsoc_etherbone_record_source_source_last;
wire [31:0] benchsoc_etherbone_record_source_source_payload_data;
wire [3:0] benchsoc_etherbone_record_source_source_payload_last_be;
wire [3:0] benchsoc_etherbone_record_source_source_payload_error;
wire [3:0] benchsoc_etherbone_record_source_source_param_addr_size;
wire benchsoc_etherbone_record_source_source_param_nr;
wire benchsoc_etherbone_record_source_source_param_pf;
wire [3:0] benchsoc_etherbone_record_source_source_param_port_size;
wire benchsoc_etherbone_record_source_source_param_pr;
wire [15:0] benchsoc_etherbone_record_source_source_param_src_port;
wire [15:0] benchsoc_etherbone_record_source_source_param_dst_port;
reg  [31:0] benchsoc_etherbone_record_source_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_record_source_source_param_length = 16'd0;
wire benchsoc_etherbone_record_depacketizer_sink_valid;
reg  benchsoc_etherbone_record_depacketizer_sink_ready = 1'd0;
wire benchsoc_etherbone_record_depacketizer_sink_first;
wire benchsoc_etherbone_record_depacketizer_sink_last;
wire [31:0] benchsoc_etherbone_record_depacketizer_sink_payload_data;
wire [3:0] benchsoc_etherbone_record_depacketizer_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_record_depacketizer_sink_payload_error;
wire [3:0] benchsoc_etherbone_record_depacketizer_sink_param_addr_size;
wire benchsoc_etherbone_record_depacketizer_sink_param_nr;
wire benchsoc_etherbone_record_depacketizer_sink_param_pf;
wire [3:0] benchsoc_etherbone_record_depacketizer_sink_param_port_size;
wire benchsoc_etherbone_record_depacketizer_sink_param_pr;
wire [15:0] benchsoc_etherbone_record_depacketizer_sink_param_src_port;
wire [15:0] benchsoc_etherbone_record_depacketizer_sink_param_dst_port;
wire [31:0] benchsoc_etherbone_record_depacketizer_sink_param_ip_address;
wire [15:0] benchsoc_etherbone_record_depacketizer_sink_param_length;
reg  benchsoc_etherbone_record_depacketizer_source_valid = 1'd0;
wire benchsoc_etherbone_record_depacketizer_source_ready;
reg  benchsoc_etherbone_record_depacketizer_source_first = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_record_depacketizer_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_record_depacketizer_source_payload_last_be = 4'd0;
wire [3:0] benchsoc_etherbone_record_depacketizer_source_payload_error;
wire benchsoc_etherbone_record_depacketizer_source_param_bca;
wire [7:0] benchsoc_etherbone_record_depacketizer_source_param_byte_enable;
wire benchsoc_etherbone_record_depacketizer_source_param_cyc;
wire benchsoc_etherbone_record_depacketizer_source_param_rca;
wire [7:0] benchsoc_etherbone_record_depacketizer_source_param_rcount;
wire benchsoc_etherbone_record_depacketizer_source_param_rff;
wire benchsoc_etherbone_record_depacketizer_source_param_wca;
wire [7:0] benchsoc_etherbone_record_depacketizer_source_param_wcount;
wire benchsoc_etherbone_record_depacketizer_source_param_wff;
wire [31:0] benchsoc_etherbone_record_depacketizer_header;
reg  [31:0] benchsoc_etherbone_record_depacketizer_sr = 32'd0;
reg  benchsoc_etherbone_record_depacketizer_sr_shift = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_count = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_sink_d_last = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_source_last_a = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_source_last_b = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_source_last_s = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_fsm_from_idle = 1'd0;
wire [3:0] benchsoc_etherbone_record_depacketizer_new_last_be;
reg  [3:0] benchsoc_etherbone_record_depacketizer_delayed_last_be = 4'd0;
wire benchsoc_etherbone_record_depacketizer_is_in_copy;
reg  benchsoc_etherbone_record_depacketizer_was_in_copy = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_is_ongoing0 = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_is_ongoing1 = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_is_ongoing2 = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_is_ongoing3 = 1'd0;
wire benchsoc_etherbone_record_receiver_sink_valid;
wire benchsoc_etherbone_record_receiver_sink_ready;
wire benchsoc_etherbone_record_receiver_sink_first;
wire benchsoc_etherbone_record_receiver_sink_last;
reg  [31:0] benchsoc_etherbone_record_receiver_sink_payload_data = 32'd0;
wire [3:0] benchsoc_etherbone_record_receiver_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_sink_payload_error;
wire benchsoc_etherbone_record_receiver_sink_param_bca;
wire [7:0] benchsoc_etherbone_record_receiver_sink_param_byte_enable;
wire benchsoc_etherbone_record_receiver_sink_param_cyc;
wire benchsoc_etherbone_record_receiver_sink_param_rca;
wire [7:0] benchsoc_etherbone_record_receiver_sink_param_rcount;
wire benchsoc_etherbone_record_receiver_sink_param_rff;
wire benchsoc_etherbone_record_receiver_sink_param_wca;
wire [7:0] benchsoc_etherbone_record_receiver_sink_param_wcount;
wire benchsoc_etherbone_record_receiver_sink_param_wff;
reg  benchsoc_etherbone_record_receiver_source_valid = 1'd0;
wire benchsoc_etherbone_record_receiver_source_ready;
reg  benchsoc_etherbone_record_receiver_source_first = 1'd0;
reg  benchsoc_etherbone_record_receiver_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_record_receiver_source_payload_addr = 32'd0;
reg  [3:0] benchsoc_etherbone_record_receiver_source_payload_last_be = 4'd0;
reg  [31:0] benchsoc_etherbone_record_receiver_source_payload_data = 32'd0;
reg  benchsoc_etherbone_record_receiver_source_param_we = 1'd0;
reg  [7:0] benchsoc_etherbone_record_receiver_source_param_count = 8'd0;
reg  [31:0] benchsoc_etherbone_record_receiver_source_param_base_addr = 32'd0;
reg  [3:0] benchsoc_etherbone_record_receiver_source_param_be = 4'd0;
wire benchsoc_etherbone_record_receiver_sink_sink_valid;
wire benchsoc_etherbone_record_receiver_sink_sink_ready;
wire benchsoc_etherbone_record_receiver_sink_sink_first;
wire benchsoc_etherbone_record_receiver_sink_sink_last;
wire [31:0] benchsoc_etherbone_record_receiver_sink_sink_payload_data;
wire [3:0] benchsoc_etherbone_record_receiver_sink_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_sink_sink_payload_error;
wire benchsoc_etherbone_record_receiver_sink_sink_param_bca;
wire [7:0] benchsoc_etherbone_record_receiver_sink_sink_param_byte_enable;
wire benchsoc_etherbone_record_receiver_sink_sink_param_cyc;
wire benchsoc_etherbone_record_receiver_sink_sink_param_rca;
wire [7:0] benchsoc_etherbone_record_receiver_sink_sink_param_rcount;
wire benchsoc_etherbone_record_receiver_sink_sink_param_rff;
wire benchsoc_etherbone_record_receiver_sink_sink_param_wca;
wire [7:0] benchsoc_etherbone_record_receiver_sink_sink_param_wcount;
wire benchsoc_etherbone_record_receiver_sink_sink_param_wff;
wire benchsoc_etherbone_record_receiver_source_source_valid;
reg  benchsoc_etherbone_record_receiver_source_source_ready = 1'd0;
reg  benchsoc_etherbone_record_receiver_source_source_first = 1'd0;
wire benchsoc_etherbone_record_receiver_source_source_last;
wire [31:0] benchsoc_etherbone_record_receiver_source_source_payload_data;
wire [3:0] benchsoc_etherbone_record_receiver_source_source_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_source_source_payload_error;
wire benchsoc_etherbone_record_receiver_source_source_param_bca;
wire [7:0] benchsoc_etherbone_record_receiver_source_source_param_byte_enable;
wire benchsoc_etherbone_record_receiver_source_source_param_cyc;
wire benchsoc_etherbone_record_receiver_source_source_param_rca;
wire [7:0] benchsoc_etherbone_record_receiver_source_source_param_rcount;
wire benchsoc_etherbone_record_receiver_source_source_param_rff;
wire benchsoc_etherbone_record_receiver_source_source_param_wca;
wire [7:0] benchsoc_etherbone_record_receiver_source_source_param_wcount;
wire benchsoc_etherbone_record_receiver_source_source_param_wff;
wire benchsoc_etherbone_record_receiver_payload_fifo_sink_valid;
wire benchsoc_etherbone_record_receiver_payload_fifo_sink_ready;
reg  benchsoc_etherbone_record_receiver_payload_fifo_sink_first = 1'd0;
wire benchsoc_etherbone_record_receiver_payload_fifo_sink_last;
wire [31:0] benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_data;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_error;
wire benchsoc_etherbone_record_receiver_payload_fifo_source_valid;
wire benchsoc_etherbone_record_receiver_payload_fifo_source_ready;
wire benchsoc_etherbone_record_receiver_payload_fifo_source_first;
wire benchsoc_etherbone_record_receiver_payload_fifo_source_last;
wire [31:0] benchsoc_etherbone_record_receiver_payload_fifo_source_payload_data;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_source_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_source_payload_error;
wire benchsoc_etherbone_record_receiver_payload_fifo_re;
reg  benchsoc_etherbone_record_receiver_payload_fifo_readable = 1'd0;
wire benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_we;
wire benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_writable;
wire benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_re;
wire benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_readable;
wire [41:0] benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_din;
wire [41:0] benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_dout;
reg  [10:0] benchsoc_etherbone_record_receiver_payload_fifo_level0 = 11'd0;
reg  benchsoc_etherbone_record_receiver_payload_fifo_replace = 1'd0;
reg  [10:0] benchsoc_etherbone_record_receiver_payload_fifo_produce = 11'd0;
reg  [10:0] benchsoc_etherbone_record_receiver_payload_fifo_consume = 11'd0;
reg  [10:0] benchsoc_etherbone_record_receiver_payload_fifo_wrport_adr = 11'd0;
wire [41:0] benchsoc_etherbone_record_receiver_payload_fifo_wrport_dat_r;
wire benchsoc_etherbone_record_receiver_payload_fifo_wrport_we;
wire [41:0] benchsoc_etherbone_record_receiver_payload_fifo_wrport_dat_w;
wire benchsoc_etherbone_record_receiver_payload_fifo_do_read;
wire [10:0] benchsoc_etherbone_record_receiver_payload_fifo_rdport_adr;
wire [41:0] benchsoc_etherbone_record_receiver_payload_fifo_rdport_dat_r;
wire benchsoc_etherbone_record_receiver_payload_fifo_rdport_re;
wire [10:0] benchsoc_etherbone_record_receiver_payload_fifo_level1;
wire [31:0] benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_data;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_error;
wire benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_first;
wire benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_last;
wire [31:0] benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_data;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_last_be;
wire [3:0] benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_error;
wire benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_first;
wire benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_last;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_valid;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_ready;
reg  benchsoc_etherbone_record_receiver_param_fifo_sink_first = 1'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_sink_last = 1'd0;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_param_bca;
wire [7:0] benchsoc_etherbone_record_receiver_param_fifo_sink_param_byte_enable;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_param_cyc;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_param_rca;
wire [7:0] benchsoc_etherbone_record_receiver_param_fifo_sink_param_rcount;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_param_rff;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_param_wca;
wire [7:0] benchsoc_etherbone_record_receiver_param_fifo_sink_param_wcount;
wire benchsoc_etherbone_record_receiver_param_fifo_sink_param_wff;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_valid = 1'd0;
wire benchsoc_etherbone_record_receiver_param_fifo_source_ready;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_first = 1'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_last = 1'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_param_bca = 1'd0;
reg  [7:0] benchsoc_etherbone_record_receiver_param_fifo_source_param_byte_enable = 8'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_param_cyc = 1'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_param_rca = 1'd0;
reg  [7:0] benchsoc_etherbone_record_receiver_param_fifo_source_param_rcount = 8'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_param_rff = 1'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_param_wca = 1'd0;
reg  [7:0] benchsoc_etherbone_record_receiver_param_fifo_source_param_wcount = 8'd0;
reg  benchsoc_etherbone_record_receiver_param_fifo_source_param_wff = 1'd0;
reg  [31:0] benchsoc_etherbone_record_receiver_base_addr = 32'd0;
reg  benchsoc_etherbone_record_receiver_base_addr_update = 1'd0;
reg  [8:0] benchsoc_etherbone_record_receiver_count = 9'd0;
reg  benchsoc_etherbone_record_first = 1'd1;
reg  [31:0] benchsoc_etherbone_record_last_ip_address = 32'd0;
wire benchsoc_etherbone_record_sender_sink_valid;
wire benchsoc_etherbone_record_sender_sink_ready;
wire benchsoc_etherbone_record_sender_sink_first;
wire benchsoc_etherbone_record_sender_sink_last;
wire [31:0] benchsoc_etherbone_record_sender_sink_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_sink_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_sink_payload_data;
wire benchsoc_etherbone_record_sender_sink_param_we;
wire [7:0] benchsoc_etherbone_record_sender_sink_param_count;
wire [31:0] benchsoc_etherbone_record_sender_sink_param_base_addr;
wire [3:0] benchsoc_etherbone_record_sender_sink_param_be;
reg  benchsoc_etherbone_record_sender_source_valid = 1'd0;
wire benchsoc_etherbone_record_sender_source_ready;
reg  benchsoc_etherbone_record_sender_source_first = 1'd0;
reg  benchsoc_etherbone_record_sender_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_record_sender_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_record_sender_source_payload_last_be = 4'd0;
reg  [3:0] benchsoc_etherbone_record_sender_source_payload_error = 4'd0;
reg  benchsoc_etherbone_record_sender_source_param_bca = 1'd0;
wire [7:0] benchsoc_etherbone_record_sender_source_param_byte_enable;
reg  benchsoc_etherbone_record_sender_source_param_cyc = 1'd0;
reg  benchsoc_etherbone_record_sender_source_param_rca = 1'd0;
reg  [7:0] benchsoc_etherbone_record_sender_source_param_rcount = 8'd0;
reg  benchsoc_etherbone_record_sender_source_param_rff = 1'd0;
reg  benchsoc_etherbone_record_sender_source_param_wca = 1'd0;
reg  [7:0] benchsoc_etherbone_record_sender_source_param_wcount = 8'd0;
reg  benchsoc_etherbone_record_sender_source_param_wff = 1'd0;
wire benchsoc_etherbone_record_sender_sink_sink_valid;
wire benchsoc_etherbone_record_sender_sink_sink_ready;
wire benchsoc_etherbone_record_sender_sink_sink_first;
wire benchsoc_etherbone_record_sender_sink_sink_last;
wire [31:0] benchsoc_etherbone_record_sender_sink_sink_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_sink_sink_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_sink_sink_payload_data;
wire benchsoc_etherbone_record_sender_sink_sink_param_we;
wire [7:0] benchsoc_etherbone_record_sender_sink_sink_param_count;
wire [31:0] benchsoc_etherbone_record_sender_sink_sink_param_base_addr;
wire [3:0] benchsoc_etherbone_record_sender_sink_sink_param_be;
wire benchsoc_etherbone_record_sender_source_source_valid;
reg  benchsoc_etherbone_record_sender_source_source_ready = 1'd0;
reg  benchsoc_etherbone_record_sender_source_source_first = 1'd0;
wire benchsoc_etherbone_record_sender_source_source_last;
wire [31:0] benchsoc_etherbone_record_sender_source_source_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_source_source_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_source_source_payload_data;
wire benchsoc_etherbone_record_sender_source_source_param_we;
wire [7:0] benchsoc_etherbone_record_sender_source_source_param_count;
wire [31:0] benchsoc_etherbone_record_sender_source_source_param_base_addr;
wire [3:0] benchsoc_etherbone_record_sender_source_source_param_be;
wire benchsoc_etherbone_record_sender_payload_fifo_sink_valid;
wire benchsoc_etherbone_record_sender_payload_fifo_sink_ready;
reg  benchsoc_etherbone_record_sender_payload_fifo_sink_first = 1'd0;
wire benchsoc_etherbone_record_sender_payload_fifo_sink_last;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_sink_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_payload_fifo_sink_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_sink_payload_data;
wire benchsoc_etherbone_record_sender_payload_fifo_source_valid;
wire benchsoc_etherbone_record_sender_payload_fifo_source_ready;
wire benchsoc_etherbone_record_sender_payload_fifo_source_first;
wire benchsoc_etherbone_record_sender_payload_fifo_source_last;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_source_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_payload_fifo_source_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_source_payload_data;
wire benchsoc_etherbone_record_sender_payload_fifo_re;
reg  benchsoc_etherbone_record_sender_payload_fifo_readable = 1'd0;
wire benchsoc_etherbone_record_sender_payload_fifo_syncfifo_we;
wire benchsoc_etherbone_record_sender_payload_fifo_syncfifo_writable;
wire benchsoc_etherbone_record_sender_payload_fifo_syncfifo_re;
wire benchsoc_etherbone_record_sender_payload_fifo_syncfifo_readable;
wire [69:0] benchsoc_etherbone_record_sender_payload_fifo_syncfifo_din;
wire [69:0] benchsoc_etherbone_record_sender_payload_fifo_syncfifo_dout;
reg  [10:0] benchsoc_etherbone_record_sender_payload_fifo_level0 = 11'd0;
reg  benchsoc_etherbone_record_sender_payload_fifo_replace = 1'd0;
reg  [10:0] benchsoc_etherbone_record_sender_payload_fifo_produce = 11'd0;
reg  [10:0] benchsoc_etherbone_record_sender_payload_fifo_consume = 11'd0;
reg  [10:0] benchsoc_etherbone_record_sender_payload_fifo_wrport_adr = 11'd0;
wire [69:0] benchsoc_etherbone_record_sender_payload_fifo_wrport_dat_r;
wire benchsoc_etherbone_record_sender_payload_fifo_wrport_we;
wire [69:0] benchsoc_etherbone_record_sender_payload_fifo_wrport_dat_w;
wire benchsoc_etherbone_record_sender_payload_fifo_do_read;
wire [10:0] benchsoc_etherbone_record_sender_payload_fifo_rdport_adr;
wire [69:0] benchsoc_etherbone_record_sender_payload_fifo_rdport_dat_r;
wire benchsoc_etherbone_record_sender_payload_fifo_rdport_re;
wire [10:0] benchsoc_etherbone_record_sender_payload_fifo_level1;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_data;
wire benchsoc_etherbone_record_sender_payload_fifo_fifo_in_first;
wire benchsoc_etherbone_record_sender_payload_fifo_fifo_in_last;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_addr;
wire [3:0] benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_last_be;
wire [31:0] benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_data;
wire benchsoc_etherbone_record_sender_payload_fifo_fifo_out_first;
wire benchsoc_etherbone_record_sender_payload_fifo_fifo_out_last;
wire benchsoc_etherbone_record_sender_param_fifo_sink_valid;
wire benchsoc_etherbone_record_sender_param_fifo_sink_ready;
reg  benchsoc_etherbone_record_sender_param_fifo_sink_first = 1'd0;
reg  benchsoc_etherbone_record_sender_param_fifo_sink_last = 1'd0;
wire benchsoc_etherbone_record_sender_param_fifo_sink_param_we;
wire [7:0] benchsoc_etherbone_record_sender_param_fifo_sink_param_count;
wire [31:0] benchsoc_etherbone_record_sender_param_fifo_sink_param_base_addr;
wire [3:0] benchsoc_etherbone_record_sender_param_fifo_sink_param_be;
reg  benchsoc_etherbone_record_sender_param_fifo_source_valid = 1'd0;
wire benchsoc_etherbone_record_sender_param_fifo_source_ready;
reg  benchsoc_etherbone_record_sender_param_fifo_source_first = 1'd0;
reg  benchsoc_etherbone_record_sender_param_fifo_source_last = 1'd0;
reg  benchsoc_etherbone_record_sender_param_fifo_source_param_we = 1'd0;
reg  [7:0] benchsoc_etherbone_record_sender_param_fifo_source_param_count = 8'd0;
reg  [31:0] benchsoc_etherbone_record_sender_param_fifo_source_param_base_addr = 32'd0;
reg  [3:0] benchsoc_etherbone_record_sender_param_fifo_source_param_be = 4'd0;
wire benchsoc_etherbone_record_packetizer_sink_valid;
reg  benchsoc_etherbone_record_packetizer_sink_ready = 1'd0;
wire benchsoc_etherbone_record_packetizer_sink_first;
wire benchsoc_etherbone_record_packetizer_sink_last;
reg  [31:0] benchsoc_etherbone_record_packetizer_sink_payload_data = 32'd0;
wire [3:0] benchsoc_etherbone_record_packetizer_sink_payload_last_be;
wire [3:0] benchsoc_etherbone_record_packetizer_sink_payload_error;
wire benchsoc_etherbone_record_packetizer_sink_param_bca;
wire [7:0] benchsoc_etherbone_record_packetizer_sink_param_byte_enable;
wire benchsoc_etherbone_record_packetizer_sink_param_cyc;
wire benchsoc_etherbone_record_packetizer_sink_param_rca;
wire [7:0] benchsoc_etherbone_record_packetizer_sink_param_rcount;
wire benchsoc_etherbone_record_packetizer_sink_param_rff;
wire benchsoc_etherbone_record_packetizer_sink_param_wca;
wire [7:0] benchsoc_etherbone_record_packetizer_sink_param_wcount;
wire benchsoc_etherbone_record_packetizer_sink_param_wff;
reg  benchsoc_etherbone_record_packetizer_source_valid = 1'd0;
wire benchsoc_etherbone_record_packetizer_source_ready;
reg  benchsoc_etherbone_record_packetizer_source_first = 1'd0;
reg  benchsoc_etherbone_record_packetizer_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_record_packetizer_source_payload_data = 32'd0;
reg  [3:0] benchsoc_etherbone_record_packetizer_source_payload_last_be = 4'd0;
wire [3:0] benchsoc_etherbone_record_packetizer_source_payload_error;
reg  [3:0] benchsoc_etherbone_record_packetizer_source_param_addr_size = 4'd0;
reg  benchsoc_etherbone_record_packetizer_source_param_nr = 1'd0;
reg  benchsoc_etherbone_record_packetizer_source_param_pf = 1'd0;
reg  [3:0] benchsoc_etherbone_record_packetizer_source_param_port_size = 4'd0;
reg  benchsoc_etherbone_record_packetizer_source_param_pr = 1'd0;
reg  [15:0] benchsoc_etherbone_record_packetizer_source_param_src_port = 16'd0;
reg  [15:0] benchsoc_etherbone_record_packetizer_source_param_dst_port = 16'd0;
reg  [31:0] benchsoc_etherbone_record_packetizer_source_param_ip_address = 32'd0;
reg  [15:0] benchsoc_etherbone_record_packetizer_source_param_length = 16'd0;
reg  [31:0] benchsoc_etherbone_record_packetizer_header = 32'd0;
reg  [31:0] benchsoc_etherbone_record_packetizer_sr = 32'd0;
reg  benchsoc_etherbone_record_packetizer_sr_load = 1'd0;
reg  benchsoc_etherbone_record_packetizer_sr_shift = 1'd0;
reg  benchsoc_etherbone_record_packetizer_count = 1'd0;
reg  benchsoc_etherbone_record_packetizer_source_last_a = 1'd0;
reg  benchsoc_etherbone_record_packetizer_source_last_b = 1'd0;
reg  benchsoc_etherbone_record_packetizer_source_last_s = 1'd0;
reg  benchsoc_etherbone_record_packetizer_fsm_from_idle = 1'd0;
wire [3:0] benchsoc_etherbone_record_packetizer_new_last_be;
reg  [3:0] benchsoc_etherbone_record_packetizer_delayed_last_be = 4'd0;
wire benchsoc_etherbone_record_packetizer_in_data_copy;
reg  benchsoc_etherbone_record_packetizer_is_ongoing0 = 1'd0;
reg  benchsoc_etherbone_record_packetizer_is_ongoing1 = 1'd0;
reg  benchsoc_etherbone_record_packetizer_is_ongoing2 = 1'd0;
wire benchsoc_etherbone_dispatcher_sel0;
reg  benchsoc_etherbone_dispatcher_first = 1'd1;
reg  benchsoc_etherbone_dispatcher_last = 1'd0;
wire benchsoc_etherbone_dispatcher_ongoing0;
reg  benchsoc_etherbone_dispatcher_ongoing1 = 1'd0;
reg  benchsoc_etherbone_dispatcher_sel1 = 1'd0;
reg  benchsoc_etherbone_dispatcher_sel_ongoing = 1'd0;
reg  [1:0] benchsoc_etherbone_request = 2'd0;
reg  benchsoc_etherbone_grant = 1'd0;
reg  benchsoc_etherbone_status0_first = 1'd1;
reg  benchsoc_etherbone_status0_last = 1'd0;
wire benchsoc_etherbone_status0_ongoing0;
reg  benchsoc_etherbone_status0_ongoing1 = 1'd0;
reg  benchsoc_etherbone_status1_first = 1'd1;
reg  benchsoc_etherbone_status1_last = 1'd0;
wire benchsoc_etherbone_status1_ongoing0;
reg  benchsoc_etherbone_status1_ongoing1 = 1'd0;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_sink_valid;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready = 1'd0;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_sink_first;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_sink_last;
wire [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_addr;
wire [3:0] benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_last_be;
wire [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_data;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_we;
wire [7:0] benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_count;
wire [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_base_addr;
wire [3:0] benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_be;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_source_valid = 1'd0;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_source_ready;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_source_first = 1'd0;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_source_last = 1'd0;
reg  [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_addr = 32'd0;
reg  [3:0] benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_last_be = 4'd0;
reg  [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_data = 32'd0;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_we = 1'd0;
reg  [7:0] benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_count = 8'd0;
reg  [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_base_addr = 32'd0;
reg  [3:0] benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_be = 4'd0;
reg  [29:0] benchsoc_etherbone_liteethetherbonewishbonemaster_bus_adr = 30'd0;
reg  [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_w = 32'd0;
wire [31:0] benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_r;
reg  [3:0] benchsoc_etherbone_liteethetherbonewishbonemaster_bus_sel = 4'd0;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cyc = 1'd0;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb = 1'd0;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_bus_ack;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_bus_we = 1'd0;
reg  [2:0] benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cti = 3'd0;
reg  [1:0] benchsoc_etherbone_liteethetherbonewishbonemaster_bus_bte = 2'd0;
wire benchsoc_etherbone_liteethetherbonewishbonemaster_bus_err;
reg  benchsoc_etherbone_liteethetherbonewishbonemaster_data_update = 1'd0;
wire encoder1_A;
wire encoder1_B;
wire encoder1_Z;
reg  encoder1_zr = 1'd0;
reg  [14:0] encoder1_c = 15'd0;
reg  [14:0] encoder1_i = 15'd0;
reg  encoder1_zl = 1'd0;
wire [31:0] encoder1_out;
reg  [2:0] encoder1_Ad = 3'd0;
reg  [2:0] encoder1_Bd = 3'd0;
reg  [2:0] encoder1_Zc = 3'd0;
wire encoder1_good_zero;
wire encoder1_good_one;
reg  encoder1_last_good = 1'd0;
wire encoder1_index_pulse;
wire encoder1_count_direction;
wire encoder1_count_enable;
wire encoder2_A;
wire encoder2_B;
wire encoder2_Z;
reg  encoder2_zr = 1'd0;
reg  [14:0] encoder2_c = 15'd0;
reg  [14:0] encoder2_i = 15'd0;
reg  encoder2_zl = 1'd0;
wire [31:0] encoder2_out;
reg  [2:0] encoder2_Ad = 3'd0;
reg  [2:0] encoder2_Bd = 3'd0;
reg  [2:0] encoder2_Zc = 3'd0;
wire encoder2_good_zero;
wire encoder2_good_one;
reg  encoder2_last_good = 1'd0;
wire encoder2_index_pulse;
wire encoder2_count_direction;
wire encoder2_count_enable;
wire encoder3_A;
wire encoder3_B;
wire encoder3_Z;
reg  encoder3_zr = 1'd0;
reg  [14:0] encoder3_c = 15'd0;
reg  [14:0] encoder3_i = 15'd0;
reg  encoder3_zl = 1'd0;
wire [31:0] encoder3_out;
reg  [2:0] encoder3_Ad = 3'd0;
reg  [2:0] encoder3_Bd = 3'd0;
reg  [2:0] encoder3_Zc = 3'd0;
wire encoder3_good_zero;
wire encoder3_good_one;
reg  encoder3_last_good = 1'd0;
wire encoder3_index_pulse;
wire encoder3_count_direction;
wire encoder3_count_enable;
wire encoder4_A;
wire encoder4_B;
wire encoder4_Z;
reg  encoder4_zr = 1'd0;
reg  [14:0] encoder4_c = 15'd0;
reg  [14:0] encoder4_i = 15'd0;
reg  encoder4_zl = 1'd0;
wire [31:0] encoder4_out;
reg  [2:0] encoder4_Ad = 3'd0;
reg  [2:0] encoder4_Bd = 3'd0;
reg  [2:0] encoder4_Zc = 3'd0;
wire encoder4_good_zero;
wire encoder4_good_one;
reg  encoder4_last_good = 1'd0;
wire encoder4_index_pulse;
wire encoder4_count_direction;
wire encoder4_count_enable;
wire [61:0] stepgen1_position;
reg  [30:0] stepgen1_velocity = 31'd0;
reg  [9:0] stepgen1_dirtime = 10'd0;
reg  [9:0] stepgen1_steptime = 10'd0;
reg  stepgen1_enable = 1'd0;
reg  stepgen1_reset = 1'd0;
reg  [9:0] stepgen1_tap = 10'd0;
wire stepgen1_internal_dir;
wire stepgen1_internal_step;
reg  stepgen1_inverse_dir = 1'd0;
reg  stepgen1_inverse_step = 1'd0;
wire [61:0] stepgen2_position;
reg  [30:0] stepgen2_velocity = 31'd0;
reg  [9:0] stepgen2_dirtime = 10'd0;
reg  [9:0] stepgen2_steptime = 10'd0;
reg  stepgen2_enable = 1'd0;
reg  stepgen2_reset = 1'd0;
reg  [9:0] stepgen2_tap = 10'd0;
wire stepgen2_internal_dir;
wire stepgen2_internal_step;
reg  stepgen2_inverse_dir = 1'd0;
reg  stepgen2_inverse_step = 1'd0;
wire [61:0] stepgen3_position;
reg  [30:0] stepgen3_velocity = 31'd0;
reg  [9:0] stepgen3_dirtime = 10'd0;
reg  [9:0] stepgen3_steptime = 10'd0;
reg  stepgen3_enable = 1'd0;
reg  stepgen3_reset = 1'd0;
reg  [9:0] stepgen3_tap = 10'd0;
wire stepgen3_internal_dir;
wire stepgen3_internal_step;
reg  stepgen3_inverse_dir = 1'd0;
reg  stepgen3_inverse_step = 1'd0;
wire [61:0] stepgen4_position;
reg  [30:0] stepgen4_velocity = 31'd0;
reg  [9:0] stepgen4_dirtime = 10'd0;
reg  [9:0] stepgen4_steptime = 10'd0;
reg  stepgen4_enable = 1'd0;
reg  stepgen4_reset = 1'd0;
reg  [9:0] stepgen4_tap = 10'd0;
wire stepgen4_internal_dir;
wire stepgen4_internal_step;
reg  stepgen4_inverse_dir = 1'd0;
reg  stepgen4_inverse_step = 1'd0;
wire [61:0] stepgen5_position;
reg  [30:0] stepgen5_velocity = 31'd0;
reg  [9:0] stepgen5_dirtime = 10'd0;
reg  [9:0] stepgen5_steptime = 10'd0;
reg  stepgen5_enable = 1'd0;
reg  stepgen5_reset = 1'd0;
reg  [9:0] stepgen5_tap = 10'd0;
wire stepgen5_internal_dir;
wire stepgen5_internal_step;
reg  stepgen5_inverse_dir = 1'd0;
reg  stepgen5_inverse_step = 1'd0;
wire [61:0] stepgen6_position;
reg  [30:0] stepgen6_velocity = 31'd0;
reg  [9:0] stepgen6_dirtime = 10'd0;
reg  [9:0] stepgen6_steptime = 10'd0;
reg  stepgen6_enable = 1'd0;
reg  stepgen6_reset = 1'd0;
reg  [9:0] stepgen6_tap = 10'd0;
wire stepgen6_internal_dir;
wire stepgen6_internal_step;
reg  stepgen6_inverse_dir = 1'd0;
reg  stepgen6_inverse_step = 1'd0;
reg  [30:0] velocity1_storage = 31'd0;
reg  velocity1_re = 1'd0;
reg  [30:0] velocity2_storage = 31'd0;
reg  velocity2_re = 1'd0;
reg  [30:0] velocity3_storage = 31'd0;
reg  velocity3_re = 1'd0;
reg  [30:0] velocity4_storage = 31'd0;
reg  velocity4_re = 1'd0;
reg  [30:0] velocity5_storage = 31'd0;
reg  velocity5_re = 1'd0;
reg  [30:0] velocity6_storage = 31'd0;
reg  velocity6_re = 1'd0;
reg  [9:0] dirtime_storage = 10'd0;
reg  dirtime_re = 1'd0;
reg  [9:0] steptime_storage = 10'd0;
reg  steptime_re = 1'd0;
reg  [31:0] stepgens_ctrlword_storage = 32'd0;
reg  stepgens_ctrlword_re = 1'd0;
reg  [63:0] apply_time_storage = 64'd0;
reg  apply_time_re = 1'd0;
reg  apply_time_we = 1'd0;
reg  [63:0] apply_time_dat_w = 64'd0;
reg  [31:0] gpios_out_storage = 32'd0;
reg  gpios_out_re = 1'd0;
reg  [31:0] pwm_out0_width_storage = 32'd0;
reg  pwm_out0_width_re = 1'd0;
reg  [31:0] pwm_out0_period_storage = 32'd0;
reg  pwm_out0_period_re = 1'd0;
reg  [31:0] pwm_out1_width_storage = 32'd0;
reg  pwm_out1_width_re = 1'd0;
reg  [31:0] pwm_out1_period_storage = 32'd0;
reg  pwm_out1_period_re = 1'd0;
reg  [31:0] pwm_out2_width_storage = 32'd0;
reg  pwm_out2_width_re = 1'd0;
reg  [31:0] pwm_out2_period_storage = 32'd0;
reg  pwm_out2_period_re = 1'd0;
reg  [31:0] pwm_out3_width_storage = 32'd0;
reg  pwm_out3_width_re = 1'd0;
reg  [31:0] pwm_out3_period_storage = 32'd0;
reg  pwm_out3_period_re = 1'd0;
reg  [31:0] pwm_out4_width_storage = 32'd0;
reg  pwm_out4_width_re = 1'd0;
reg  [31:0] pwm_out4_period_storage = 32'd0;
reg  pwm_out4_period_re = 1'd0;
reg  [31:0] pwm_out5_width_storage = 32'd0;
reg  pwm_out5_width_re = 1'd0;
reg  [31:0] pwm_out5_period_storage = 32'd0;
reg  pwm_out5_period_re = 1'd0;
reg  [61:0] position1_status = 62'd0;
wire position1_we;
reg  position1_re = 1'd0;
reg  [61:0] position2_status = 62'd0;
wire position2_we;
reg  position2_re = 1'd0;
reg  [61:0] position3_status = 62'd0;
wire position3_we;
reg  position3_re = 1'd0;
reg  [61:0] position4_status = 62'd0;
wire position4_we;
reg  position4_re = 1'd0;
reg  [61:0] position5_status = 62'd0;
wire position5_we;
reg  position5_re = 1'd0;
reg  [61:0] position6_status = 62'd0;
wire position6_we;
reg  position6_re = 1'd0;
reg  [63:0] wallclock_status = 64'd0;
wire wallclock_we;
reg  wallclock_re = 1'd0;
reg  [31:0] gpios_in_status = 32'd0;
wire gpios_in_we;
reg  gpios_in_re = 1'd0;
reg  [31:0] encoder_position1_status = 32'd0;
wire encoder_position1_we;
reg  encoder_position1_re = 1'd0;
reg  [31:0] encoder_position2_status = 32'd0;
wire encoder_position2_we;
reg  encoder_position2_re = 1'd0;
reg  [31:0] encoder_position3_status = 32'd0;
wire encoder_position3_we;
reg  encoder_position3_re = 1'd0;
reg  [31:0] encoder_position4_status = 32'd0;
wire encoder_position4_we;
reg  encoder_position4_re = 1'd0;
reg  [31:0] encoder_position5_status = 32'd0;
wire encoder_position5_we;
reg  encoder_position5_re = 1'd0;
reg  [31:0] encoder_position6_status = 32'd0;
wire encoder_position6_we;
reg  encoder_position6_re = 1'd0;
reg  pwm0_enable = 1'd1;
reg  [31:0] pwm0_width = 32'd32;
reg  [31:0] pwm0_period = 32'd32;
reg  [31:0] pwm0_counter = 32'd0;
reg  pwm1_enable = 1'd1;
reg  [31:0] pwm1_width = 32'd32;
reg  [31:0] pwm1_period = 32'd32;
reg  [31:0] pwm1_counter = 32'd0;
reg  pwm2_enable = 1'd1;
reg  [31:0] pwm2_width = 32'd32;
reg  [31:0] pwm2_period = 32'd32;
reg  [31:0] pwm2_counter = 32'd0;
reg  leds_storage = 1'd0;
reg  leds_re = 1'd0;
reg  leds_chaser = 1'd0;
reg  leds_mode = 1'd0;
wire leds_wait;
wire leds_done;
reg  [24:0] leds_count = 25'd25000000;
reg  ledchaser_pwm = 1'd0;
wire ledchaser_enable;
wire [31:0] ledchaser_width;
wire [31:0] ledchaser_period;
reg  [31:0] ledchaser_counter = 32'd0;
reg  ledchaser_pwm_enable_storage = 1'd1;
reg  ledchaser_pwm_enable_re = 1'd0;
reg  [31:0] ledchaser_pwm_width_storage = 32'd512;
reg  ledchaser_pwm_width_re = 1'd0;
reg  [31:0] ledchaser_pwm_period_storage = 32'd1024;
reg  ledchaser_pwm_period_re = 1'd0;
wire ecp5pll;
wire locked;
reg  liteethmac_txdatapath_liteethmacpaddinginserter_state = 1'd0;
reg  liteethmac_txdatapath_liteethmacpaddinginserter_next_state = 1'd0;
reg  [15:0] benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value = 16'd0;
reg  benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce = 1'd0;
reg  [1:0] liteethmac_txdatapath_bufferizeendpoints_state = 2'd0;
reg  [1:0] liteethmac_txdatapath_bufferizeendpoints_next_state = 2'd0;
reg  [31:0] benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value0 = 32'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value1 = 1'd0;
reg  benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value_ce1 = 1'd0;
reg  [1:0] liteethmac_txdatapath_liteethmacpreambleinserter_state = 2'd0;
reg  [1:0] liteethmac_txdatapath_liteethmacpreambleinserter_next_state = 2'd0;
reg  [2:0] benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value = 3'd0;
reg  benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value_ce = 1'd0;
reg  liteethmac_txdatapath_liteethmacgap_state = 1'd0;
reg  liteethmac_txdatapath_liteethmacgap_next_state = 1'd0;
reg  [3:0] benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value = 4'd0;
reg  benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value_ce = 1'd0;
reg  liteethmac_rxdatapath_liteethmacpreamblechecker_state = 1'd0;
reg  liteethmac_rxdatapath_liteethmacpreamblechecker_next_state = 1'd0;
reg  [1:0] liteethmac_rxdatapath_bufferizeendpoints_state = 2'd0;
reg  [1:0] liteethmac_rxdatapath_bufferizeendpoints_next_state = 2'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value0 = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value1 = 1'd0;
reg  benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value_ce1 = 1'd0;
reg  [1:0] liteethmac_request = 2'd0;
reg  liteethmac_grant = 1'd0;
reg  liteethmac_status0_first = 1'd1;
reg  liteethmac_status0_last = 1'd0;
wire liteethmac_status0_ongoing0;
reg  liteethmac_status0_ongoing1 = 1'd0;
reg  liteethmac_status1_first = 1'd1;
reg  liteethmac_status1_last = 1'd0;
wire liteethmac_status1_ongoing0;
reg  liteethmac_status1_ongoing1 = 1'd0;
reg  [1:0] liteethmac_sel0 = 2'd0;
reg  liteethmac_first = 1'd1;
reg  liteethmac_last = 1'd0;
wire liteethmac_ongoing0;
reg  liteethmac_ongoing1 = 1'd0;
reg  [1:0] liteethmac_sel1 = 2'd0;
reg  [1:0] liteethmac_sel_ongoing = 2'd0;
reg  [1:0] liteethmac_fsm0_state0 = 2'd0;
reg  [1:0] liteethmac_fsm0_next_state0 = 2'd0;
reg  [3:0] benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value0 = 4'd0;
reg  benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value1 = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value_ce1 = 1'd0;
reg  liteethmac_fsm1_state0 = 1'd0;
reg  liteethmac_fsm1_next_state0 = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value0 = 1'd0;
reg  benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value_ce0 = 1'd0;
reg  [1:0] liteethmac_fsm0_state1 = 2'd0;
reg  [1:0] liteethmac_fsm0_next_state1 = 2'd0;
reg  [3:0] benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value2 = 4'd0;
reg  benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value_ce2 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value3 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value_ce3 = 1'd0;
reg  liteethmac_fsm1_state1 = 1'd0;
reg  liteethmac_fsm1_next_state1 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value1 = 1'd0;
reg  benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value_ce1 = 1'd0;
reg  [1:0] liteetharptx_fsm0_state = 2'd0;
reg  [1:0] liteetharptx_fsm0_next_state = 2'd0;
reg  [4:0] benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value0 = 5'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value1 = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value_ce1 = 1'd0;
reg  liteetharptx_fsm1_state = 1'd0;
reg  liteetharptx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value0 = 1'd0;
reg  benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value_ce0 = 1'd0;
reg  liteetharptx_state = 1'd0;
reg  liteetharptx_next_state = 1'd0;
reg  [5:0] benchsoc_ethcore_arp_tx_counter_liteetharp_next_value = 6'd0;
reg  benchsoc_ethcore_arp_tx_counter_liteetharp_next_value_ce = 1'd0;
reg  [1:0] liteetharprx_fsm0_state = 2'd0;
reg  [1:0] liteetharprx_fsm0_next_state = 2'd0;
reg  [4:0] benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value2 = 5'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value_ce2 = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value3 = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value_ce3 = 1'd0;
reg  liteetharprx_fsm1_state = 1'd0;
reg  liteetharprx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value1 = 1'd0;
reg  benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value_ce1 = 1'd0;
reg  [1:0] liteetharprx_state = 2'd0;
reg  [1:0] liteetharprx_next_state = 2'd0;
reg  [2:0] liteetharptable_state = 3'd0;
reg  [2:0] liteetharptable_next_state = 3'd0;
reg  [1:0] liteethip_liteethiptx_fsm0_state = 2'd0;
reg  [1:0] liteethip_liteethiptx_fsm0_next_state = 2'd0;
reg  [4:0] benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value0 = 5'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value1 = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value_ce1 = 1'd0;
reg  liteethip_liteethiptx_fsm1_state = 1'd0;
reg  liteethip_liteethiptx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value0 = 1'd0;
reg  benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value_ce0 = 1'd0;
reg  [2:0] liteethip_liteethiptx_state = 3'd0;
reg  [2:0] liteethip_liteethiptx_next_state = 3'd0;
reg  [47:0] benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value = 48'd0;
reg  benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value_ce = 1'd0;
reg  [1:0] liteethip_liteethiprx_fsm0_state = 2'd0;
reg  [1:0] liteethip_liteethiprx_fsm0_next_state = 2'd0;
reg  [4:0] benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value2 = 5'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value_ce2 = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value3 = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value_ce3 = 1'd0;
reg  liteethip_liteethiprx_fsm1_state = 1'd0;
reg  liteethip_liteethiprx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value1 = 1'd0;
reg  benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value_ce1 = 1'd0;
reg  [1:0] liteethip_liteethiprx_state = 2'd0;
reg  [1:0] liteethip_liteethiprx_next_state = 2'd0;
reg  [1:0] liteethip_request = 2'd0;
reg  liteethip_grant = 1'd0;
reg  liteethip_status0_first = 1'd1;
reg  liteethip_status0_last = 1'd0;
wire liteethip_status0_ongoing0;
reg  liteethip_status0_ongoing1 = 1'd0;
reg  liteethip_status1_first = 1'd1;
reg  liteethip_status1_last = 1'd0;
wire liteethip_status1_ongoing0;
reg  liteethip_status1_ongoing1 = 1'd0;
reg  [1:0] liteethip_sel0 = 2'd0;
reg  liteethip_first = 1'd1;
reg  liteethip_last = 1'd0;
wire liteethip_ongoing0;
reg  liteethip_ongoing1 = 1'd0;
reg  [1:0] liteethip_sel1 = 2'd0;
reg  [1:0] liteethip_sel_ongoing = 2'd0;
reg  [1:0] liteethicmptx_fsm0_state = 2'd0;
reg  [1:0] liteethicmptx_fsm0_next_state = 2'd0;
reg  [2:0] benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value0 = 3'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value1 = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value_ce1 = 1'd0;
reg  liteethicmptx_fsm1_state = 1'd0;
reg  liteethicmptx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value0 = 1'd0;
reg  benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value_ce0 = 1'd0;
reg  liteethicmptx_state = 1'd0;
reg  liteethicmptx_next_state = 1'd0;
reg  [1:0] liteethicmprx_fsm0_state = 2'd0;
reg  [1:0] liteethicmprx_fsm0_next_state = 2'd0;
reg  [2:0] benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value2 = 3'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value_ce2 = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value3 = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce3 = 1'd0;
reg  liteethicmprx_fsm1_state = 1'd0;
reg  liteethicmprx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value1 = 1'd0;
reg  benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value_ce1 = 1'd0;
reg  [1:0] liteethicmprx_state = 2'd0;
reg  [1:0] liteethicmprx_next_state = 2'd0;
reg  [1:0] liteethudp_liteethudptx_fsm0_state = 2'd0;
reg  [1:0] liteethudp_liteethudptx_fsm0_next_state = 2'd0;
reg  [2:0] benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value0 = 3'd0;
reg  benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value_ce0 = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value1 = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value_ce1 = 1'd0;
reg  liteethudp_liteethudptx_fsm1_state = 1'd0;
reg  liteethudp_liteethudptx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value0 = 1'd0;
reg  benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value_ce0 = 1'd0;
reg  liteethudp_liteethudptx_state = 1'd0;
reg  liteethudp_liteethudptx_next_state = 1'd0;
reg  [1:0] liteethudp_liteethudprx_fsm0_state = 2'd0;
reg  [1:0] liteethudp_liteethudprx_fsm0_next_state = 2'd0;
reg  [2:0] benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value2 = 3'd0;
reg  benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value_ce2 = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value3 = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value_ce3 = 1'd0;
reg  liteethudp_liteethudprx_fsm1_state = 1'd0;
reg  liteethudp_liteethudprx_fsm1_next_state = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value1 = 1'd0;
reg  benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value_ce1 = 1'd0;
reg  [1:0] liteethudp_liteethudprx_state = 2'd0;
reg  [1:0] liteethudp_liteethudprx_next_state = 2'd0;
reg  [15:0] benchsoc_ethcore_rx_count_liteethudp_next_value = 16'd0;
reg  benchsoc_ethcore_rx_count_liteethudp_next_value_ce = 1'd0;
reg  liteethudp_sel = 1'd0;
reg  [1:0] liteethetherbonepackettx_fsm0_state = 2'd0;
reg  [1:0] liteethetherbonepackettx_fsm0_next_state = 2'd0;
reg  benchsoc_etherbone_tx_packetizer_count_fsm0_next_value4 = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_count_fsm0_next_value_ce4 = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value5 = 1'd0;
reg  benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value_ce5 = 1'd0;
reg  liteethetherbonepackettx_fsm1_state = 1'd0;
reg  liteethetherbonepackettx_fsm1_next_state = 1'd0;
reg  [3:0] benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value2 = 4'd0;
reg  benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value_ce2 = 1'd0;
reg  liteethetherbonepackettx_state = 1'd0;
reg  liteethetherbonepackettx_next_state = 1'd0;
reg  [1:0] liteethetherbonepacketrx_fsm0_state = 2'd0;
reg  [1:0] liteethetherbonepacketrx_fsm0_next_state = 2'd0;
reg  benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value6 = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value_ce6 = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value7 = 1'd0;
reg  benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce7 = 1'd0;
reg  liteethetherbonepacketrx_fsm1_state = 1'd0;
reg  liteethetherbonepacketrx_fsm1_next_state = 1'd0;
reg  [3:0] benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value3 = 4'd0;
reg  benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value_ce3 = 1'd0;
reg  [1:0] liteethetherbonepacketrx_state = 2'd0;
reg  [1:0] liteethetherbonepacketrx_next_state = 2'd0;
reg  liteethetherboneprobe_state = 1'd0;
reg  liteethetherboneprobe_next_state = 1'd0;
reg  [1:0] fsm0_state0 = 2'd0;
reg  [1:0] fsm0_next_state0 = 2'd0;
reg  benchsoc_etherbone_record_depacketizer_count_fsm0_next_value8 = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_count_fsm0_next_value_ce8 = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value9 = 1'd0;
reg  benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value_ce9 = 1'd0;
reg  fsm1_state0 = 1'd0;
reg  fsm1_next_state0 = 1'd0;
reg  [3:0] benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value4 = 4'd0;
reg  benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value_ce4 = 1'd0;
reg  [1:0] liteethetherbonerecordreceiver_state = 2'd0;
reg  [1:0] liteethetherbonerecordreceiver_next_state = 2'd0;
reg  [8:0] benchsoc_etherbone_record_receiver_count_next_value = 9'd0;
reg  benchsoc_etherbone_record_receiver_count_next_value_ce = 1'd0;
reg  [1:0] liteethetherbonerecordsender_state = 2'd0;
reg  [1:0] liteethetherbonerecordsender_next_state = 2'd0;
reg  [1:0] fsm0_state1 = 2'd0;
reg  [1:0] fsm0_next_state1 = 2'd0;
reg  benchsoc_etherbone_record_packetizer_count_fsm0_next_value10 = 1'd0;
reg  benchsoc_etherbone_record_packetizer_count_fsm0_next_value_ce10 = 1'd0;
reg  benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value11 = 1'd0;
reg  benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value_ce11 = 1'd0;
reg  fsm1_state1 = 1'd0;
reg  fsm1_next_state1 = 1'd0;
reg  [3:0] benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value5 = 4'd0;
reg  benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value_ce5 = 1'd0;
reg  [1:0] liteethetherbonewishbonemaster_state = 2'd0;
reg  [1:0] liteethetherbonewishbonemaster_next_state = 2'd0;
reg  [13:0] benchsoc_adr = 14'd0;
reg  benchsoc_we = 1'd0;
reg  [31:0] benchsoc_dat_w = 32'd0;
wire [31:0] benchsoc_dat_r;
wire [29:0] benchsoc_wishbone_adr;
wire [31:0] benchsoc_wishbone_dat_w;
reg  [31:0] benchsoc_wishbone_dat_r = 32'd0;
wire [3:0] benchsoc_wishbone_sel;
wire benchsoc_wishbone_cyc;
wire benchsoc_wishbone_stb;
reg  benchsoc_wishbone_ack = 1'd0;
wire benchsoc_wishbone_we;
wire [2:0] benchsoc_wishbone_cti;
wire [1:0] benchsoc_wishbone_bte;
reg  benchsoc_wishbone_err = 1'd0;
wire [13:0] csr_bankarray_interface0_bank_bus_adr;
wire csr_bankarray_interface0_bank_bus_we;
wire [31:0] csr_bankarray_interface0_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank0_velocity10_re = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity10_r;
reg  csr_bankarray_csrbank0_velocity10_we = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity10_w;
reg  csr_bankarray_csrbank0_velocity20_re = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity20_r;
reg  csr_bankarray_csrbank0_velocity20_we = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity20_w;
reg  csr_bankarray_csrbank0_velocity30_re = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity30_r;
reg  csr_bankarray_csrbank0_velocity30_we = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity30_w;
reg  csr_bankarray_csrbank0_velocity40_re = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity40_r;
reg  csr_bankarray_csrbank0_velocity40_we = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity40_w;
reg  csr_bankarray_csrbank0_velocity50_re = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity50_r;
reg  csr_bankarray_csrbank0_velocity50_we = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity50_w;
reg  csr_bankarray_csrbank0_velocity60_re = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity60_r;
reg  csr_bankarray_csrbank0_velocity60_we = 1'd0;
wire [30:0] csr_bankarray_csrbank0_velocity60_w;
reg  csr_bankarray_csrbank0_dirtime0_re = 1'd0;
wire [9:0] csr_bankarray_csrbank0_dirtime0_r;
reg  csr_bankarray_csrbank0_dirtime0_we = 1'd0;
wire [9:0] csr_bankarray_csrbank0_dirtime0_w;
reg  csr_bankarray_csrbank0_steptime0_re = 1'd0;
wire [9:0] csr_bankarray_csrbank0_steptime0_r;
reg  csr_bankarray_csrbank0_steptime0_we = 1'd0;
wire [9:0] csr_bankarray_csrbank0_steptime0_w;
reg  csr_bankarray_csrbank0_stepgens_ctrlword0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_stepgens_ctrlword0_r;
reg  csr_bankarray_csrbank0_stepgens_ctrlword0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_stepgens_ctrlword0_w;
reg  csr_bankarray_csrbank0_apply_time1_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_apply_time1_r;
reg  csr_bankarray_csrbank0_apply_time1_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_apply_time1_w;
reg  csr_bankarray_csrbank0_apply_time0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_apply_time0_r;
reg  csr_bankarray_csrbank0_apply_time0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_apply_time0_w;
reg  csr_bankarray_csrbank0_gpios_out0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_gpios_out0_r;
reg  csr_bankarray_csrbank0_gpios_out0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_gpios_out0_w;
reg  csr_bankarray_csrbank0_pwm0_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm0_width0_r;
reg  csr_bankarray_csrbank0_pwm0_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm0_width0_w;
reg  csr_bankarray_csrbank0_pwm0_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm0_period0_r;
reg  csr_bankarray_csrbank0_pwm0_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm0_period0_w;
reg  csr_bankarray_csrbank0_pwm1_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm1_width0_r;
reg  csr_bankarray_csrbank0_pwm1_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm1_width0_w;
reg  csr_bankarray_csrbank0_pwm1_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm1_period0_r;
reg  csr_bankarray_csrbank0_pwm1_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm1_period0_w;
reg  csr_bankarray_csrbank0_pwm2_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm2_width0_r;
reg  csr_bankarray_csrbank0_pwm2_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm2_width0_w;
reg  csr_bankarray_csrbank0_pwm2_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm2_period0_r;
reg  csr_bankarray_csrbank0_pwm2_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm2_period0_w;
reg  csr_bankarray_csrbank0_pwm3_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm3_width0_r;
reg  csr_bankarray_csrbank0_pwm3_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm3_width0_w;
reg  csr_bankarray_csrbank0_pwm3_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm3_period0_r;
reg  csr_bankarray_csrbank0_pwm3_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm3_period0_w;
reg  csr_bankarray_csrbank0_pwm4_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm4_width0_r;
reg  csr_bankarray_csrbank0_pwm4_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm4_width0_w;
reg  csr_bankarray_csrbank0_pwm4_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm4_period0_r;
reg  csr_bankarray_csrbank0_pwm4_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm4_period0_w;
reg  csr_bankarray_csrbank0_pwm5_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm5_width0_r;
reg  csr_bankarray_csrbank0_pwm5_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm5_width0_w;
reg  csr_bankarray_csrbank0_pwm5_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm5_period0_r;
reg  csr_bankarray_csrbank0_pwm5_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_pwm5_period0_w;
reg  csr_bankarray_csrbank0_position11_re = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position11_r;
reg  csr_bankarray_csrbank0_position11_we = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position11_w;
reg  csr_bankarray_csrbank0_position10_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position10_r;
reg  csr_bankarray_csrbank0_position10_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position10_w;
reg  csr_bankarray_csrbank0_position21_re = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position21_r;
reg  csr_bankarray_csrbank0_position21_we = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position21_w;
reg  csr_bankarray_csrbank0_position20_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position20_r;
reg  csr_bankarray_csrbank0_position20_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position20_w;
reg  csr_bankarray_csrbank0_position31_re = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position31_r;
reg  csr_bankarray_csrbank0_position31_we = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position31_w;
reg  csr_bankarray_csrbank0_position30_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position30_r;
reg  csr_bankarray_csrbank0_position30_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position30_w;
reg  csr_bankarray_csrbank0_position41_re = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position41_r;
reg  csr_bankarray_csrbank0_position41_we = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position41_w;
reg  csr_bankarray_csrbank0_position40_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position40_r;
reg  csr_bankarray_csrbank0_position40_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position40_w;
reg  csr_bankarray_csrbank0_position51_re = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position51_r;
reg  csr_bankarray_csrbank0_position51_we = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position51_w;
reg  csr_bankarray_csrbank0_position50_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position50_r;
reg  csr_bankarray_csrbank0_position50_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position50_w;
reg  csr_bankarray_csrbank0_position61_re = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position61_r;
reg  csr_bankarray_csrbank0_position61_we = 1'd0;
wire [29:0] csr_bankarray_csrbank0_position61_w;
reg  csr_bankarray_csrbank0_position60_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position60_r;
reg  csr_bankarray_csrbank0_position60_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_position60_w;
reg  csr_bankarray_csrbank0_wallclock1_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_wallclock1_r;
reg  csr_bankarray_csrbank0_wallclock1_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_wallclock1_w;
reg  csr_bankarray_csrbank0_wallclock0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_wallclock0_r;
reg  csr_bankarray_csrbank0_wallclock0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_wallclock0_w;
reg  csr_bankarray_csrbank0_gpios_in_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_gpios_in_r;
reg  csr_bankarray_csrbank0_gpios_in_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_gpios_in_w;
reg  csr_bankarray_csrbank0_encoder_position1_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position1_r;
reg  csr_bankarray_csrbank0_encoder_position1_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position1_w;
reg  csr_bankarray_csrbank0_encoder_position2_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position2_r;
reg  csr_bankarray_csrbank0_encoder_position2_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position2_w;
reg  csr_bankarray_csrbank0_encoder_position3_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position3_r;
reg  csr_bankarray_csrbank0_encoder_position3_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position3_w;
reg  csr_bankarray_csrbank0_encoder_position4_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position4_r;
reg  csr_bankarray_csrbank0_encoder_position4_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position4_w;
reg  csr_bankarray_csrbank0_encoder_position5_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position5_r;
reg  csr_bankarray_csrbank0_encoder_position5_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position5_w;
reg  csr_bankarray_csrbank0_encoder_position6_re = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position6_r;
reg  csr_bankarray_csrbank0_encoder_position6_we = 1'd0;
wire [31:0] csr_bankarray_csrbank0_encoder_position6_w;
wire csr_bankarray_csrbank0_sel;
wire [13:0] csr_bankarray_interface1_bank_bus_adr;
wire csr_bankarray_interface1_bank_bus_we;
wire [31:0] csr_bankarray_interface1_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank1_reset0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank1_reset0_r;
reg  csr_bankarray_csrbank1_reset0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank1_reset0_w;
reg  csr_bankarray_csrbank1_scratch0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank1_scratch0_r;
reg  csr_bankarray_csrbank1_scratch0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank1_scratch0_w;
reg  csr_bankarray_csrbank1_bus_errors_re = 1'd0;
wire [31:0] csr_bankarray_csrbank1_bus_errors_r;
reg  csr_bankarray_csrbank1_bus_errors_we = 1'd0;
wire [31:0] csr_bankarray_csrbank1_bus_errors_w;
wire csr_bankarray_csrbank1_sel;
wire [13:0] csr_bankarray_interface2_bank_bus_adr;
wire csr_bankarray_interface2_bank_bus_we;
wire [31:0] csr_bankarray_interface2_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank2_crg_reset0_re = 1'd0;
wire csr_bankarray_csrbank2_crg_reset0_r;
reg  csr_bankarray_csrbank2_crg_reset0_we = 1'd0;
wire csr_bankarray_csrbank2_crg_reset0_w;
reg  csr_bankarray_csrbank2_rx_inband_status_re = 1'd0;
wire [2:0] csr_bankarray_csrbank2_rx_inband_status_r;
reg  csr_bankarray_csrbank2_rx_inband_status_we = 1'd0;
wire [2:0] csr_bankarray_csrbank2_rx_inband_status_w;
reg  csr_bankarray_csrbank2_mdio_w0_re = 1'd0;
wire [2:0] csr_bankarray_csrbank2_mdio_w0_r;
reg  csr_bankarray_csrbank2_mdio_w0_we = 1'd0;
wire [2:0] csr_bankarray_csrbank2_mdio_w0_w;
reg  csr_bankarray_csrbank2_mdio_r_re = 1'd0;
wire csr_bankarray_csrbank2_mdio_r_r;
reg  csr_bankarray_csrbank2_mdio_r_we = 1'd0;
wire csr_bankarray_csrbank2_mdio_r_w;
wire csr_bankarray_csrbank2_sel;
wire [13:0] csr_bankarray_sram_bus_adr;
wire csr_bankarray_sram_bus_we;
wire [31:0] csr_bankarray_sram_bus_dat_w;
reg  [31:0] csr_bankarray_sram_bus_dat_r = 32'd0;
wire [5:0] csr_bankarray_adr;
wire [7:0] csr_bankarray_dat_r;
wire csr_bankarray_sel;
reg  csr_bankarray_sel_r = 1'd0;
wire [13:0] csr_bankarray_interface3_bank_bus_adr;
wire csr_bankarray_interface3_bank_bus_we;
wire [31:0] csr_bankarray_interface3_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank3_out0_re = 1'd0;
wire csr_bankarray_csrbank3_out0_r;
reg  csr_bankarray_csrbank3_out0_we = 1'd0;
wire csr_bankarray_csrbank3_out0_w;
reg  csr_bankarray_csrbank3_pwm_enable0_re = 1'd0;
wire csr_bankarray_csrbank3_pwm_enable0_r;
reg  csr_bankarray_csrbank3_pwm_enable0_we = 1'd0;
wire csr_bankarray_csrbank3_pwm_enable0_w;
reg  csr_bankarray_csrbank3_pwm_width0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank3_pwm_width0_r;
reg  csr_bankarray_csrbank3_pwm_width0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank3_pwm_width0_w;
reg  csr_bankarray_csrbank3_pwm_period0_re = 1'd0;
wire [31:0] csr_bankarray_csrbank3_pwm_period0_r;
reg  csr_bankarray_csrbank3_pwm_period0_we = 1'd0;
wire [31:0] csr_bankarray_csrbank3_pwm_period0_w;
wire csr_bankarray_csrbank3_sel;
wire [13:0] csr_bankarray_interface4_bank_bus_adr;
wire csr_bankarray_interface4_bank_bus_we;
wire [31:0] csr_bankarray_interface4_bank_bus_dat_w;
reg  [31:0] csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg  csr_bankarray_csrbank4_txfull_re = 1'd0;
wire csr_bankarray_csrbank4_txfull_r;
reg  csr_bankarray_csrbank4_txfull_we = 1'd0;
wire csr_bankarray_csrbank4_txfull_w;
reg  csr_bankarray_csrbank4_rxempty_re = 1'd0;
wire csr_bankarray_csrbank4_rxempty_r;
reg  csr_bankarray_csrbank4_rxempty_we = 1'd0;
wire csr_bankarray_csrbank4_rxempty_w;
reg  csr_bankarray_csrbank4_ev_status_re = 1'd0;
wire [1:0] csr_bankarray_csrbank4_ev_status_r;
reg  csr_bankarray_csrbank4_ev_status_we = 1'd0;
wire [1:0] csr_bankarray_csrbank4_ev_status_w;
reg  csr_bankarray_csrbank4_ev_pending_re = 1'd0;
wire [1:0] csr_bankarray_csrbank4_ev_pending_r;
reg  csr_bankarray_csrbank4_ev_pending_we = 1'd0;
wire [1:0] csr_bankarray_csrbank4_ev_pending_w;
reg  csr_bankarray_csrbank4_ev_enable0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank4_ev_enable0_r;
reg  csr_bankarray_csrbank4_ev_enable0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank4_ev_enable0_w;
reg  csr_bankarray_csrbank4_txempty_re = 1'd0;
wire csr_bankarray_csrbank4_txempty_r;
reg  csr_bankarray_csrbank4_txempty_we = 1'd0;
wire csr_bankarray_csrbank4_txempty_w;
reg  csr_bankarray_csrbank4_rxfull_re = 1'd0;
wire csr_bankarray_csrbank4_rxfull_r;
reg  csr_bankarray_csrbank4_rxfull_we = 1'd0;
wire csr_bankarray_csrbank4_rxfull_w;
reg  csr_bankarray_csrbank4_xover_txfull_re = 1'd0;
wire csr_bankarray_csrbank4_xover_txfull_r;
reg  csr_bankarray_csrbank4_xover_txfull_we = 1'd0;
wire csr_bankarray_csrbank4_xover_txfull_w;
reg  csr_bankarray_csrbank4_xover_rxempty_re = 1'd0;
wire csr_bankarray_csrbank4_xover_rxempty_r;
reg  csr_bankarray_csrbank4_xover_rxempty_we = 1'd0;
wire csr_bankarray_csrbank4_xover_rxempty_w;
reg  csr_bankarray_csrbank4_xover_ev_status_re = 1'd0;
wire [1:0] csr_bankarray_csrbank4_xover_ev_status_r;
reg  csr_bankarray_csrbank4_xover_ev_status_we = 1'd0;
wire [1:0] csr_bankarray_csrbank4_xover_ev_status_w;
reg  csr_bankarray_csrbank4_xover_ev_pending_re = 1'd0;
wire [1:0] csr_bankarray_csrbank4_xover_ev_pending_r;
reg  csr_bankarray_csrbank4_xover_ev_pending_we = 1'd0;
wire [1:0] csr_bankarray_csrbank4_xover_ev_pending_w;
reg  csr_bankarray_csrbank4_xover_ev_enable0_re = 1'd0;
wire [1:0] csr_bankarray_csrbank4_xover_ev_enable0_r;
reg  csr_bankarray_csrbank4_xover_ev_enable0_we = 1'd0;
wire [1:0] csr_bankarray_csrbank4_xover_ev_enable0_w;
reg  csr_bankarray_csrbank4_xover_txempty_re = 1'd0;
wire csr_bankarray_csrbank4_xover_txempty_r;
reg  csr_bankarray_csrbank4_xover_txempty_we = 1'd0;
wire csr_bankarray_csrbank4_xover_txempty_w;
reg  csr_bankarray_csrbank4_xover_rxfull_re = 1'd0;
wire csr_bankarray_csrbank4_xover_rxfull_r;
reg  csr_bankarray_csrbank4_xover_rxfull_we = 1'd0;
wire csr_bankarray_csrbank4_xover_rxfull_w;
wire csr_bankarray_csrbank4_sel;
wire [13:0] csr_interconnect_adr;
wire csr_interconnect_we;
wire [31:0] csr_interconnect_dat_w;
wire [31:0] csr_interconnect_dat_r;
reg  state = 1'd0;
reg  next_state = 1'd0;
wire [31:0] t_slice_proxy0;
wire [31:0] t_slice_proxy1;
wire [31:0] t_slice_proxy2;
wire [31:0] t_slice_proxy3;
wire [31:0] t_slice_proxy4;
wire [31:0] t_slice_proxy5;
wire [31:0] t_slice_proxy6;
wire [31:0] t_slice_proxy7;
wire [31:0] t_slice_proxy8;
wire [31:0] t_slice_proxy9;
wire [31:0] t_slice_proxy10;
wire [31:0] t_slice_proxy11;
wire [31:0] t_slice_proxy12;
wire [31:0] t_slice_proxy13;
wire [31:0] t_slice_proxy14;
wire [31:0] t_slice_proxy15;
wire [31:0] t_slice_proxy16;
wire [31:0] t_slice_proxy17;
wire [31:0] t_slice_proxy18;
wire [31:0] t_slice_proxy19;
wire [31:0] t_slice_proxy20;
wire [31:0] t_slice_proxy21;
wire [31:0] t_slice_proxy22;
wire [31:0] t_slice_proxy23;
wire [31:0] t_slice_proxy24;
wire [31:0] t_slice_proxy25;
wire [31:0] t_slice_proxy26;
wire [31:0] t_slice_proxy27;
wire [31:0] t_slice_proxy28;
wire [31:0] t_slice_proxy29;
wire [31:0] t_slice_proxy30;
wire [31:0] t_slice_proxy31;
wire [39:0] cases_slice_proxy;
wire [31:0] t_slice_proxy32;
wire [31:0] t_slice_proxy33;
wire [31:0] t_slice_proxy34;
wire [31:0] t_slice_proxy35;
wire [31:0] t_slice_proxy36;
wire [31:0] t_slice_proxy37;
wire [31:0] t_slice_proxy38;
wire [31:0] t_slice_proxy39;
wire [31:0] t_slice_proxy40;
wire [31:0] t_slice_proxy41;
wire [31:0] t_slice_proxy42;
wire [31:0] t_slice_proxy43;
wire [31:0] t_slice_proxy44;
wire [31:0] t_slice_proxy45;
wire [31:0] t_slice_proxy46;
wire [31:0] t_slice_proxy47;
wire [31:0] t_slice_proxy48;
wire [31:0] t_slice_proxy49;
wire [31:0] t_slice_proxy50;
wire [31:0] t_slice_proxy51;
wire [31:0] t_slice_proxy52;
wire [31:0] t_slice_proxy53;
wire [31:0] t_slice_proxy54;
wire [31:0] t_slice_proxy55;
wire [31:0] t_slice_proxy56;
wire [31:0] t_slice_proxy57;
wire [31:0] t_slice_proxy58;
wire [31:0] t_slice_proxy59;
wire [31:0] t_slice_proxy60;
wire [31:0] t_slice_proxy61;
wire [31:0] t_slice_proxy62;
wire [31:0] t_slice_proxy63;
wire [15:0] rhs_slice_proxy0;
wire [15:0] rhs_slice_proxy1;
wire [47:0] rhs_slice_proxy2;
wire [47:0] rhs_slice_proxy3;
wire [47:0] rhs_slice_proxy4;
wire [47:0] rhs_slice_proxy5;
wire [47:0] rhs_slice_proxy6;
wire [47:0] rhs_slice_proxy7;
wire [47:0] rhs_slice_proxy8;
wire [47:0] rhs_slice_proxy9;
wire [47:0] rhs_slice_proxy10;
wire [47:0] rhs_slice_proxy11;
wire [47:0] rhs_slice_proxy12;
wire [47:0] rhs_slice_proxy13;
wire [7:0] rhs_slice_proxy14;
wire [15:0] rhs_slice_proxy15;
wire [15:0] rhs_slice_proxy16;
wire [15:0] rhs_slice_proxy17;
wire [15:0] rhs_slice_proxy18;
wire [15:0] rhs_slice_proxy19;
wire [15:0] rhs_slice_proxy20;
wire [7:0] rhs_slice_proxy21;
wire [31:0] rhs_slice_proxy22;
wire [31:0] rhs_slice_proxy23;
wire [31:0] rhs_slice_proxy24;
wire [31:0] rhs_slice_proxy25;
wire [47:0] rhs_slice_proxy26;
wire [47:0] rhs_slice_proxy27;
wire [47:0] rhs_slice_proxy28;
wire [47:0] rhs_slice_proxy29;
wire [47:0] rhs_slice_proxy30;
wire [47:0] rhs_slice_proxy31;
wire [31:0] rhs_slice_proxy32;
wire [31:0] rhs_slice_proxy33;
wire [31:0] rhs_slice_proxy34;
wire [31:0] rhs_slice_proxy35;
wire [47:0] rhs_slice_proxy36;
wire [47:0] rhs_slice_proxy37;
wire [47:0] rhs_slice_proxy38;
wire [47:0] rhs_slice_proxy39;
wire [47:0] rhs_slice_proxy40;
wire [47:0] rhs_slice_proxy41;
wire [15:0] rhs_slice_proxy42;
wire [15:0] rhs_slice_proxy43;
wire [15:0] rhs_slice_proxy44;
wire [15:0] rhs_slice_proxy45;
wire [3:0] rhs_slice_proxy46;
wire [7:0] rhs_slice_proxy47;
wire [31:0] rhs_slice_proxy48;
wire [31:0] rhs_slice_proxy49;
wire [31:0] rhs_slice_proxy50;
wire [31:0] rhs_slice_proxy51;
wire [31:0] rhs_slice_proxy52;
wire [31:0] rhs_slice_proxy53;
wire [31:0] rhs_slice_proxy54;
wire [31:0] rhs_slice_proxy55;
wire [15:0] rhs_slice_proxy56;
wire [15:0] rhs_slice_proxy57;
wire [7:0] rhs_slice_proxy58;
wire [3:0] rhs_slice_proxy59;
wire [15:0] rhs_slice_proxy60;
wire [15:0] rhs_slice_proxy61;
wire [7:0] rhs_slice_proxy62;
wire [7:0] rhs_slice_proxy63;
wire [31:0] rhs_slice_proxy64;
wire [31:0] rhs_slice_proxy65;
wire [31:0] rhs_slice_proxy66;
wire [31:0] rhs_slice_proxy67;
wire [15:0] rhs_slice_proxy68;
wire [15:0] rhs_slice_proxy69;
wire [15:0] rhs_slice_proxy70;
wire [15:0] rhs_slice_proxy71;
wire [15:0] rhs_slice_proxy72;
wire [15:0] rhs_slice_proxy73;
wire [15:0] rhs_slice_proxy74;
wire [15:0] rhs_slice_proxy75;
wire [3:0] rhs_slice_proxy76;
wire [15:0] rhs_slice_proxy77;
wire [15:0] rhs_slice_proxy78;
wire rhs_slice_proxy79;
wire rhs_slice_proxy80;
wire [3:0] rhs_slice_proxy81;
wire rhs_slice_proxy82;
wire [3:0] rhs_slice_proxy83;
wire rhs_slice_proxy84;
wire [7:0] rhs_slice_proxy85;
wire rhs_slice_proxy86;
wire rhs_slice_proxy87;
wire [7:0] rhs_slice_proxy88;
wire rhs_slice_proxy89;
wire rhs_slice_proxy90;
wire [7:0] rhs_slice_proxy91;
wire rhs_slice_proxy92;
wire latticeecp5asyncresetsynchronizerimpl0_rst1;
wire latticeecp5asyncresetsynchronizerimpl1_rst1;
wire latticeecp5asyncresetsynchronizerimpl1_expr;
wire latticeecp5asyncresetsynchronizerimpl2_rst1;
wire latticeecp5asyncresetsynchronizerimpl3_rst1;
reg  multiregimpl0_regs0 = 1'd0;
reg  multiregimpl0_regs1 = 1'd0;
reg  [5:0] multiregimpl1_regs0 = 6'd0;
reg  [5:0] multiregimpl1_regs1 = 6'd0;
reg  [5:0] multiregimpl2_regs0 = 6'd0;
reg  [5:0] multiregimpl2_regs1 = 6'd0;
reg  multiregimpl3_regs0 = 1'd0;
reg  multiregimpl3_regs1 = 1'd0;
reg  multiregimpl4_regs0 = 1'd0;
reg  multiregimpl4_regs1 = 1'd0;
reg  [5:0] multiregimpl5_regs0 = 6'd0;
reg  [5:0] multiregimpl5_regs1 = 6'd0;
reg  [5:0] multiregimpl6_regs0 = 6'd0;
reg  [5:0] multiregimpl6_regs1 = 6'd0;
reg  [2:0] multiregimpl7_regs0 = 3'd0;
reg  [2:0] multiregimpl7_regs1 = 3'd0;
reg  [2:0] multiregimpl8_regs0 = 3'd0;
reg  [2:0] multiregimpl8_regs1 = 3'd0;
reg  [2:0] multiregimpl9_regs0 = 3'd0;
reg  [2:0] multiregimpl9_regs1 = 3'd0;
reg  [2:0] multiregimpl10_regs0 = 3'd0;
reg  [2:0] multiregimpl10_regs1 = 3'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign etherbone_clk = sys_clk;
assign etherbone_rst = sys_rst;
assign crg_rst = benchsoc_soc_rst;
assign benchsoc_bus_errors_status = benchsoc_bus_errors;
assign benchsoc_uartcrossover_tx_fifo_sink_valid = benchsoc_uartcrossover_rxtx_re;
assign benchsoc_uartcrossover_tx_fifo_sink_payload_data = benchsoc_uartcrossover_rxtx_r;
assign benchsoc_uartcrossover_uartcrossover_source_valid = benchsoc_uartcrossover_tx_fifo_source_valid;
assign benchsoc_uartcrossover_tx_fifo_source_ready = benchsoc_uartcrossover_uartcrossover_source_ready;
assign benchsoc_uartcrossover_uartcrossover_source_first = benchsoc_uartcrossover_tx_fifo_source_first;
assign benchsoc_uartcrossover_uartcrossover_source_last = benchsoc_uartcrossover_tx_fifo_source_last;
assign benchsoc_uartcrossover_uartcrossover_source_payload_data = benchsoc_uartcrossover_tx_fifo_source_payload_data;
assign benchsoc_uartcrossover_txfull_status = (~benchsoc_uartcrossover_tx_fifo_sink_ready);
assign benchsoc_uartcrossover_txempty_status = (~benchsoc_uartcrossover_tx_fifo_source_valid);
assign benchsoc_uartcrossover_tx_trigger = benchsoc_uartcrossover_tx_fifo_sink_ready;
assign benchsoc_uartcrossover_rx_fifo_sink_valid = benchsoc_uartcrossover_uartcrossover_sink_valid;
assign benchsoc_uartcrossover_uartcrossover_sink_ready = benchsoc_uartcrossover_rx_fifo_sink_ready;
assign benchsoc_uartcrossover_rx_fifo_sink_first = benchsoc_uartcrossover_uartcrossover_sink_first;
assign benchsoc_uartcrossover_rx_fifo_sink_last = benchsoc_uartcrossover_uartcrossover_sink_last;
assign benchsoc_uartcrossover_rx_fifo_sink_payload_data = benchsoc_uartcrossover_uartcrossover_sink_payload_data;
assign benchsoc_uartcrossover_rxtx_w = benchsoc_uartcrossover_rx_fifo_source_payload_data;
assign benchsoc_uartcrossover_rx_fifo_source_ready = (benchsoc_uartcrossover_rx_clear | (1'd0 & benchsoc_uartcrossover_rxtx_we));
assign benchsoc_uartcrossover_rxempty_status = (~benchsoc_uartcrossover_rx_fifo_source_valid);
assign benchsoc_uartcrossover_rxfull_status = (~benchsoc_uartcrossover_rx_fifo_sink_ready);
assign benchsoc_uartcrossover_rx_trigger = benchsoc_uartcrossover_rx_fifo_source_valid;
assign benchsoc_xover_uart_sink_valid = benchsoc_uartcrossover_uartcrossover_source_valid;
assign benchsoc_uartcrossover_uartcrossover_source_ready = benchsoc_xover_uart_sink_ready;
assign benchsoc_xover_uart_sink_first = benchsoc_uartcrossover_uartcrossover_source_first;
assign benchsoc_xover_uart_sink_last = benchsoc_uartcrossover_uartcrossover_source_last;
assign benchsoc_xover_uart_sink_payload_data = benchsoc_uartcrossover_uartcrossover_source_payload_data;
assign benchsoc_uartcrossover_uartcrossover_sink_valid = benchsoc_xover_uart_source_valid;
assign benchsoc_xover_uart_source_ready = benchsoc_uartcrossover_uartcrossover_sink_ready;
assign benchsoc_uartcrossover_uartcrossover_sink_first = benchsoc_xover_uart_source_first;
assign benchsoc_uartcrossover_uartcrossover_sink_last = benchsoc_xover_uart_source_last;
assign benchsoc_uartcrossover_uartcrossover_sink_payload_data = benchsoc_xover_uart_source_payload_data;
assign benchsoc_uartcrossover_tx0 = benchsoc_uartcrossover_tx_status;
assign benchsoc_uartcrossover_tx1 = benchsoc_uartcrossover_tx_pending;
always @(*) begin
	benchsoc_uartcrossover_tx_clear <= 1'd0;
	if ((benchsoc_uartcrossover_pending_re & benchsoc_uartcrossover_pending_r[0])) begin
		benchsoc_uartcrossover_tx_clear <= 1'd1;
	end
end
assign benchsoc_uartcrossover_rx0 = benchsoc_uartcrossover_rx_status;
assign benchsoc_uartcrossover_rx1 = benchsoc_uartcrossover_rx_pending;
always @(*) begin
	benchsoc_uartcrossover_rx_clear <= 1'd0;
	if ((benchsoc_uartcrossover_pending_re & benchsoc_uartcrossover_pending_r[1])) begin
		benchsoc_uartcrossover_rx_clear <= 1'd1;
	end
end
assign benchsoc_uartcrossover_irq = ((benchsoc_uartcrossover_pending_status[0] & benchsoc_uartcrossover_enable_storage[0]) | (benchsoc_uartcrossover_pending_status[1] & benchsoc_uartcrossover_enable_storage[1]));
assign benchsoc_uartcrossover_tx_status = benchsoc_uartcrossover_tx_trigger;
assign benchsoc_uartcrossover_rx_status = benchsoc_uartcrossover_rx_trigger;
assign benchsoc_uartcrossover_tx_fifo_syncfifo_din = {benchsoc_uartcrossover_tx_fifo_fifo_in_last, benchsoc_uartcrossover_tx_fifo_fifo_in_first, benchsoc_uartcrossover_tx_fifo_fifo_in_payload_data};
assign {benchsoc_uartcrossover_tx_fifo_fifo_out_last, benchsoc_uartcrossover_tx_fifo_fifo_out_first, benchsoc_uartcrossover_tx_fifo_fifo_out_payload_data} = benchsoc_uartcrossover_tx_fifo_syncfifo_dout;
assign benchsoc_uartcrossover_tx_fifo_sink_ready = benchsoc_uartcrossover_tx_fifo_syncfifo_writable;
assign benchsoc_uartcrossover_tx_fifo_syncfifo_we = benchsoc_uartcrossover_tx_fifo_sink_valid;
assign benchsoc_uartcrossover_tx_fifo_fifo_in_first = benchsoc_uartcrossover_tx_fifo_sink_first;
assign benchsoc_uartcrossover_tx_fifo_fifo_in_last = benchsoc_uartcrossover_tx_fifo_sink_last;
assign benchsoc_uartcrossover_tx_fifo_fifo_in_payload_data = benchsoc_uartcrossover_tx_fifo_sink_payload_data;
assign benchsoc_uartcrossover_tx_fifo_source_valid = benchsoc_uartcrossover_tx_fifo_readable;
assign benchsoc_uartcrossover_tx_fifo_source_first = benchsoc_uartcrossover_tx_fifo_fifo_out_first;
assign benchsoc_uartcrossover_tx_fifo_source_last = benchsoc_uartcrossover_tx_fifo_fifo_out_last;
assign benchsoc_uartcrossover_tx_fifo_source_payload_data = benchsoc_uartcrossover_tx_fifo_fifo_out_payload_data;
assign benchsoc_uartcrossover_tx_fifo_re = benchsoc_uartcrossover_tx_fifo_source_ready;
assign benchsoc_uartcrossover_tx_fifo_syncfifo_re = (benchsoc_uartcrossover_tx_fifo_syncfifo_readable & ((~benchsoc_uartcrossover_tx_fifo_readable) | benchsoc_uartcrossover_tx_fifo_re));
assign benchsoc_uartcrossover_tx_fifo_level1 = (benchsoc_uartcrossover_tx_fifo_level0 + benchsoc_uartcrossover_tx_fifo_readable);
always @(*) begin
	benchsoc_uartcrossover_tx_fifo_wrport_adr <= 4'd0;
	if (benchsoc_uartcrossover_tx_fifo_replace) begin
		benchsoc_uartcrossover_tx_fifo_wrport_adr <= (benchsoc_uartcrossover_tx_fifo_produce - 1'd1);
	end else begin
		benchsoc_uartcrossover_tx_fifo_wrport_adr <= benchsoc_uartcrossover_tx_fifo_produce;
	end
end
assign benchsoc_uartcrossover_tx_fifo_wrport_dat_w = benchsoc_uartcrossover_tx_fifo_syncfifo_din;
assign benchsoc_uartcrossover_tx_fifo_wrport_we = (benchsoc_uartcrossover_tx_fifo_syncfifo_we & (benchsoc_uartcrossover_tx_fifo_syncfifo_writable | benchsoc_uartcrossover_tx_fifo_replace));
assign benchsoc_uartcrossover_tx_fifo_do_read = (benchsoc_uartcrossover_tx_fifo_syncfifo_readable & benchsoc_uartcrossover_tx_fifo_syncfifo_re);
assign benchsoc_uartcrossover_tx_fifo_rdport_adr = benchsoc_uartcrossover_tx_fifo_consume;
assign benchsoc_uartcrossover_tx_fifo_syncfifo_dout = benchsoc_uartcrossover_tx_fifo_rdport_dat_r;
assign benchsoc_uartcrossover_tx_fifo_rdport_re = benchsoc_uartcrossover_tx_fifo_do_read;
assign benchsoc_uartcrossover_tx_fifo_syncfifo_writable = (benchsoc_uartcrossover_tx_fifo_level0 != 5'd16);
assign benchsoc_uartcrossover_tx_fifo_syncfifo_readable = (benchsoc_uartcrossover_tx_fifo_level0 != 1'd0);
assign benchsoc_uartcrossover_rx_fifo_syncfifo_din = {benchsoc_uartcrossover_rx_fifo_fifo_in_last, benchsoc_uartcrossover_rx_fifo_fifo_in_first, benchsoc_uartcrossover_rx_fifo_fifo_in_payload_data};
assign {benchsoc_uartcrossover_rx_fifo_fifo_out_last, benchsoc_uartcrossover_rx_fifo_fifo_out_first, benchsoc_uartcrossover_rx_fifo_fifo_out_payload_data} = benchsoc_uartcrossover_rx_fifo_syncfifo_dout;
assign benchsoc_uartcrossover_rx_fifo_sink_ready = benchsoc_uartcrossover_rx_fifo_syncfifo_writable;
assign benchsoc_uartcrossover_rx_fifo_syncfifo_we = benchsoc_uartcrossover_rx_fifo_sink_valid;
assign benchsoc_uartcrossover_rx_fifo_fifo_in_first = benchsoc_uartcrossover_rx_fifo_sink_first;
assign benchsoc_uartcrossover_rx_fifo_fifo_in_last = benchsoc_uartcrossover_rx_fifo_sink_last;
assign benchsoc_uartcrossover_rx_fifo_fifo_in_payload_data = benchsoc_uartcrossover_rx_fifo_sink_payload_data;
assign benchsoc_uartcrossover_rx_fifo_source_valid = benchsoc_uartcrossover_rx_fifo_readable;
assign benchsoc_uartcrossover_rx_fifo_source_first = benchsoc_uartcrossover_rx_fifo_fifo_out_first;
assign benchsoc_uartcrossover_rx_fifo_source_last = benchsoc_uartcrossover_rx_fifo_fifo_out_last;
assign benchsoc_uartcrossover_rx_fifo_source_payload_data = benchsoc_uartcrossover_rx_fifo_fifo_out_payload_data;
assign benchsoc_uartcrossover_rx_fifo_re = benchsoc_uartcrossover_rx_fifo_source_ready;
assign benchsoc_uartcrossover_rx_fifo_syncfifo_re = (benchsoc_uartcrossover_rx_fifo_syncfifo_readable & ((~benchsoc_uartcrossover_rx_fifo_readable) | benchsoc_uartcrossover_rx_fifo_re));
assign benchsoc_uartcrossover_rx_fifo_level1 = (benchsoc_uartcrossover_rx_fifo_level0 + benchsoc_uartcrossover_rx_fifo_readable);
always @(*) begin
	benchsoc_uartcrossover_rx_fifo_wrport_adr <= 4'd0;
	if (benchsoc_uartcrossover_rx_fifo_replace) begin
		benchsoc_uartcrossover_rx_fifo_wrport_adr <= (benchsoc_uartcrossover_rx_fifo_produce - 1'd1);
	end else begin
		benchsoc_uartcrossover_rx_fifo_wrport_adr <= benchsoc_uartcrossover_rx_fifo_produce;
	end
end
assign benchsoc_uartcrossover_rx_fifo_wrport_dat_w = benchsoc_uartcrossover_rx_fifo_syncfifo_din;
assign benchsoc_uartcrossover_rx_fifo_wrport_we = (benchsoc_uartcrossover_rx_fifo_syncfifo_we & (benchsoc_uartcrossover_rx_fifo_syncfifo_writable | benchsoc_uartcrossover_rx_fifo_replace));
assign benchsoc_uartcrossover_rx_fifo_do_read = (benchsoc_uartcrossover_rx_fifo_syncfifo_readable & benchsoc_uartcrossover_rx_fifo_syncfifo_re);
assign benchsoc_uartcrossover_rx_fifo_rdport_adr = benchsoc_uartcrossover_rx_fifo_consume;
assign benchsoc_uartcrossover_rx_fifo_syncfifo_dout = benchsoc_uartcrossover_rx_fifo_rdport_dat_r;
assign benchsoc_uartcrossover_rx_fifo_rdport_re = benchsoc_uartcrossover_rx_fifo_do_read;
assign benchsoc_uartcrossover_rx_fifo_syncfifo_writable = (benchsoc_uartcrossover_rx_fifo_level0 != 5'd16);
assign benchsoc_uartcrossover_rx_fifo_syncfifo_readable = (benchsoc_uartcrossover_rx_fifo_level0 != 1'd0);
assign benchsoc_xover_tx_fifo_sink_valid = benchsoc_xover_rxtx_re;
assign benchsoc_xover_tx_fifo_sink_payload_data = benchsoc_xover_rxtx_r;
assign benchsoc_xover_uart_source_valid = benchsoc_xover_tx_fifo_source_valid;
assign benchsoc_xover_tx_fifo_source_ready = benchsoc_xover_uart_source_ready;
assign benchsoc_xover_uart_source_first = benchsoc_xover_tx_fifo_source_first;
assign benchsoc_xover_uart_source_last = benchsoc_xover_tx_fifo_source_last;
assign benchsoc_xover_uart_source_payload_data = benchsoc_xover_tx_fifo_source_payload_data;
assign benchsoc_xover_txfull_status = (~benchsoc_xover_tx_fifo_sink_ready);
assign benchsoc_xover_txempty_status = (~benchsoc_xover_tx_fifo_source_valid);
assign benchsoc_xover_tx_trigger = benchsoc_xover_tx_fifo_sink_ready;
assign benchsoc_xover_rx_fifo_sink_valid = benchsoc_xover_uart_sink_valid;
assign benchsoc_xover_uart_sink_ready = benchsoc_xover_rx_fifo_sink_ready;
assign benchsoc_xover_rx_fifo_sink_first = benchsoc_xover_uart_sink_first;
assign benchsoc_xover_rx_fifo_sink_last = benchsoc_xover_uart_sink_last;
assign benchsoc_xover_rx_fifo_sink_payload_data = benchsoc_xover_uart_sink_payload_data;
assign benchsoc_xover_rxtx_w = benchsoc_xover_rx_fifo_source_payload_data;
assign benchsoc_xover_rx_fifo_source_ready = (benchsoc_xover_rx_clear | (1'd1 & benchsoc_xover_rxtx_we));
assign benchsoc_xover_rxempty_status = (~benchsoc_xover_rx_fifo_source_valid);
assign benchsoc_xover_rxfull_status = (~benchsoc_xover_rx_fifo_sink_ready);
assign benchsoc_xover_rx_trigger = benchsoc_xover_rx_fifo_source_valid;
assign benchsoc_xover_tx0 = benchsoc_xover_tx_status;
assign benchsoc_xover_tx1 = benchsoc_xover_tx_pending;
always @(*) begin
	benchsoc_xover_tx_clear <= 1'd0;
	if ((benchsoc_xover_pending_re & benchsoc_xover_pending_r[0])) begin
		benchsoc_xover_tx_clear <= 1'd1;
	end
end
assign benchsoc_xover_rx0 = benchsoc_xover_rx_status;
assign benchsoc_xover_rx1 = benchsoc_xover_rx_pending;
always @(*) begin
	benchsoc_xover_rx_clear <= 1'd0;
	if ((benchsoc_xover_pending_re & benchsoc_xover_pending_r[1])) begin
		benchsoc_xover_rx_clear <= 1'd1;
	end
end
assign benchsoc_xover_irq = ((benchsoc_xover_pending_status[0] & benchsoc_xover_enable_storage[0]) | (benchsoc_xover_pending_status[1] & benchsoc_xover_enable_storage[1]));
assign benchsoc_xover_tx_status = benchsoc_xover_tx_trigger;
assign benchsoc_xover_rx_status = benchsoc_xover_rx_trigger;
assign benchsoc_xover_tx_fifo_sink_ready = ((~benchsoc_xover_tx_fifo_source_valid) | benchsoc_xover_tx_fifo_source_ready);
assign benchsoc_xover_rx_fifo_syncfifo_din = {benchsoc_xover_rx_fifo_fifo_in_last, benchsoc_xover_rx_fifo_fifo_in_first, benchsoc_xover_rx_fifo_fifo_in_payload_data};
assign {benchsoc_xover_rx_fifo_fifo_out_last, benchsoc_xover_rx_fifo_fifo_out_first, benchsoc_xover_rx_fifo_fifo_out_payload_data} = benchsoc_xover_rx_fifo_syncfifo_dout;
assign benchsoc_xover_rx_fifo_sink_ready = benchsoc_xover_rx_fifo_syncfifo_writable;
assign benchsoc_xover_rx_fifo_syncfifo_we = benchsoc_xover_rx_fifo_sink_valid;
assign benchsoc_xover_rx_fifo_fifo_in_first = benchsoc_xover_rx_fifo_sink_first;
assign benchsoc_xover_rx_fifo_fifo_in_last = benchsoc_xover_rx_fifo_sink_last;
assign benchsoc_xover_rx_fifo_fifo_in_payload_data = benchsoc_xover_rx_fifo_sink_payload_data;
assign benchsoc_xover_rx_fifo_source_valid = benchsoc_xover_rx_fifo_readable;
assign benchsoc_xover_rx_fifo_source_first = benchsoc_xover_rx_fifo_fifo_out_first;
assign benchsoc_xover_rx_fifo_source_last = benchsoc_xover_rx_fifo_fifo_out_last;
assign benchsoc_xover_rx_fifo_source_payload_data = benchsoc_xover_rx_fifo_fifo_out_payload_data;
assign benchsoc_xover_rx_fifo_re = benchsoc_xover_rx_fifo_source_ready;
assign benchsoc_xover_rx_fifo_syncfifo_re = (benchsoc_xover_rx_fifo_syncfifo_readable & ((~benchsoc_xover_rx_fifo_readable) | benchsoc_xover_rx_fifo_re));
assign benchsoc_xover_rx_fifo_level1 = (benchsoc_xover_rx_fifo_level0 + benchsoc_xover_rx_fifo_readable);
always @(*) begin
	benchsoc_xover_rx_fifo_wrport_adr <= 4'd0;
	if (benchsoc_xover_rx_fifo_replace) begin
		benchsoc_xover_rx_fifo_wrport_adr <= (benchsoc_xover_rx_fifo_produce - 1'd1);
	end else begin
		benchsoc_xover_rx_fifo_wrport_adr <= benchsoc_xover_rx_fifo_produce;
	end
end
assign benchsoc_xover_rx_fifo_wrport_dat_w = benchsoc_xover_rx_fifo_syncfifo_din;
assign benchsoc_xover_rx_fifo_wrport_we = (benchsoc_xover_rx_fifo_syncfifo_we & (benchsoc_xover_rx_fifo_syncfifo_writable | benchsoc_xover_rx_fifo_replace));
assign benchsoc_xover_rx_fifo_do_read = (benchsoc_xover_rx_fifo_syncfifo_readable & benchsoc_xover_rx_fifo_syncfifo_re);
assign benchsoc_xover_rx_fifo_rdport_adr = benchsoc_xover_rx_fifo_consume;
assign benchsoc_xover_rx_fifo_syncfifo_dout = benchsoc_xover_rx_fifo_rdport_dat_r;
assign benchsoc_xover_rx_fifo_rdport_re = benchsoc_xover_rx_fifo_do_read;
assign benchsoc_xover_rx_fifo_syncfifo_writable = (benchsoc_xover_rx_fifo_level0 != 5'd16);
assign benchsoc_xover_rx_fifo_syncfifo_readable = (benchsoc_xover_rx_fifo_level0 != 1'd0);
assign crg_reset = (-2'd2 | $signed({1'd0, crg_rst}));
assign crg_clkin = clk25;
assign sys_clk = crg_clkout0;
assign sys_ps_clk = crg_clkout1;
assign crg_locked = (locked & (~crg_reset));
assign eth_rx_clk = eth_clocks_rx;
assign eth_tx_clk = eth_rx_clk;
assign ethphy_reset = ethphy_reset_storage;
assign ethphy_sink_ready = 1'd1;
assign ethphy_last = ((~ethphy_rx_ctl_reg[0]) & ethphy_rx_ctl_reg_d[0]);
assign ethphy_source_last = ethphy_last;
assign eth_mdc = ethphy__w_storage[0];
assign ethphy_data_oe = ethphy__w_storage[1];
assign ethphy_data_w = ethphy__w_storage[2];
assign benchsoc_ethcore_mac_packetizer_sink_valid = benchsoc_ethcore_mac_crossbar_source_valid;
assign benchsoc_ethcore_mac_crossbar_source_ready = benchsoc_ethcore_mac_packetizer_sink_ready;
assign benchsoc_ethcore_mac_packetizer_sink_first = benchsoc_ethcore_mac_crossbar_source_first;
assign benchsoc_ethcore_mac_packetizer_sink_last = benchsoc_ethcore_mac_crossbar_source_last;
assign benchsoc_ethcore_mac_packetizer_sink_payload_ethernet_type = benchsoc_ethcore_mac_crossbar_source_payload_ethernet_type;
assign benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac = benchsoc_ethcore_mac_crossbar_source_payload_sender_mac;
assign benchsoc_ethcore_mac_packetizer_sink_payload_target_mac = benchsoc_ethcore_mac_crossbar_source_payload_target_mac;
assign benchsoc_ethcore_mac_packetizer_sink_payload_data = benchsoc_ethcore_mac_crossbar_source_payload_data;
assign benchsoc_ethcore_mac_packetizer_sink_payload_last_be = benchsoc_ethcore_mac_crossbar_source_payload_last_be;
assign benchsoc_ethcore_mac_packetizer_sink_payload_error = benchsoc_ethcore_mac_crossbar_source_payload_error;
assign benchsoc_ethcore_mac_core_sink_valid = benchsoc_ethcore_mac_packetizer_source_valid;
assign benchsoc_ethcore_mac_packetizer_source_ready = benchsoc_ethcore_mac_core_sink_ready;
assign benchsoc_ethcore_mac_core_sink_first = benchsoc_ethcore_mac_packetizer_source_first;
assign benchsoc_ethcore_mac_core_sink_last = benchsoc_ethcore_mac_packetizer_source_last;
assign benchsoc_ethcore_mac_core_sink_payload_data = benchsoc_ethcore_mac_packetizer_source_payload_data;
assign benchsoc_ethcore_mac_core_sink_payload_last_be = benchsoc_ethcore_mac_packetizer_source_payload_last_be;
assign benchsoc_ethcore_mac_core_sink_payload_error = benchsoc_ethcore_mac_packetizer_source_payload_error;
assign benchsoc_ethcore_mac_depacketizer_sink_valid = benchsoc_ethcore_mac_core_source_valid;
assign benchsoc_ethcore_mac_core_source_ready = benchsoc_ethcore_mac_depacketizer_sink_ready;
assign benchsoc_ethcore_mac_depacketizer_sink_first = benchsoc_ethcore_mac_core_source_first;
assign benchsoc_ethcore_mac_depacketizer_sink_last = benchsoc_ethcore_mac_core_source_last;
assign benchsoc_ethcore_mac_depacketizer_sink_payload_data = benchsoc_ethcore_mac_core_source_payload_data;
assign benchsoc_ethcore_mac_depacketizer_sink_payload_last_be = benchsoc_ethcore_mac_core_source_payload_last_be;
assign benchsoc_ethcore_mac_depacketizer_sink_payload_error = benchsoc_ethcore_mac_core_source_payload_error;
assign benchsoc_ethcore_mac_crossbar_sink_valid = benchsoc_ethcore_mac_depacketizer_source_valid;
assign benchsoc_ethcore_mac_depacketizer_source_ready = benchsoc_ethcore_mac_crossbar_sink_ready;
assign benchsoc_ethcore_mac_crossbar_sink_first = benchsoc_ethcore_mac_depacketizer_source_first;
assign benchsoc_ethcore_mac_crossbar_sink_last = benchsoc_ethcore_mac_depacketizer_source_last;
assign benchsoc_ethcore_mac_crossbar_sink_payload_ethernet_type = benchsoc_ethcore_mac_depacketizer_source_payload_ethernet_type;
assign benchsoc_ethcore_mac_crossbar_sink_payload_sender_mac = benchsoc_ethcore_mac_depacketizer_source_payload_sender_mac;
assign benchsoc_ethcore_mac_crossbar_sink_payload_target_mac = benchsoc_ethcore_mac_depacketizer_source_payload_target_mac;
assign benchsoc_ethcore_mac_crossbar_sink_payload_data = benchsoc_ethcore_mac_depacketizer_source_payload_data;
assign benchsoc_ethcore_mac_crossbar_sink_payload_last_be = benchsoc_ethcore_mac_depacketizer_source_payload_last_be;
assign benchsoc_ethcore_mac_crossbar_sink_payload_error = benchsoc_ethcore_mac_depacketizer_source_payload_error;
assign benchsoc_ethcore_mac_core_cdc_sink_valid = benchsoc_ethcore_mac_core_sink_sink_valid;
assign benchsoc_ethcore_mac_core_sink_sink_ready = benchsoc_ethcore_mac_core_cdc_sink_ready;
assign benchsoc_ethcore_mac_core_cdc_sink_first = benchsoc_ethcore_mac_core_sink_sink_first;
assign benchsoc_ethcore_mac_core_cdc_sink_last = benchsoc_ethcore_mac_core_sink_sink_last;
assign benchsoc_ethcore_mac_core_cdc_sink_payload_data = benchsoc_ethcore_mac_core_sink_sink_payload_data;
assign benchsoc_ethcore_mac_core_cdc_sink_payload_last_be = benchsoc_ethcore_mac_core_sink_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_cdc_sink_payload_error = benchsoc_ethcore_mac_core_sink_sink_payload_error;
assign benchsoc_ethcore_mac_core_source_source_valid = benchsoc_ethcore_mac_core_cdc_source_valid;
assign benchsoc_ethcore_mac_core_cdc_source_ready = benchsoc_ethcore_mac_core_source_source_ready;
assign benchsoc_ethcore_mac_core_source_source_first = benchsoc_ethcore_mac_core_cdc_source_first;
assign benchsoc_ethcore_mac_core_source_source_last = benchsoc_ethcore_mac_core_cdc_source_last;
assign benchsoc_ethcore_mac_core_source_source_payload_data = benchsoc_ethcore_mac_core_cdc_source_payload_data;
assign benchsoc_ethcore_mac_core_source_source_payload_last_be = benchsoc_ethcore_mac_core_cdc_source_payload_last_be;
assign benchsoc_ethcore_mac_core_source_source_payload_error = benchsoc_ethcore_mac_core_cdc_source_payload_error;
assign benchsoc_ethcore_mac_core_cdc_asyncfifo_din = {benchsoc_ethcore_mac_core_cdc_fifo_in_last, benchsoc_ethcore_mac_core_cdc_fifo_in_first, benchsoc_ethcore_mac_core_cdc_fifo_in_payload_error, benchsoc_ethcore_mac_core_cdc_fifo_in_payload_last_be, benchsoc_ethcore_mac_core_cdc_fifo_in_payload_data};
assign {benchsoc_ethcore_mac_core_cdc_fifo_out_last, benchsoc_ethcore_mac_core_cdc_fifo_out_first, benchsoc_ethcore_mac_core_cdc_fifo_out_payload_error, benchsoc_ethcore_mac_core_cdc_fifo_out_payload_last_be, benchsoc_ethcore_mac_core_cdc_fifo_out_payload_data} = benchsoc_ethcore_mac_core_cdc_asyncfifo_dout;
assign benchsoc_ethcore_mac_core_cdc_sink_ready = benchsoc_ethcore_mac_core_cdc_asyncfifo_writable;
assign benchsoc_ethcore_mac_core_cdc_asyncfifo_we = benchsoc_ethcore_mac_core_cdc_sink_valid;
assign benchsoc_ethcore_mac_core_cdc_fifo_in_first = benchsoc_ethcore_mac_core_cdc_sink_first;
assign benchsoc_ethcore_mac_core_cdc_fifo_in_last = benchsoc_ethcore_mac_core_cdc_sink_last;
assign benchsoc_ethcore_mac_core_cdc_fifo_in_payload_data = benchsoc_ethcore_mac_core_cdc_sink_payload_data;
assign benchsoc_ethcore_mac_core_cdc_fifo_in_payload_last_be = benchsoc_ethcore_mac_core_cdc_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_cdc_fifo_in_payload_error = benchsoc_ethcore_mac_core_cdc_sink_payload_error;
assign benchsoc_ethcore_mac_core_cdc_source_valid = benchsoc_ethcore_mac_core_cdc_asyncfifo_readable;
assign benchsoc_ethcore_mac_core_cdc_source_first = benchsoc_ethcore_mac_core_cdc_fifo_out_first;
assign benchsoc_ethcore_mac_core_cdc_source_last = benchsoc_ethcore_mac_core_cdc_fifo_out_last;
assign benchsoc_ethcore_mac_core_cdc_source_payload_data = benchsoc_ethcore_mac_core_cdc_fifo_out_payload_data;
assign benchsoc_ethcore_mac_core_cdc_source_payload_last_be = benchsoc_ethcore_mac_core_cdc_fifo_out_payload_last_be;
assign benchsoc_ethcore_mac_core_cdc_source_payload_error = benchsoc_ethcore_mac_core_cdc_fifo_out_payload_error;
assign benchsoc_ethcore_mac_core_cdc_asyncfifo_re = benchsoc_ethcore_mac_core_cdc_source_ready;
assign benchsoc_ethcore_mac_core_cdc_graycounter0_ce = (benchsoc_ethcore_mac_core_cdc_asyncfifo_writable & benchsoc_ethcore_mac_core_cdc_asyncfifo_we);
assign benchsoc_ethcore_mac_core_cdc_graycounter1_ce = (benchsoc_ethcore_mac_core_cdc_asyncfifo_readable & benchsoc_ethcore_mac_core_cdc_asyncfifo_re);
assign benchsoc_ethcore_mac_core_cdc_asyncfifo_writable = (((benchsoc_ethcore_mac_core_cdc_graycounter0_q[5] == benchsoc_ethcore_mac_core_cdc_consume_wdomain[5]) | (benchsoc_ethcore_mac_core_cdc_graycounter0_q[4] == benchsoc_ethcore_mac_core_cdc_consume_wdomain[4])) | (benchsoc_ethcore_mac_core_cdc_graycounter0_q[3:0] != benchsoc_ethcore_mac_core_cdc_consume_wdomain[3:0]));
assign benchsoc_ethcore_mac_core_cdc_asyncfifo_readable = (benchsoc_ethcore_mac_core_cdc_graycounter1_q != benchsoc_ethcore_mac_core_cdc_produce_rdomain);
assign benchsoc_ethcore_mac_core_cdc_wrport_adr = benchsoc_ethcore_mac_core_cdc_graycounter0_q_binary[4:0];
assign benchsoc_ethcore_mac_core_cdc_wrport_dat_w = benchsoc_ethcore_mac_core_cdc_asyncfifo_din;
assign benchsoc_ethcore_mac_core_cdc_wrport_we = benchsoc_ethcore_mac_core_cdc_graycounter0_ce;
assign benchsoc_ethcore_mac_core_cdc_rdport_adr = benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary[4:0];
assign benchsoc_ethcore_mac_core_cdc_asyncfifo_dout = benchsoc_ethcore_mac_core_cdc_rdport_dat_r;
always @(*) begin
	benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary <= 6'd0;
	if (benchsoc_ethcore_mac_core_cdc_graycounter0_ce) begin
		benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary <= (benchsoc_ethcore_mac_core_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary <= benchsoc_ethcore_mac_core_cdc_graycounter0_q_binary;
	end
end
assign benchsoc_ethcore_mac_core_cdc_graycounter0_q_next = (benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary ^ benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
	benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary <= 6'd0;
	if (benchsoc_ethcore_mac_core_cdc_graycounter1_ce) begin
		benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary <= (benchsoc_ethcore_mac_core_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary <= benchsoc_ethcore_mac_core_cdc_graycounter1_q_binary;
	end
end
assign benchsoc_ethcore_mac_core_cdc_graycounter1_q_next = (benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary ^ benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary[5:1]);
assign benchsoc_ethcore_mac_core_tx_padding_counter_done = (benchsoc_ethcore_mac_core_tx_padding_counter >= 6'd59);
always @(*) begin
	benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_source_payload_error <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_sink_ready <= 1'd0;
	liteethmac_txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value <= 16'd0;
	benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_source_valid <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_source_first <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_source_last <= 1'd0;
	benchsoc_ethcore_mac_core_tx_padding_source_payload_data <= 8'd0;
	liteethmac_txdatapath_liteethmacpaddinginserter_next_state <= liteethmac_txdatapath_liteethmacpaddinginserter_state;
	case (liteethmac_txdatapath_liteethmacpaddinginserter_state)
		1'd1: begin
			benchsoc_ethcore_mac_core_tx_padding_source_valid <= 1'd1;
			if (benchsoc_ethcore_mac_core_tx_padding_counter_done) begin
				benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be <= 1'd1;
				benchsoc_ethcore_mac_core_tx_padding_source_last <= 1'd1;
			end
			benchsoc_ethcore_mac_core_tx_padding_source_payload_data <= 1'd0;
			if ((benchsoc_ethcore_mac_core_tx_padding_source_valid & benchsoc_ethcore_mac_core_tx_padding_source_ready)) begin
				benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value <= (benchsoc_ethcore_mac_core_tx_padding_counter + 1'd1);
				benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce <= 1'd1;
				if (benchsoc_ethcore_mac_core_tx_padding_counter_done) begin
					benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value <= 1'd0;
					benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce <= 1'd1;
					liteethmac_txdatapath_liteethmacpaddinginserter_next_state <= 1'd0;
				end
			end
		end
		default: begin
			benchsoc_ethcore_mac_core_tx_padding_source_valid <= benchsoc_ethcore_mac_core_tx_padding_sink_valid;
			benchsoc_ethcore_mac_core_tx_padding_sink_ready <= benchsoc_ethcore_mac_core_tx_padding_source_ready;
			benchsoc_ethcore_mac_core_tx_padding_source_first <= benchsoc_ethcore_mac_core_tx_padding_sink_first;
			benchsoc_ethcore_mac_core_tx_padding_source_last <= benchsoc_ethcore_mac_core_tx_padding_sink_last;
			benchsoc_ethcore_mac_core_tx_padding_source_payload_data <= benchsoc_ethcore_mac_core_tx_padding_sink_payload_data;
			benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be <= benchsoc_ethcore_mac_core_tx_padding_sink_payload_last_be;
			benchsoc_ethcore_mac_core_tx_padding_source_payload_error <= benchsoc_ethcore_mac_core_tx_padding_sink_payload_error;
			if ((benchsoc_ethcore_mac_core_tx_padding_source_valid & benchsoc_ethcore_mac_core_tx_padding_source_ready)) begin
				benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value <= (benchsoc_ethcore_mac_core_tx_padding_counter + 1'd1);
				benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce <= 1'd1;
				if (benchsoc_ethcore_mac_core_tx_padding_sink_last) begin
					if ((~benchsoc_ethcore_mac_core_tx_padding_counter_done)) begin
						benchsoc_ethcore_mac_core_tx_padding_source_last <= 1'd0;
						benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be <= 1'd0;
						liteethmac_txdatapath_liteethmacpaddinginserter_next_state <= 1'd1;
					end else begin
						if (((benchsoc_ethcore_mac_core_tx_padding_counter == 6'd59) & (benchsoc_ethcore_mac_core_tx_padding_sink_payload_last_be < 1'd1))) begin
							benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be <= 1'd1;
						end else begin
							benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value <= 1'd0;
							benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce <= 1'd1;
						end
					end
				end
			end
		end
	endcase
end
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt_done = (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt == 1'd0);
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid = benchsoc_ethcore_mac_core_bufferizeendpoints_source_valid;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_source_ready = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_ready;
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_first = benchsoc_ethcore_mac_core_bufferizeendpoints_source_first;
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_last = benchsoc_ethcore_mac_core_bufferizeendpoints_source_last;
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_data = benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_data;
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be = benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_last_be;
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_error = benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_error;
always @(*) begin
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be1 <= 1'd0;
	if ((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be0 != 1'd0)) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be1 <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be0;
	end else begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be1 <= 1'd1;
	end
end
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1 = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data0[7:0];
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reg;
always @(*) begin
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_value <= 32'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_error <= 1'd0;
	if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be1) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_value <= {t_slice_proxy31[0], t_slice_proxy30[1], t_slice_proxy29[2], t_slice_proxy28[3], t_slice_proxy27[4], t_slice_proxy26[5], t_slice_proxy25[6], t_slice_proxy24[7], t_slice_proxy23[8], t_slice_proxy22[9], t_slice_proxy21[10], t_slice_proxy20[11], t_slice_proxy19[12], t_slice_proxy18[13], t_slice_proxy17[14], t_slice_proxy16[15], t_slice_proxy15[16], t_slice_proxy14[17], t_slice_proxy13[18], t_slice_proxy12[19], t_slice_proxy11[20], t_slice_proxy10[21], t_slice_proxy9[22], t_slice_proxy8[23], t_slice_proxy7[24], t_slice_proxy6[25], t_slice_proxy5[26], t_slice_proxy4[27], t_slice_proxy3[28], t_slice_proxy2[29], t_slice_proxy1[30], t_slice_proxy0[31]};
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_error <= (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next != 32'd3338984827);
	end
end
always @(*) begin
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next <= 32'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[0] <= (((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[1] <= (((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[2] <= (((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[3] <= (((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[4] <= (((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[5] <= (((((((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[6] <= (((((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[7] <= (((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[8] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[0] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[9] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[1] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[10] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[2] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[11] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[3] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[12] <= ((((((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[4] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[13] <= ((((((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[5] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[14] <= ((((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[6] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[15] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[7] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[16] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[8] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[17] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[9] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[18] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[10] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[19] <= ((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[11] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[20] <= ((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[12] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[21] <= ((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[13] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[22] <= ((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[14] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[23] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[15] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[24] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[16] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[25] <= ((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[17] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[26] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[18] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[24]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[7]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[27] <= ((((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[19] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[25]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[6]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[28] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[20] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[26]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[5]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[29] <= ((((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[21] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[30]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[1]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[27]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[4]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[30] <= ((((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[22] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[31]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[0]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[28]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[3]);
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next[31] <= ((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[23] ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last[29]) ^ benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data1[2]);
end
always @(*) begin
	liteethmac_txdatapath_bufferizeendpoints_next_state <= 2'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value0 <= 32'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value1 <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_valid <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_ce <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reset <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_first <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_error <= 1'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data0 <= 8'd0;
	benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be0 <= 1'd0;
	liteethmac_txdatapath_bufferizeendpoints_next_state <= liteethmac_txdatapath_bufferizeendpoints_state;
	case (liteethmac_txdatapath_bufferizeendpoints_state)
		1'd1: begin
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_ce <= (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid & benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready);
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_data0 <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_data;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be0 <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_valid <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_ready <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_first <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_first;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_last;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_data;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_last_be <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_error <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_error;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last <= 1'd0;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_last_be <= 1'd0;
			if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_last) begin
				if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be) begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= cases_slice_proxy[7:0];
				end
				if ((1'd0 & (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be <= 4'd15))) begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last <= 1'd1;
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_last_be <= (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be <<< -3'd3);
				end
			end else begin
				benchsoc_ethcore_mac_core_liteethmaccrc32inserter_ce <= (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid & benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready);
			end
			if (((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid & benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_last) & benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready)) begin
				if ((1'd0 & (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be <= 4'd15))) begin
					liteethmac_txdatapath_bufferizeendpoints_next_state <= 1'd0;
				end else begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value0 <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_value;
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value_ce0 <= 1'd1;
					if (1'd0) begin
						benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value1 <= (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be >>> 3'd4);
						benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
					end else begin
						benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value1 <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_last_be;
						benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value_ce1 <= 1'd1;
					end
					liteethmac_txdatapath_bufferizeendpoints_next_state <= 2'd2;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_valid <= 1'd1;
			case (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt)
				1'd0: begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet[31:24];
				end
				1'd1: begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet[23:16];
				end
				2'd2: begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet[15:8];
				end
				default: begin
					benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet[7:0];
				end
			endcase
			if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt_done) begin
				benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last <= 1'd1;
				if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready) begin
					liteethmac_txdatapath_bufferizeendpoints_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reset <= 1'd1;
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_ready <= 1'd1;
			if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_valid) begin
				benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_ready <= 1'd0;
				liteethmac_txdatapath_bufferizeendpoints_next_state <= 1'd1;
			end
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing0 <= 1'd1;
		end
	endcase
end
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_ready = ((~benchsoc_ethcore_mac_core_bufferizeendpoints_source_valid) | benchsoc_ethcore_mac_core_bufferizeendpoints_source_ready);
assign benchsoc_ethcore_mac_core_tx_preamble_source_payload_last_be = benchsoc_ethcore_mac_core_tx_preamble_sink_payload_last_be;
always @(*) begin
	benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_core_tx_preamble_source_payload_error <= 1'd0;
	benchsoc_ethcore_mac_core_tx_preamble_sink_ready <= 1'd0;
	liteethmac_txdatapath_liteethmacpreambleinserter_next_state <= 2'd0;
	benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value <= 3'd0;
	benchsoc_ethcore_mac_core_tx_preamble_source_valid <= 1'd0;
	benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value_ce <= 1'd0;
	benchsoc_ethcore_mac_core_tx_preamble_source_first <= 1'd0;
	benchsoc_ethcore_mac_core_tx_preamble_source_last <= 1'd0;
	benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_sink_payload_data;
	liteethmac_txdatapath_liteethmacpreambleinserter_next_state <= liteethmac_txdatapath_liteethmacpreambleinserter_state;
	case (liteethmac_txdatapath_liteethmacpreambleinserter_state)
		1'd1: begin
			benchsoc_ethcore_mac_core_tx_preamble_source_valid <= 1'd1;
			case (benchsoc_ethcore_mac_core_tx_preamble_count)
				1'd0: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[7:0];
				end
				1'd1: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[15:8];
				end
				2'd2: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[23:16];
				end
				2'd3: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[31:24];
				end
				3'd4: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[39:32];
				end
				3'd5: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[47:40];
				end
				3'd6: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[55:48];
				end
				default: begin
					benchsoc_ethcore_mac_core_tx_preamble_source_payload_data <= benchsoc_ethcore_mac_core_tx_preamble_preamble[63:56];
				end
			endcase
			if (benchsoc_ethcore_mac_core_tx_preamble_source_ready) begin
				if ((benchsoc_ethcore_mac_core_tx_preamble_count == 3'd7)) begin
					liteethmac_txdatapath_liteethmacpreambleinserter_next_state <= 2'd2;
				end else begin
					benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value <= (benchsoc_ethcore_mac_core_tx_preamble_count + 1'd1);
					benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value_ce <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_mac_core_tx_preamble_source_valid <= benchsoc_ethcore_mac_core_tx_preamble_sink_valid;
			benchsoc_ethcore_mac_core_tx_preamble_sink_ready <= benchsoc_ethcore_mac_core_tx_preamble_source_ready;
			benchsoc_ethcore_mac_core_tx_preamble_source_first <= benchsoc_ethcore_mac_core_tx_preamble_sink_first;
			benchsoc_ethcore_mac_core_tx_preamble_source_last <= benchsoc_ethcore_mac_core_tx_preamble_sink_last;
			benchsoc_ethcore_mac_core_tx_preamble_source_payload_error <= benchsoc_ethcore_mac_core_tx_preamble_sink_payload_error;
			if (((benchsoc_ethcore_mac_core_tx_preamble_sink_valid & benchsoc_ethcore_mac_core_tx_preamble_sink_last) & benchsoc_ethcore_mac_core_tx_preamble_source_ready)) begin
				liteethmac_txdatapath_liteethmacpreambleinserter_next_state <= 1'd0;
			end
		end
		default: begin
			benchsoc_ethcore_mac_core_tx_preamble_sink_ready <= 1'd1;
			benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value <= 1'd0;
			benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value_ce <= 1'd1;
			if (benchsoc_ethcore_mac_core_tx_preamble_sink_valid) begin
				benchsoc_ethcore_mac_core_tx_preamble_sink_ready <= 1'd0;
				liteethmac_txdatapath_liteethmacpreambleinserter_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_mac_core_tx_gap_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_core_tx_gap_source_valid <= 1'd0;
	liteethmac_txdatapath_liteethmacgap_next_state <= 1'd0;
	benchsoc_ethcore_mac_core_tx_gap_source_first <= 1'd0;
	benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value <= 4'd0;
	benchsoc_ethcore_mac_core_tx_gap_source_last <= 1'd0;
	benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value_ce <= 1'd0;
	benchsoc_ethcore_mac_core_tx_gap_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_core_tx_gap_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_mac_core_tx_gap_source_payload_error <= 1'd0;
	liteethmac_txdatapath_liteethmacgap_next_state <= liteethmac_txdatapath_liteethmacgap_state;
	case (liteethmac_txdatapath_liteethmacgap_state)
		1'd1: begin
			benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value <= (benchsoc_ethcore_mac_core_tx_gap_counter + 1'd1);
			benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value_ce <= 1'd1;
			if ((benchsoc_ethcore_mac_core_tx_gap_counter == 4'd11)) begin
				liteethmac_txdatapath_liteethmacgap_next_state <= 1'd0;
			end
		end
		default: begin
			benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value <= 1'd0;
			benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value_ce <= 1'd1;
			benchsoc_ethcore_mac_core_tx_gap_source_valid <= benchsoc_ethcore_mac_core_tx_gap_sink_valid;
			benchsoc_ethcore_mac_core_tx_gap_sink_ready <= benchsoc_ethcore_mac_core_tx_gap_source_ready;
			benchsoc_ethcore_mac_core_tx_gap_source_first <= benchsoc_ethcore_mac_core_tx_gap_sink_first;
			benchsoc_ethcore_mac_core_tx_gap_source_last <= benchsoc_ethcore_mac_core_tx_gap_sink_last;
			benchsoc_ethcore_mac_core_tx_gap_source_payload_data <= benchsoc_ethcore_mac_core_tx_gap_sink_payload_data;
			benchsoc_ethcore_mac_core_tx_gap_source_payload_last_be <= benchsoc_ethcore_mac_core_tx_gap_sink_payload_last_be;
			benchsoc_ethcore_mac_core_tx_gap_source_payload_error <= benchsoc_ethcore_mac_core_tx_gap_sink_payload_error;
			if (((benchsoc_ethcore_mac_core_tx_gap_sink_valid & benchsoc_ethcore_mac_core_tx_gap_sink_last) & benchsoc_ethcore_mac_core_tx_gap_sink_ready)) begin
				liteethmac_txdatapath_liteethmacgap_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_mac_core_sink_sink_valid = benchsoc_ethcore_mac_core_sink_valid;
assign benchsoc_ethcore_mac_core_sink_ready = benchsoc_ethcore_mac_core_sink_sink_ready;
assign benchsoc_ethcore_mac_core_sink_sink_first = benchsoc_ethcore_mac_core_sink_first;
assign benchsoc_ethcore_mac_core_sink_sink_last = benchsoc_ethcore_mac_core_sink_last;
assign benchsoc_ethcore_mac_core_sink_sink_payload_data = benchsoc_ethcore_mac_core_sink_payload_data;
assign benchsoc_ethcore_mac_core_sink_sink_payload_last_be = benchsoc_ethcore_mac_core_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_sink_sink_payload_error = benchsoc_ethcore_mac_core_sink_payload_error;
assign benchsoc_ethcore_mac_core_tx_padding_sink_valid = benchsoc_ethcore_mac_core_source_source_valid;
assign benchsoc_ethcore_mac_core_source_source_ready = benchsoc_ethcore_mac_core_tx_padding_sink_ready;
assign benchsoc_ethcore_mac_core_tx_padding_sink_first = benchsoc_ethcore_mac_core_source_source_first;
assign benchsoc_ethcore_mac_core_tx_padding_sink_last = benchsoc_ethcore_mac_core_source_source_last;
assign benchsoc_ethcore_mac_core_tx_padding_sink_payload_data = benchsoc_ethcore_mac_core_source_source_payload_data;
assign benchsoc_ethcore_mac_core_tx_padding_sink_payload_last_be = benchsoc_ethcore_mac_core_source_source_payload_last_be;
assign benchsoc_ethcore_mac_core_tx_padding_sink_payload_error = benchsoc_ethcore_mac_core_source_source_payload_error;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_valid = benchsoc_ethcore_mac_core_tx_padding_source_valid;
assign benchsoc_ethcore_mac_core_tx_padding_source_ready = benchsoc_ethcore_mac_core_bufferizeendpoints_sink_ready;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_first = benchsoc_ethcore_mac_core_tx_padding_source_first;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_last = benchsoc_ethcore_mac_core_tx_padding_source_last;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_data = benchsoc_ethcore_mac_core_tx_padding_source_payload_data;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_last_be = benchsoc_ethcore_mac_core_tx_padding_source_payload_last_be;
assign benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_error = benchsoc_ethcore_mac_core_tx_padding_source_payload_error;
assign benchsoc_ethcore_mac_core_tx_preamble_sink_valid = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_valid;
assign benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready = benchsoc_ethcore_mac_core_tx_preamble_sink_ready;
assign benchsoc_ethcore_mac_core_tx_preamble_sink_first = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_first;
assign benchsoc_ethcore_mac_core_tx_preamble_sink_last = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_last;
assign benchsoc_ethcore_mac_core_tx_preamble_sink_payload_data = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_data;
assign benchsoc_ethcore_mac_core_tx_preamble_sink_payload_last_be = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_last_be;
assign benchsoc_ethcore_mac_core_tx_preamble_sink_payload_error = benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_payload_error;
assign benchsoc_ethcore_mac_core_tx_gap_sink_valid = benchsoc_ethcore_mac_core_tx_preamble_source_valid;
assign benchsoc_ethcore_mac_core_tx_preamble_source_ready = benchsoc_ethcore_mac_core_tx_gap_sink_ready;
assign benchsoc_ethcore_mac_core_tx_gap_sink_first = benchsoc_ethcore_mac_core_tx_preamble_source_first;
assign benchsoc_ethcore_mac_core_tx_gap_sink_last = benchsoc_ethcore_mac_core_tx_preamble_source_last;
assign benchsoc_ethcore_mac_core_tx_gap_sink_payload_data = benchsoc_ethcore_mac_core_tx_preamble_source_payload_data;
assign benchsoc_ethcore_mac_core_tx_gap_sink_payload_last_be = benchsoc_ethcore_mac_core_tx_preamble_source_payload_last_be;
assign benchsoc_ethcore_mac_core_tx_gap_sink_payload_error = benchsoc_ethcore_mac_core_tx_preamble_source_payload_error;
assign ethphy_sink_valid = benchsoc_ethcore_mac_core_tx_gap_source_valid;
assign benchsoc_ethcore_mac_core_tx_gap_source_ready = ethphy_sink_ready;
assign ethphy_sink_first = benchsoc_ethcore_mac_core_tx_gap_source_first;
assign ethphy_sink_last = benchsoc_ethcore_mac_core_tx_gap_source_last;
assign ethphy_sink_payload_data = benchsoc_ethcore_mac_core_tx_gap_source_payload_data;
assign ethphy_sink_payload_last_be = benchsoc_ethcore_mac_core_tx_gap_source_payload_last_be;
assign ethphy_sink_payload_error = benchsoc_ethcore_mac_core_tx_gap_source_payload_error;
assign benchsoc_ethcore_mac_core_pulsesynchronizer0_i = benchsoc_ethcore_mac_core_rx_preamble_error;
assign benchsoc_ethcore_mac_core_pulsesynchronizer1_i = benchsoc_ethcore_mac_core_rx_crc_error;
assign benchsoc_ethcore_mac_core_rx_preamble_source_payload_data = benchsoc_ethcore_mac_core_rx_preamble_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_preamble_source_payload_last_be = benchsoc_ethcore_mac_core_rx_preamble_sink_payload_last_be;
always @(*) begin
	benchsoc_ethcore_mac_core_rx_preamble_error <= 1'd0;
	benchsoc_ethcore_mac_core_rx_preamble_source_valid <= 1'd0;
	benchsoc_ethcore_mac_core_rx_preamble_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_core_rx_preamble_source_first <= 1'd0;
	liteethmac_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
	benchsoc_ethcore_mac_core_rx_preamble_source_last <= 1'd0;
	benchsoc_ethcore_mac_core_rx_preamble_source_payload_error <= 1'd0;
	liteethmac_rxdatapath_liteethmacpreamblechecker_next_state <= liteethmac_rxdatapath_liteethmacpreamblechecker_state;
	case (liteethmac_rxdatapath_liteethmacpreamblechecker_state)
		1'd1: begin
			benchsoc_ethcore_mac_core_rx_preamble_source_valid <= benchsoc_ethcore_mac_core_rx_preamble_sink_valid;
			benchsoc_ethcore_mac_core_rx_preamble_sink_ready <= benchsoc_ethcore_mac_core_rx_preamble_source_ready;
			benchsoc_ethcore_mac_core_rx_preamble_source_first <= benchsoc_ethcore_mac_core_rx_preamble_sink_first;
			benchsoc_ethcore_mac_core_rx_preamble_source_last <= benchsoc_ethcore_mac_core_rx_preamble_sink_last;
			benchsoc_ethcore_mac_core_rx_preamble_source_payload_error <= benchsoc_ethcore_mac_core_rx_preamble_sink_payload_error;
			if (((benchsoc_ethcore_mac_core_rx_preamble_source_valid & benchsoc_ethcore_mac_core_rx_preamble_source_last) & benchsoc_ethcore_mac_core_rx_preamble_source_ready)) begin
				liteethmac_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd0;
			end
		end
		default: begin
			benchsoc_ethcore_mac_core_rx_preamble_sink_ready <= 1'd1;
			if (((benchsoc_ethcore_mac_core_rx_preamble_sink_valid & (~benchsoc_ethcore_mac_core_rx_preamble_sink_last)) & (benchsoc_ethcore_mac_core_rx_preamble_sink_payload_data == benchsoc_ethcore_mac_core_rx_preamble_preamble[63:56]))) begin
				liteethmac_rxdatapath_liteethmacpreamblechecker_next_state <= 1'd1;
			end
			if ((benchsoc_ethcore_mac_core_rx_preamble_sink_valid & benchsoc_ethcore_mac_core_rx_preamble_sink_last)) begin
				benchsoc_ethcore_mac_core_rx_preamble_error <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_mac_core_pulsesynchronizer0_o = (benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o ^ benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o_r);
assign benchsoc_ethcore_mac_core_rx_crc_fifo_full = (benchsoc_ethcore_mac_core_rx_crc_syncfifo_level == 3'd4);
assign benchsoc_ethcore_mac_core_rx_crc_fifo_in = (benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid & ((~benchsoc_ethcore_mac_core_rx_crc_fifo_full) | benchsoc_ethcore_mac_core_rx_crc_fifo_out));
assign benchsoc_ethcore_mac_core_rx_crc_fifo_out = (benchsoc_ethcore_mac_core_rx_crc_source_source_valid & benchsoc_ethcore_mac_core_rx_crc_source_source_ready);
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_first = benchsoc_ethcore_mac_core_rx_crc_sink_sink_first;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_last = benchsoc_ethcore_mac_core_rx_crc_sink_sink_last;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_data = benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_last_be = benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_error = benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_error;
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_valid <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_valid <= benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid;
	benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_valid <= benchsoc_ethcore_mac_core_rx_crc_fifo_in;
end
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_ready;
	benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready <= benchsoc_ethcore_mac_core_rx_crc_fifo_in;
end
assign benchsoc_ethcore_mac_core_rx_crc_crc_data0 = benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_crc_crc_last_be0 = benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid = benchsoc_ethcore_mac_core_rx_crc_source_valid;
assign benchsoc_ethcore_mac_core_rx_crc_source_ready = benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready;
assign benchsoc_ethcore_mac_core_rx_crc_sink_sink_first = benchsoc_ethcore_mac_core_rx_crc_source_first;
assign benchsoc_ethcore_mac_core_rx_crc_sink_sink_last = benchsoc_ethcore_mac_core_rx_crc_source_last;
assign benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_data = benchsoc_ethcore_mac_core_rx_crc_source_payload_data;
assign benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be = benchsoc_ethcore_mac_core_rx_crc_source_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_error = benchsoc_ethcore_mac_core_rx_crc_source_payload_error;
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_crc_last_be1 <= 1'd0;
	if ((benchsoc_ethcore_mac_core_rx_crc_crc_last_be0 != 1'd0)) begin
		benchsoc_ethcore_mac_core_rx_crc_crc_last_be1 <= benchsoc_ethcore_mac_core_rx_crc_crc_last_be0;
	end else begin
		benchsoc_ethcore_mac_core_rx_crc_crc_last_be1 <= 1'd1;
	end
end
assign benchsoc_ethcore_mac_core_rx_crc_crc_data1 = benchsoc_ethcore_mac_core_rx_crc_crc_data0[7:0];
assign benchsoc_ethcore_mac_core_rx_crc_crc_last = benchsoc_ethcore_mac_core_rx_crc_crc_reg;
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_crc_value <= 32'd0;
	benchsoc_ethcore_mac_core_rx_crc_crc_error0 <= 1'd0;
	if (benchsoc_ethcore_mac_core_rx_crc_crc_last_be1) begin
		benchsoc_ethcore_mac_core_rx_crc_crc_value <= {t_slice_proxy63[0], t_slice_proxy62[1], t_slice_proxy61[2], t_slice_proxy60[3], t_slice_proxy59[4], t_slice_proxy58[5], t_slice_proxy57[6], t_slice_proxy56[7], t_slice_proxy55[8], t_slice_proxy54[9], t_slice_proxy53[10], t_slice_proxy52[11], t_slice_proxy51[12], t_slice_proxy50[13], t_slice_proxy49[14], t_slice_proxy48[15], t_slice_proxy47[16], t_slice_proxy46[17], t_slice_proxy45[18], t_slice_proxy44[19], t_slice_proxy43[20], t_slice_proxy42[21], t_slice_proxy41[22], t_slice_proxy40[23], t_slice_proxy39[24], t_slice_proxy38[25], t_slice_proxy37[26], t_slice_proxy36[27], t_slice_proxy35[28], t_slice_proxy34[29], t_slice_proxy33[30], t_slice_proxy32[31]};
		benchsoc_ethcore_mac_core_rx_crc_crc_error0 <= (benchsoc_ethcore_mac_core_rx_crc_crc_next != 32'd3338984827);
	end
end
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_crc_next <= 32'd0;
	benchsoc_ethcore_mac_core_rx_crc_crc_next[0] <= (((benchsoc_ethcore_mac_core_rx_crc_crc_last[24] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[1] <= (((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[25] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[2] <= (((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[26] ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[3] <= (((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[27] ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[4] <= (((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[28] ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[5] <= (((((((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[29] ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[6] <= (((((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[30] ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[7] <= (((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[31] ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[8] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[0] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[9] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[1] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[10] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[2] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[11] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[3] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[12] <= ((((((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[4] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[13] <= ((((((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[5] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[14] <= ((((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[6] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[15] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[7] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[16] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[8] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[17] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[9] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[18] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[10] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[19] <= ((((benchsoc_ethcore_mac_core_rx_crc_crc_last[11] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[20] <= ((benchsoc_ethcore_mac_core_rx_crc_crc_last[12] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[21] <= ((benchsoc_ethcore_mac_core_rx_crc_crc_last[13] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[22] <= ((benchsoc_ethcore_mac_core_rx_crc_crc_last[14] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[23] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[15] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[24] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[16] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[25] <= ((((benchsoc_ethcore_mac_core_rx_crc_crc_last[17] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[26] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[18] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[24]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[7]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[27] <= ((((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[19] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[25]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[6]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[28] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[20] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[26]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[5]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[29] <= ((((((benchsoc_ethcore_mac_core_rx_crc_crc_last[21] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[30]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[1]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[27]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[4]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[30] <= ((((benchsoc_ethcore_mac_core_rx_crc_crc_last[22] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[31]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[0]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[28]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[3]);
	benchsoc_ethcore_mac_core_rx_crc_crc_next[31] <= ((benchsoc_ethcore_mac_core_rx_crc_crc_last[23] ^ benchsoc_ethcore_mac_core_rx_crc_crc_last[29]) ^ benchsoc_ethcore_mac_core_rx_crc_crc_data1[2]);
end
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_din = {benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_last, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_first, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_error, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_last_be, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_data};
assign {benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_last, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_first, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_error, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_last_be, benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_data} = benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_dout;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_ready = benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_writable;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_we = benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_valid;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_first = benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_first;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_last = benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_last;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_data = benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_last_be = benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_in_payload_error = benchsoc_ethcore_mac_core_rx_crc_syncfifo_sink_payload_error;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_valid = benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_readable;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_first = benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_first;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_last = benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_last;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_data = benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_data;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_last_be = benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_error = benchsoc_ethcore_mac_core_rx_crc_syncfifo_fifo_out_payload_error;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_re = benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_ready;
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_adr <= 3'd0;
	if (benchsoc_ethcore_mac_core_rx_crc_syncfifo_replace) begin
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_adr <= (benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce - 1'd1);
	end else begin
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_adr <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce;
	end
end
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_dat_w = benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_din;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_we = (benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_we & (benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_writable | benchsoc_ethcore_mac_core_rx_crc_syncfifo_replace));
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_do_read = (benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_readable & benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_re);
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_rdport_adr = benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_dout = benchsoc_ethcore_mac_core_rx_crc_syncfifo_rdport_dat_r;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_writable = (benchsoc_ethcore_mac_core_rx_crc_syncfifo_level != 3'd5);
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_readable = (benchsoc_ethcore_mac_core_rx_crc_syncfifo_level != 1'd0);
always @(*) begin
	benchsoc_ethcore_mac_core_rx_crc_source_source_first <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_crc_reset <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_source_source_last <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_source_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value0 <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value1 <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_error <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_ready <= 1'd0;
	liteethmac_rxdatapath_bufferizeendpoints_next_state <= 2'd0;
	benchsoc_ethcore_mac_core_rx_crc_fifo_reset <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_source_source_valid <= 1'd0;
	benchsoc_ethcore_mac_core_rx_crc_crc_ce <= 1'd0;
	liteethmac_rxdatapath_bufferizeendpoints_next_state <= liteethmac_rxdatapath_bufferizeendpoints_state;
	case (liteethmac_rxdatapath_bufferizeendpoints_state)
		1'd1: begin
			if ((benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid & benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready)) begin
				benchsoc_ethcore_mac_core_rx_crc_crc_ce <= 1'd1;
				liteethmac_rxdatapath_bufferizeendpoints_next_state <= 2'd2;
			end
		end
		2'd2: begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_ready <= benchsoc_ethcore_mac_core_rx_crc_fifo_out;
			benchsoc_ethcore_mac_core_rx_crc_source_source_valid <= (benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid & benchsoc_ethcore_mac_core_rx_crc_fifo_full);
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_data <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_data;
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_last_be;
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_error;
			if (1'd1) begin
				benchsoc_ethcore_mac_core_rx_crc_source_source_last <= benchsoc_ethcore_mac_core_rx_crc_sink_sink_last;
				benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be <= benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be;
			end else begin
				if ((benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be & 4'd15)) begin
					benchsoc_ethcore_mac_core_rx_crc_source_source_last <= benchsoc_ethcore_mac_core_rx_crc_sink_sink_last;
					benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be <= (benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be <<< -3'd3);
				end else begin
					benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value0 <= (benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be >>> 3'd4);
					benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value_ce0 <= 1'd1;
					benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value1 <= benchsoc_ethcore_mac_core_rx_crc_crc_error0;
					benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value_ce1 <= 1'd1;
				end
			end
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error <= (benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_error | {1{(benchsoc_ethcore_mac_core_rx_crc_crc_error0 & benchsoc_ethcore_mac_core_rx_crc_sink_sink_last)}});
			benchsoc_ethcore_mac_core_rx_crc_error <= ((benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid & benchsoc_ethcore_mac_core_rx_crc_sink_sink_last) & benchsoc_ethcore_mac_core_rx_crc_crc_error0);
			if ((benchsoc_ethcore_mac_core_rx_crc_sink_sink_valid & benchsoc_ethcore_mac_core_rx_crc_sink_sink_ready)) begin
				benchsoc_ethcore_mac_core_rx_crc_crc_ce <= 1'd1;
				if ((benchsoc_ethcore_mac_core_rx_crc_sink_sink_last & (benchsoc_ethcore_mac_core_rx_crc_sink_sink_payload_last_be > 4'd15))) begin
					liteethmac_rxdatapath_bufferizeendpoints_next_state <= 2'd3;
				end else begin
					if (benchsoc_ethcore_mac_core_rx_crc_sink_sink_last) begin
						liteethmac_rxdatapath_bufferizeendpoints_next_state <= 1'd0;
					end
				end
			end
		end
		2'd3: begin
			benchsoc_ethcore_mac_core_rx_crc_source_source_valid <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_valid;
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_ready <= benchsoc_ethcore_mac_core_rx_crc_source_source_ready;
			benchsoc_ethcore_mac_core_rx_crc_source_source_first <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_first;
			benchsoc_ethcore_mac_core_rx_crc_source_source_last <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_last;
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_data <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_data;
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_last_be;
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_error;
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error <= (benchsoc_ethcore_mac_core_rx_crc_syncfifo_source_payload_error | {1{benchsoc_ethcore_mac_core_rx_crc_crc_error1}});
			benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be <= benchsoc_ethcore_mac_core_rx_crc_last_be;
			if ((benchsoc_ethcore_mac_core_rx_crc_source_source_valid & benchsoc_ethcore_mac_core_rx_crc_source_source_ready)) begin
				liteethmac_rxdatapath_bufferizeendpoints_next_state <= 1'd0;
			end
		end
		default: begin
			benchsoc_ethcore_mac_core_rx_crc_crc_reset <= 1'd1;
			benchsoc_ethcore_mac_core_rx_crc_fifo_reset <= 1'd1;
			liteethmac_rxdatapath_bufferizeendpoints_next_state <= 1'd1;
		end
	endcase
end
assign benchsoc_ethcore_mac_core_rx_crc_sink_ready = ((~benchsoc_ethcore_mac_core_rx_crc_source_valid) | benchsoc_ethcore_mac_core_rx_crc_source_ready);
assign benchsoc_ethcore_mac_core_pulsesynchronizer1_o = (benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o ^ benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o_r);
assign benchsoc_ethcore_mac_core_rx_padding_source_valid = benchsoc_ethcore_mac_core_rx_padding_sink_valid;
assign benchsoc_ethcore_mac_core_rx_padding_sink_ready = benchsoc_ethcore_mac_core_rx_padding_source_ready;
assign benchsoc_ethcore_mac_core_rx_padding_source_first = benchsoc_ethcore_mac_core_rx_padding_sink_first;
assign benchsoc_ethcore_mac_core_rx_padding_source_last = benchsoc_ethcore_mac_core_rx_padding_sink_last;
assign benchsoc_ethcore_mac_core_rx_padding_source_payload_data = benchsoc_ethcore_mac_core_rx_padding_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_padding_source_payload_last_be = benchsoc_ethcore_mac_core_rx_padding_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_padding_source_payload_error = benchsoc_ethcore_mac_core_rx_padding_sink_payload_error;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_valid = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_valid;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_ready = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_ready;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_first = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_first;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_last = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_last;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_data = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_last_be = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_error = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_error;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_valid = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_valid;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_ready = benchsoc_ethcore_mac_core_rx_cdc_source_source_ready;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_first = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_first;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_last = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_last;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_data = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_data;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_last_be = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_error = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_error;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_din = {benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_last, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_first, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_error, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_last_be, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_data};
assign {benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_last, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_first, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_error, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_last_be, benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_data} = benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_dout;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_ready = benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_writable;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_we = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_valid;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_first = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_first;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_last = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_last;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_data = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_data;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_last_be = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_in_payload_error = benchsoc_ethcore_mac_core_rx_cdc_cdc_sink_payload_error;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_valid = benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_readable;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_first = benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_first;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_last = benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_last;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_data = benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_data;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_last_be = benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_source_payload_error = benchsoc_ethcore_mac_core_rx_cdc_cdc_fifo_out_payload_error;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_re = benchsoc_ethcore_mac_core_rx_cdc_cdc_source_ready;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_ce = (benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_writable & benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_we);
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_ce = (benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_readable & benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_re);
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_writable = (((benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q[5] == benchsoc_ethcore_mac_core_rx_cdc_cdc_consume_wdomain[5]) | (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q[4] == benchsoc_ethcore_mac_core_rx_cdc_cdc_consume_wdomain[4])) | (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q[3:0] != benchsoc_ethcore_mac_core_rx_cdc_cdc_consume_wdomain[3:0]));
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_readable = (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q != benchsoc_ethcore_mac_core_rx_cdc_cdc_produce_rdomain);
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_adr = benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_binary[4:0];
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_dat_w = benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_din;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_we = benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_ce;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_rdport_adr = benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary[4:0];
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_asyncfifo_dout = benchsoc_ethcore_mac_core_rx_cdc_cdc_rdport_dat_r;
always @(*) begin
	benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary <= 6'd0;
	if (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_ce) begin
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary <= (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_binary;
	end
end
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next = (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary ^ benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary[5:1]);
always @(*) begin
	benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary <= 6'd0;
	if (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_ce) begin
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary <= (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_binary;
	end
end
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next = (benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary ^ benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary[5:1]);
assign benchsoc_ethcore_mac_core_rx_preamble_sink_valid = ethphy_source_valid;
assign ethphy_source_ready = benchsoc_ethcore_mac_core_rx_preamble_sink_ready;
assign benchsoc_ethcore_mac_core_rx_preamble_sink_first = ethphy_source_first;
assign benchsoc_ethcore_mac_core_rx_preamble_sink_last = ethphy_source_last;
assign benchsoc_ethcore_mac_core_rx_preamble_sink_payload_data = ethphy_source_payload_data;
assign benchsoc_ethcore_mac_core_rx_preamble_sink_payload_last_be = ethphy_source_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_preamble_sink_payload_error = ethphy_source_payload_error;
assign benchsoc_ethcore_mac_core_rx_crc_sink_valid = benchsoc_ethcore_mac_core_rx_preamble_source_valid;
assign benchsoc_ethcore_mac_core_rx_preamble_source_ready = benchsoc_ethcore_mac_core_rx_crc_sink_ready;
assign benchsoc_ethcore_mac_core_rx_crc_sink_first = benchsoc_ethcore_mac_core_rx_preamble_source_first;
assign benchsoc_ethcore_mac_core_rx_crc_sink_last = benchsoc_ethcore_mac_core_rx_preamble_source_last;
assign benchsoc_ethcore_mac_core_rx_crc_sink_payload_data = benchsoc_ethcore_mac_core_rx_preamble_source_payload_data;
assign benchsoc_ethcore_mac_core_rx_crc_sink_payload_last_be = benchsoc_ethcore_mac_core_rx_preamble_source_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_crc_sink_payload_error = benchsoc_ethcore_mac_core_rx_preamble_source_payload_error;
assign benchsoc_ethcore_mac_core_rx_padding_sink_valid = benchsoc_ethcore_mac_core_rx_crc_source_source_valid;
assign benchsoc_ethcore_mac_core_rx_crc_source_source_ready = benchsoc_ethcore_mac_core_rx_padding_sink_ready;
assign benchsoc_ethcore_mac_core_rx_padding_sink_first = benchsoc_ethcore_mac_core_rx_crc_source_source_first;
assign benchsoc_ethcore_mac_core_rx_padding_sink_last = benchsoc_ethcore_mac_core_rx_crc_source_source_last;
assign benchsoc_ethcore_mac_core_rx_padding_sink_payload_data = benchsoc_ethcore_mac_core_rx_crc_source_source_payload_data;
assign benchsoc_ethcore_mac_core_rx_padding_sink_payload_last_be = benchsoc_ethcore_mac_core_rx_crc_source_source_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_padding_sink_payload_error = benchsoc_ethcore_mac_core_rx_crc_source_source_payload_error;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_valid = benchsoc_ethcore_mac_core_rx_padding_source_valid;
assign benchsoc_ethcore_mac_core_rx_padding_source_ready = benchsoc_ethcore_mac_core_rx_cdc_sink_sink_ready;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_first = benchsoc_ethcore_mac_core_rx_padding_source_first;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_last = benchsoc_ethcore_mac_core_rx_padding_source_last;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_data = benchsoc_ethcore_mac_core_rx_padding_source_payload_data;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_last_be = benchsoc_ethcore_mac_core_rx_padding_source_payload_last_be;
assign benchsoc_ethcore_mac_core_rx_cdc_sink_sink_payload_error = benchsoc_ethcore_mac_core_rx_padding_source_payload_error;
assign benchsoc_ethcore_mac_core_source_valid = benchsoc_ethcore_mac_core_rx_cdc_source_source_valid;
assign benchsoc_ethcore_mac_core_rx_cdc_source_source_ready = benchsoc_ethcore_mac_core_source_ready;
assign benchsoc_ethcore_mac_core_source_first = benchsoc_ethcore_mac_core_rx_cdc_source_source_first;
assign benchsoc_ethcore_mac_core_source_last = benchsoc_ethcore_mac_core_rx_cdc_source_source_last;
assign benchsoc_ethcore_mac_core_source_payload_data = benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_data;
assign benchsoc_ethcore_mac_core_source_payload_last_be = benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_last_be;
assign benchsoc_ethcore_mac_core_source_payload_error = benchsoc_ethcore_mac_core_rx_cdc_source_source_payload_error;
always @(*) begin
	liteethmac_sel0 <= 2'd0;
	if ((benchsoc_ethcore_mac_crossbar_sink_payload_ethernet_type == 12'd2054)) begin
		liteethmac_sel0 <= 1'd1;
	end
	if ((benchsoc_ethcore_mac_crossbar_sink_payload_ethernet_type == 12'd2048)) begin
		liteethmac_sel0 <= 2'd2;
	end
end
always @(*) begin
	liteethmac_request <= 2'd0;
	liteethmac_request[0] <= liteethmac_status0_ongoing0;
	liteethmac_request[1] <= liteethmac_status1_ongoing0;
end
always @(*) begin
	benchsoc_ethcore_mac_crossbar_source_payload_error <= 1'd0;
	benchsoc_ethcore_mac_crossbar_source_valid <= 1'd0;
	benchsoc_ethcore_mac_crossbar_source_first <= 1'd0;
	benchsoc_ethcore_ip_mac_port_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_crossbar_source_last <= 1'd0;
	benchsoc_ethcore_mac_crossbar_source_payload_ethernet_type <= 16'd0;
	benchsoc_ethcore_arp_mac_port_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_crossbar_source_payload_sender_mac <= 48'd0;
	benchsoc_ethcore_mac_crossbar_source_payload_target_mac <= 48'd0;
	benchsoc_ethcore_mac_crossbar_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_crossbar_source_payload_last_be <= 1'd0;
	case (liteethmac_grant)
		1'd0: begin
			benchsoc_ethcore_mac_crossbar_source_valid <= benchsoc_ethcore_arp_mac_port_sink_valid;
			benchsoc_ethcore_arp_mac_port_sink_ready <= benchsoc_ethcore_mac_crossbar_source_ready;
			benchsoc_ethcore_mac_crossbar_source_first <= benchsoc_ethcore_arp_mac_port_sink_first;
			benchsoc_ethcore_mac_crossbar_source_last <= benchsoc_ethcore_arp_mac_port_sink_last;
			benchsoc_ethcore_mac_crossbar_source_payload_ethernet_type <= benchsoc_ethcore_arp_mac_port_sink_payload_ethernet_type;
			benchsoc_ethcore_mac_crossbar_source_payload_sender_mac <= benchsoc_ethcore_arp_mac_port_sink_payload_sender_mac;
			benchsoc_ethcore_mac_crossbar_source_payload_target_mac <= benchsoc_ethcore_arp_mac_port_sink_payload_target_mac;
			benchsoc_ethcore_mac_crossbar_source_payload_data <= benchsoc_ethcore_arp_mac_port_sink_payload_data;
			benchsoc_ethcore_mac_crossbar_source_payload_last_be <= benchsoc_ethcore_arp_mac_port_sink_payload_last_be;
			benchsoc_ethcore_mac_crossbar_source_payload_error <= benchsoc_ethcore_arp_mac_port_sink_payload_error;
		end
		1'd1: begin
			benchsoc_ethcore_mac_crossbar_source_valid <= benchsoc_ethcore_ip_mac_port_sink_valid;
			benchsoc_ethcore_ip_mac_port_sink_ready <= benchsoc_ethcore_mac_crossbar_source_ready;
			benchsoc_ethcore_mac_crossbar_source_first <= benchsoc_ethcore_ip_mac_port_sink_first;
			benchsoc_ethcore_mac_crossbar_source_last <= benchsoc_ethcore_ip_mac_port_sink_last;
			benchsoc_ethcore_mac_crossbar_source_payload_ethernet_type <= benchsoc_ethcore_ip_mac_port_sink_payload_ethernet_type;
			benchsoc_ethcore_mac_crossbar_source_payload_sender_mac <= benchsoc_ethcore_ip_mac_port_sink_payload_sender_mac;
			benchsoc_ethcore_mac_crossbar_source_payload_target_mac <= benchsoc_ethcore_ip_mac_port_sink_payload_target_mac;
			benchsoc_ethcore_mac_crossbar_source_payload_data <= benchsoc_ethcore_ip_mac_port_sink_payload_data;
			benchsoc_ethcore_mac_crossbar_source_payload_last_be <= benchsoc_ethcore_ip_mac_port_sink_payload_last_be;
			benchsoc_ethcore_mac_crossbar_source_payload_error <= benchsoc_ethcore_ip_mac_port_sink_payload_error;
		end
	endcase
end
always @(*) begin
	liteethmac_status0_last <= 1'd0;
	if (benchsoc_ethcore_arp_mac_port_sink_valid) begin
		liteethmac_status0_last <= (benchsoc_ethcore_arp_mac_port_sink_last & benchsoc_ethcore_arp_mac_port_sink_ready);
	end
end
assign liteethmac_status0_ongoing0 = ((benchsoc_ethcore_arp_mac_port_sink_valid | liteethmac_status0_ongoing1) & (~liteethmac_status0_last));
always @(*) begin
	liteethmac_status1_last <= 1'd0;
	if (benchsoc_ethcore_ip_mac_port_sink_valid) begin
		liteethmac_status1_last <= (benchsoc_ethcore_ip_mac_port_sink_last & benchsoc_ethcore_ip_mac_port_sink_ready);
	end
end
assign liteethmac_status1_ongoing0 = ((benchsoc_ethcore_ip_mac_port_sink_valid | liteethmac_status1_ongoing1) & (~liteethmac_status1_last));
always @(*) begin
	liteethmac_sel1 <= 2'd0;
	if (liteethmac_first) begin
		liteethmac_sel1 <= liteethmac_sel0;
	end else begin
		liteethmac_sel1 <= liteethmac_sel_ongoing;
	end
end
always @(*) begin
	benchsoc_ethcore_arp_mac_port_source_valid <= 1'd0;
	benchsoc_ethcore_arp_mac_port_source_first <= 1'd0;
	benchsoc_ethcore_arp_mac_port_source_last <= 1'd0;
	benchsoc_ethcore_arp_mac_port_source_payload_ethernet_type <= 16'd0;
	benchsoc_ethcore_arp_mac_port_source_payload_sender_mac <= 48'd0;
	benchsoc_ethcore_arp_mac_port_source_payload_target_mac <= 48'd0;
	benchsoc_ethcore_arp_mac_port_source_payload_data <= 8'd0;
	benchsoc_ethcore_arp_mac_port_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_arp_mac_port_source_payload_error <= 1'd0;
	benchsoc_ethcore_mac_crossbar_sink_ready <= 1'd0;
	benchsoc_ethcore_ip_mac_port_source_valid <= 1'd0;
	benchsoc_ethcore_ip_mac_port_source_first <= 1'd0;
	benchsoc_ethcore_ip_mac_port_source_last <= 1'd0;
	benchsoc_ethcore_ip_mac_port_source_payload_ethernet_type <= 16'd0;
	benchsoc_ethcore_ip_mac_port_source_payload_sender_mac <= 48'd0;
	benchsoc_ethcore_ip_mac_port_source_payload_target_mac <= 48'd0;
	benchsoc_ethcore_ip_mac_port_source_payload_data <= 8'd0;
	benchsoc_ethcore_ip_mac_port_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_ip_mac_port_source_payload_error <= 1'd0;
	case (liteethmac_sel1)
		1'd1: begin
			benchsoc_ethcore_arp_mac_port_source_valid <= benchsoc_ethcore_mac_crossbar_sink_valid;
			benchsoc_ethcore_mac_crossbar_sink_ready <= benchsoc_ethcore_arp_mac_port_source_ready;
			benchsoc_ethcore_arp_mac_port_source_first <= benchsoc_ethcore_mac_crossbar_sink_first;
			benchsoc_ethcore_arp_mac_port_source_last <= benchsoc_ethcore_mac_crossbar_sink_last;
			benchsoc_ethcore_arp_mac_port_source_payload_ethernet_type <= benchsoc_ethcore_mac_crossbar_sink_payload_ethernet_type;
			benchsoc_ethcore_arp_mac_port_source_payload_sender_mac <= benchsoc_ethcore_mac_crossbar_sink_payload_sender_mac;
			benchsoc_ethcore_arp_mac_port_source_payload_target_mac <= benchsoc_ethcore_mac_crossbar_sink_payload_target_mac;
			benchsoc_ethcore_arp_mac_port_source_payload_data <= benchsoc_ethcore_mac_crossbar_sink_payload_data;
			benchsoc_ethcore_arp_mac_port_source_payload_last_be <= benchsoc_ethcore_mac_crossbar_sink_payload_last_be;
			benchsoc_ethcore_arp_mac_port_source_payload_error <= benchsoc_ethcore_mac_crossbar_sink_payload_error;
		end
		2'd2: begin
			benchsoc_ethcore_ip_mac_port_source_valid <= benchsoc_ethcore_mac_crossbar_sink_valid;
			benchsoc_ethcore_mac_crossbar_sink_ready <= benchsoc_ethcore_ip_mac_port_source_ready;
			benchsoc_ethcore_ip_mac_port_source_first <= benchsoc_ethcore_mac_crossbar_sink_first;
			benchsoc_ethcore_ip_mac_port_source_last <= benchsoc_ethcore_mac_crossbar_sink_last;
			benchsoc_ethcore_ip_mac_port_source_payload_ethernet_type <= benchsoc_ethcore_mac_crossbar_sink_payload_ethernet_type;
			benchsoc_ethcore_ip_mac_port_source_payload_sender_mac <= benchsoc_ethcore_mac_crossbar_sink_payload_sender_mac;
			benchsoc_ethcore_ip_mac_port_source_payload_target_mac <= benchsoc_ethcore_mac_crossbar_sink_payload_target_mac;
			benchsoc_ethcore_ip_mac_port_source_payload_data <= benchsoc_ethcore_mac_crossbar_sink_payload_data;
			benchsoc_ethcore_ip_mac_port_source_payload_last_be <= benchsoc_ethcore_mac_crossbar_sink_payload_last_be;
			benchsoc_ethcore_ip_mac_port_source_payload_error <= benchsoc_ethcore_mac_crossbar_sink_payload_error;
		end
		default: begin
			benchsoc_ethcore_mac_crossbar_sink_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	liteethmac_last <= 1'd0;
	if (benchsoc_ethcore_mac_crossbar_sink_valid) begin
		liteethmac_last <= (benchsoc_ethcore_mac_crossbar_sink_last & benchsoc_ethcore_mac_crossbar_sink_ready);
	end
end
assign liteethmac_ongoing0 = ((benchsoc_ethcore_mac_crossbar_sink_valid | liteethmac_ongoing1) & (~liteethmac_last));
always @(*) begin
	benchsoc_ethcore_mac_packetizer_header <= 112'd0;
	benchsoc_ethcore_mac_packetizer_header[111:96] <= {benchsoc_ethcore_mac_packetizer_sink_payload_ethernet_type[7:0], benchsoc_ethcore_mac_packetizer_sink_payload_ethernet_type[15:8]};
	benchsoc_ethcore_mac_packetizer_header[95:48] <= {benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac[7:0], benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac[15:8], benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac[23:16], benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac[31:24], benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac[39:32], benchsoc_ethcore_mac_packetizer_sink_payload_sender_mac[47:40]};
	benchsoc_ethcore_mac_packetizer_header[47:0] <= {benchsoc_ethcore_mac_packetizer_sink_payload_target_mac[7:0], benchsoc_ethcore_mac_packetizer_sink_payload_target_mac[15:8], benchsoc_ethcore_mac_packetizer_sink_payload_target_mac[23:16], benchsoc_ethcore_mac_packetizer_sink_payload_target_mac[31:24], benchsoc_ethcore_mac_packetizer_sink_payload_target_mac[39:32], benchsoc_ethcore_mac_packetizer_sink_payload_target_mac[47:40]};
end
assign benchsoc_ethcore_mac_packetizer_sink_last_be = benchsoc_ethcore_mac_packetizer_sink_last;
assign benchsoc_ethcore_mac_packetizer_new_last_be = {benchsoc_ethcore_mac_packetizer_sink_last_be};
assign benchsoc_ethcore_mac_packetizer_in_data_copy = (benchsoc_ethcore_mac_packetizer_is_ongoing0 | benchsoc_ethcore_mac_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_mac_packetizer_source_last <= 1'd0;
	if (benchsoc_ethcore_mac_packetizer_source_last_s) begin
		benchsoc_ethcore_mac_packetizer_source_last <= benchsoc_ethcore_mac_packetizer_source_last_b;
	end else begin
		benchsoc_ethcore_mac_packetizer_source_last <= benchsoc_ethcore_mac_packetizer_source_last_a;
	end
end
assign benchsoc_ethcore_mac_packetizer_source_payload_error = benchsoc_ethcore_mac_packetizer_sink_payload_error;
always @(*) begin
	benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value1 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_source_valid <= 1'd0;
	benchsoc_ethcore_mac_packetizer_source_last_a <= 1'd0;
	benchsoc_ethcore_mac_packetizer_source_last_b <= 1'd0;
	benchsoc_ethcore_mac_packetizer_source_last_s <= 1'd0;
	benchsoc_ethcore_mac_packetizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_packetizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_mac_packetizer_sr_load <= 1'd0;
	liteethmac_fsm1_next_state0 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_sr_shift <= 1'd0;
	benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value0 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_mac_packetizer_sink_ready <= 1'd0;
	liteethmac_fsm0_next_state0 <= 2'd0;
	benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value0 <= 4'd0;
	liteethmac_fsm0_next_state0 <= liteethmac_fsm0_state0;
	case (liteethmac_fsm0_state0)
		1'd1: begin
			benchsoc_ethcore_mac_packetizer_source_valid <= 1'd1;
			benchsoc_ethcore_mac_packetizer_source_last_a <= 1'd0;
			benchsoc_ethcore_mac_packetizer_source_payload_data <= benchsoc_ethcore_mac_packetizer_sr[111:8];
			if ((benchsoc_ethcore_mac_packetizer_source_valid & benchsoc_ethcore_mac_packetizer_source_ready)) begin
				benchsoc_ethcore_mac_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_mac_packetizer_count == 4'd13)) begin
					benchsoc_ethcore_mac_packetizer_sr_shift <= 1'd0;
					liteethmac_fsm0_next_state0 <= 2'd2;
					benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value0 <= (benchsoc_ethcore_mac_packetizer_count + 1'd1);
					benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value_ce0 <= 1'd1;
				end else begin
					benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value0 <= (benchsoc_ethcore_mac_packetizer_count + 1'd1);
					benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value_ce0 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_mac_packetizer_source_valid <= benchsoc_ethcore_mac_packetizer_sink_valid;
			benchsoc_ethcore_mac_packetizer_source_last_a <= benchsoc_ethcore_mac_packetizer_sink_last;
			benchsoc_ethcore_mac_packetizer_source_payload_data <= benchsoc_ethcore_mac_packetizer_sink_payload_data;
			if ((benchsoc_ethcore_mac_packetizer_source_valid & benchsoc_ethcore_mac_packetizer_source_ready)) begin
				benchsoc_ethcore_mac_packetizer_sink_ready <= 1'd1;
				if (benchsoc_ethcore_mac_packetizer_source_last) begin
					liteethmac_fsm0_next_state0 <= 1'd0;
				end
			end
			benchsoc_ethcore_mac_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_mac_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_mac_packetizer_sink_ready <= 1'd1;
			benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value0 <= 1'd1;
			benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value_ce0 <= 1'd1;
			if (benchsoc_ethcore_mac_packetizer_sink_valid) begin
				benchsoc_ethcore_mac_packetizer_sink_ready <= 1'd0;
				benchsoc_ethcore_mac_packetizer_source_valid <= 1'd1;
				benchsoc_ethcore_mac_packetizer_source_last_a <= 1'd0;
				benchsoc_ethcore_mac_packetizer_source_payload_data <= benchsoc_ethcore_mac_packetizer_header[7:0];
				if ((benchsoc_ethcore_mac_packetizer_source_valid & benchsoc_ethcore_mac_packetizer_source_ready)) begin
					benchsoc_ethcore_mac_packetizer_sr_load <= 1'd1;
					benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value1 <= 1'd1;
					benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value_ce1 <= 1'd1;
					if (1'd0) begin
						liteethmac_fsm0_next_state0 <= 2'd2;
					end else begin
						liteethmac_fsm0_next_state0 <= 1'd1;
					end
				end
			end
			benchsoc_ethcore_mac_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	liteethmac_fsm1_next_state0 <= liteethmac_fsm1_state0;
	case (liteethmac_fsm1_state0)
		1'd1: begin
			benchsoc_ethcore_mac_packetizer_source_last_b <= 1'd1;
			benchsoc_ethcore_mac_packetizer_source_last_s <= 1'd1;
			benchsoc_ethcore_mac_packetizer_source_payload_last_be <= benchsoc_ethcore_mac_packetizer_delayed_last_be;
			benchsoc_ethcore_mac_packetizer_sink_ready <= 1'd0;
			if (benchsoc_ethcore_mac_packetizer_source_ready) begin
				liteethmac_fsm1_next_state0 <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_mac_packetizer_in_data_copy & benchsoc_ethcore_mac_packetizer_sink_last) & (benchsoc_ethcore_mac_packetizer_sink_last_be > benchsoc_ethcore_mac_packetizer_new_last_be))) begin
				benchsoc_ethcore_mac_packetizer_source_last_b <= 1'd0;
				benchsoc_ethcore_mac_packetizer_source_last_s <= 1'd1;
				benchsoc_ethcore_mac_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_ethcore_mac_packetizer_source_ready & benchsoc_ethcore_mac_packetizer_source_valid)) begin
					benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value0 <= benchsoc_ethcore_mac_packetizer_new_last_be;
					benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value_ce0 <= 1'd1;
					liteethmac_fsm1_next_state0 <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_mac_packetizer_in_data_copy) begin
					benchsoc_ethcore_mac_packetizer_source_last_b <= benchsoc_ethcore_mac_packetizer_sink_last;
					benchsoc_ethcore_mac_packetizer_source_last_s <= 1'd1;
					benchsoc_ethcore_mac_packetizer_source_payload_last_be <= benchsoc_ethcore_mac_packetizer_new_last_be;
				end
			end
			if (benchsoc_ethcore_mac_packetizer_in_data_copy) begin
				benchsoc_ethcore_mac_packetizer_sink_ready <= benchsoc_ethcore_mac_packetizer_source_ready;
			end else begin
				if (benchsoc_ethcore_mac_packetizer_is_ongoing2) begin
					benchsoc_ethcore_mac_packetizer_sink_ready <= (~benchsoc_ethcore_mac_packetizer_sink_valid);
				end
			end
		end
	endcase
end
assign benchsoc_ethcore_mac_depacketizer_header = benchsoc_ethcore_mac_depacketizer_sr;
assign benchsoc_ethcore_mac_depacketizer_source_payload_ethernet_type = {rhs_slice_proxy1[7:0], rhs_slice_proxy0[15:8]};
assign benchsoc_ethcore_mac_depacketizer_source_payload_sender_mac = {rhs_slice_proxy7[7:0], rhs_slice_proxy6[15:8], rhs_slice_proxy5[23:16], rhs_slice_proxy4[31:24], rhs_slice_proxy3[39:32], rhs_slice_proxy2[47:40]};
assign benchsoc_ethcore_mac_depacketizer_source_payload_target_mac = {rhs_slice_proxy13[7:0], rhs_slice_proxy12[15:8], rhs_slice_proxy11[23:16], rhs_slice_proxy10[31:24], rhs_slice_proxy9[39:32], rhs_slice_proxy8[47:40]};
assign benchsoc_ethcore_mac_depacketizer_source_payload_error = benchsoc_ethcore_mac_depacketizer_sink_payload_error;
assign benchsoc_ethcore_mac_depacketizer_sink_last_be = benchsoc_ethcore_mac_depacketizer_sink_last;
assign benchsoc_ethcore_mac_depacketizer_new_last_be = {benchsoc_ethcore_mac_depacketizer_sink_last_be};
assign benchsoc_ethcore_mac_depacketizer_is_in_copy = (benchsoc_ethcore_mac_depacketizer_is_ongoing0 | benchsoc_ethcore_mac_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_mac_depacketizer_source_last <= 1'd0;
	if (benchsoc_ethcore_mac_depacketizer_source_last_s) begin
		benchsoc_ethcore_mac_depacketizer_source_last <= benchsoc_ethcore_mac_depacketizer_source_last_b;
	end else begin
		benchsoc_ethcore_mac_depacketizer_source_last <= benchsoc_ethcore_mac_depacketizer_source_last_a;
	end
end
always @(*) begin
	benchsoc_ethcore_mac_depacketizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_sink_ready <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_is_ongoing3 <= 1'd0;
	liteethmac_fsm1_next_state1 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_source_valid <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_source_last_a <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value1 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_source_last_b <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_source_last_s <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_mac_depacketizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_sr_shift <= 1'd0;
	liteethmac_fsm0_next_state1 <= 2'd0;
	benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value2 <= 4'd0;
	benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value_ce3 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value_ce2 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value3 <= 1'd0;
	benchsoc_ethcore_mac_depacketizer_is_ongoing0 <= 1'd0;
	liteethmac_fsm0_next_state1 <= liteethmac_fsm0_state1;
	case (liteethmac_fsm0_state1)
		1'd1: begin
			benchsoc_ethcore_mac_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_ethcore_mac_depacketizer_sink_valid) begin
				benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value2 <= (benchsoc_ethcore_mac_depacketizer_count + 1'd1);
				benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value_ce2 <= 1'd1;
				benchsoc_ethcore_mac_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_mac_depacketizer_count == 4'd13)) begin
					liteethmac_fsm0_next_state1 <= 2'd2;
					benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value2 <= (benchsoc_ethcore_mac_depacketizer_count + 1'd1);
					benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value_ce2 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_mac_depacketizer_source_valid <= (benchsoc_ethcore_mac_depacketizer_sink_valid | benchsoc_ethcore_mac_depacketizer_sink_d_last);
			benchsoc_ethcore_mac_depacketizer_source_last_a <= (benchsoc_ethcore_mac_depacketizer_sink_last | benchsoc_ethcore_mac_depacketizer_sink_d_last);
			benchsoc_ethcore_mac_depacketizer_sink_ready <= benchsoc_ethcore_mac_depacketizer_source_ready;
			benchsoc_ethcore_mac_depacketizer_source_payload_data <= benchsoc_ethcore_mac_depacketizer_sink_payload_data;
			if ((benchsoc_ethcore_mac_depacketizer_source_valid & benchsoc_ethcore_mac_depacketizer_source_ready)) begin
				if (benchsoc_ethcore_mac_depacketizer_source_last) begin
					liteethmac_fsm0_next_state1 <= 1'd0;
				end
			end
			benchsoc_ethcore_mac_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_ethcore_mac_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_mac_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_ethcore_mac_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_mac_depacketizer_sink_ready <= 1'd1;
			benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value2 <= 1'd1;
			benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value_ce2 <= 1'd1;
			if (benchsoc_ethcore_mac_depacketizer_sink_valid) begin
				benchsoc_ethcore_mac_depacketizer_sr_shift <= 1'd1;
				benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value3 <= 1'd1;
				benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value_ce3 <= 1'd1;
				if (1'd0) begin
					liteethmac_fsm0_next_state1 <= 2'd2;
				end else begin
					liteethmac_fsm0_next_state1 <= 1'd1;
				end
			end
		end
	endcase
	liteethmac_fsm1_next_state1 <= liteethmac_fsm1_state1;
	case (liteethmac_fsm1_state1)
		1'd1: begin
			benchsoc_ethcore_mac_depacketizer_source_last_b <= 1'd1;
			benchsoc_ethcore_mac_depacketizer_source_last_s <= 1'd1;
			benchsoc_ethcore_mac_depacketizer_source_payload_last_be <= benchsoc_ethcore_mac_depacketizer_delayed_last_be;
			benchsoc_ethcore_mac_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_ethcore_mac_depacketizer_source_ready & benchsoc_ethcore_mac_depacketizer_source_valid)) begin
				liteethmac_fsm1_next_state1 <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_mac_depacketizer_sink_valid & benchsoc_ethcore_mac_depacketizer_sink_last) & (benchsoc_ethcore_mac_depacketizer_sink_last_be > benchsoc_ethcore_mac_depacketizer_new_last_be))) begin
				benchsoc_ethcore_mac_depacketizer_source_last_b <= 1'd0;
				benchsoc_ethcore_mac_depacketizer_source_last_s <= 1'd1;
				benchsoc_ethcore_mac_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_ethcore_mac_depacketizer_source_ready & benchsoc_ethcore_mac_depacketizer_source_valid) | ((~benchsoc_ethcore_mac_depacketizer_was_in_copy) & benchsoc_ethcore_mac_depacketizer_is_in_copy))) begin
					benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value1 <= benchsoc_ethcore_mac_depacketizer_new_last_be;
					benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value_ce1 <= 1'd1;
					liteethmac_fsm1_next_state1 <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_mac_depacketizer_sink_last) begin
					benchsoc_ethcore_mac_depacketizer_source_last_b <= 1'd1;
					benchsoc_ethcore_mac_depacketizer_source_last_s <= 1'd1;
					benchsoc_ethcore_mac_depacketizer_source_payload_last_be <= benchsoc_ethcore_mac_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_ethcore_mac_depacketizer_is_ongoing2 | (benchsoc_ethcore_mac_depacketizer_is_ongoing3 & (~benchsoc_ethcore_mac_depacketizer_fsm_from_idle)))) begin
				benchsoc_ethcore_mac_depacketizer_sink_ready <= benchsoc_ethcore_mac_depacketizer_source_ready;
			end else begin
				benchsoc_ethcore_mac_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_arp_table_sink_valid = benchsoc_ethcore_arp_rx_source_source_valid;
assign benchsoc_ethcore_arp_rx_source_source_ready = benchsoc_ethcore_arp_table_sink_ready;
assign benchsoc_ethcore_arp_table_sink_first = benchsoc_ethcore_arp_rx_source_source_first;
assign benchsoc_ethcore_arp_table_sink_last = benchsoc_ethcore_arp_rx_source_source_last;
assign benchsoc_ethcore_arp_table_sink_payload_reply = benchsoc_ethcore_arp_rx_source_source_payload_reply;
assign benchsoc_ethcore_arp_table_sink_payload_request = benchsoc_ethcore_arp_rx_source_source_payload_request;
assign benchsoc_ethcore_arp_table_sink_payload_ip_address = benchsoc_ethcore_arp_rx_source_source_payload_ip_address;
assign benchsoc_ethcore_arp_table_sink_payload_mac_address = benchsoc_ethcore_arp_rx_source_source_payload_mac_address;
assign benchsoc_ethcore_arp_tx_sink_sink_valid = benchsoc_ethcore_arp_table_source_valid;
assign benchsoc_ethcore_arp_table_source_ready = benchsoc_ethcore_arp_tx_sink_sink_ready;
assign benchsoc_ethcore_arp_tx_sink_sink_first = benchsoc_ethcore_arp_table_source_first;
assign benchsoc_ethcore_arp_tx_sink_sink_last = benchsoc_ethcore_arp_table_source_last;
assign benchsoc_ethcore_arp_tx_sink_sink_payload_reply = benchsoc_ethcore_arp_table_source_payload_reply;
assign benchsoc_ethcore_arp_tx_sink_sink_payload_request = benchsoc_ethcore_arp_table_source_payload_request;
assign benchsoc_ethcore_arp_tx_sink_sink_payload_ip_address = benchsoc_ethcore_arp_table_source_payload_ip_address;
assign benchsoc_ethcore_arp_tx_sink_sink_payload_mac_address = benchsoc_ethcore_arp_table_source_payload_mac_address;
assign benchsoc_ethcore_arp_mac_port_sink_valid = benchsoc_ethcore_arp_tx_source_source_valid;
assign benchsoc_ethcore_arp_tx_source_source_ready = benchsoc_ethcore_arp_mac_port_sink_ready;
assign benchsoc_ethcore_arp_mac_port_sink_first = benchsoc_ethcore_arp_tx_source_source_first;
assign benchsoc_ethcore_arp_mac_port_sink_last = benchsoc_ethcore_arp_tx_source_source_last;
assign benchsoc_ethcore_arp_mac_port_sink_payload_ethernet_type = benchsoc_ethcore_arp_tx_source_source_payload_ethernet_type;
assign benchsoc_ethcore_arp_mac_port_sink_payload_sender_mac = benchsoc_ethcore_arp_tx_source_source_payload_sender_mac;
assign benchsoc_ethcore_arp_mac_port_sink_payload_target_mac = benchsoc_ethcore_arp_tx_source_source_payload_target_mac;
assign benchsoc_ethcore_arp_mac_port_sink_payload_data = benchsoc_ethcore_arp_tx_source_source_payload_data;
assign benchsoc_ethcore_arp_mac_port_sink_payload_last_be = benchsoc_ethcore_arp_tx_source_source_payload_last_be;
assign benchsoc_ethcore_arp_mac_port_sink_payload_error = benchsoc_ethcore_arp_tx_source_source_payload_error;
assign benchsoc_ethcore_arp_rx_sink_sink_valid = benchsoc_ethcore_arp_mac_port_source_valid;
assign benchsoc_ethcore_arp_mac_port_source_ready = benchsoc_ethcore_arp_rx_sink_sink_ready;
assign benchsoc_ethcore_arp_rx_sink_sink_first = benchsoc_ethcore_arp_mac_port_source_first;
assign benchsoc_ethcore_arp_rx_sink_sink_last = benchsoc_ethcore_arp_mac_port_source_last;
assign benchsoc_ethcore_arp_rx_sink_sink_payload_ethernet_type = benchsoc_ethcore_arp_mac_port_source_payload_ethernet_type;
assign benchsoc_ethcore_arp_rx_sink_sink_payload_sender_mac = benchsoc_ethcore_arp_mac_port_source_payload_sender_mac;
assign benchsoc_ethcore_arp_rx_sink_sink_payload_target_mac = benchsoc_ethcore_arp_mac_port_source_payload_target_mac;
assign benchsoc_ethcore_arp_rx_sink_sink_payload_data = benchsoc_ethcore_arp_mac_port_source_payload_data;
assign benchsoc_ethcore_arp_rx_sink_sink_payload_last_be = benchsoc_ethcore_arp_mac_port_source_payload_last_be;
assign benchsoc_ethcore_arp_rx_sink_sink_payload_error = benchsoc_ethcore_arp_mac_port_source_payload_error;
assign benchsoc_ethcore_arp_tx_packetizer_sink_last = (benchsoc_ethcore_arp_tx_counter == 6'd45);
always @(*) begin
	benchsoc_ethcore_arp_tx_packetizer_sink_payload_last_be <= 1'd0;
	if (benchsoc_ethcore_arp_tx_packetizer_sink_last) begin
		benchsoc_ethcore_arp_tx_packetizer_sink_payload_last_be <= 1'd1;
	end
end
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_hwtype = 1'd1;
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_proto = 12'd2048;
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_hwsize = 3'd6;
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_protosize = 3'd4;
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac = 45'd18566422200320;
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_ip = 32'd3232236082;
assign benchsoc_ethcore_arp_tx_packetizer_sink_param_target_ip = benchsoc_ethcore_arp_tx_sink_sink_payload_ip_address;
always @(*) begin
	benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac <= 48'd0;
	benchsoc_ethcore_arp_tx_packetizer_sink_param_opcode <= 16'd0;
	if (benchsoc_ethcore_arp_tx_sink_sink_payload_reply) begin
		benchsoc_ethcore_arp_tx_packetizer_sink_param_opcode <= 2'd2;
		benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac <= benchsoc_ethcore_arp_tx_sink_sink_payload_mac_address;
	end else begin
		if (benchsoc_ethcore_arp_tx_sink_sink_payload_request) begin
			benchsoc_ethcore_arp_tx_packetizer_sink_param_opcode <= 1'd1;
			benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac <= 48'd281474976710655;
		end
	end
end
assign benchsoc_ethcore_arp_tx_source_source_first = benchsoc_ethcore_arp_tx_packetizer_source_first;
assign benchsoc_ethcore_arp_tx_source_source_last = benchsoc_ethcore_arp_tx_packetizer_source_last;
assign benchsoc_ethcore_arp_tx_source_source_payload_data = benchsoc_ethcore_arp_tx_packetizer_source_payload_data;
assign benchsoc_ethcore_arp_tx_source_source_payload_last_be = benchsoc_ethcore_arp_tx_packetizer_source_payload_last_be;
assign benchsoc_ethcore_arp_tx_source_source_payload_error = benchsoc_ethcore_arp_tx_packetizer_source_payload_error;
always @(*) begin
	benchsoc_ethcore_arp_tx_source_source_payload_target_mac <= 48'd0;
	benchsoc_ethcore_arp_tx_source_source_payload_target_mac <= benchsoc_ethcore_arp_tx_packetizer_source_payload_target_mac;
	benchsoc_ethcore_arp_tx_source_source_payload_target_mac <= benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac;
end
always @(*) begin
	benchsoc_ethcore_arp_tx_source_source_payload_sender_mac <= 48'd0;
	benchsoc_ethcore_arp_tx_source_source_payload_sender_mac <= benchsoc_ethcore_arp_tx_packetizer_source_payload_sender_mac;
	benchsoc_ethcore_arp_tx_source_source_payload_sender_mac <= 45'd18566422200320;
end
always @(*) begin
	benchsoc_ethcore_arp_tx_source_source_payload_ethernet_type <= 16'd0;
	benchsoc_ethcore_arp_tx_source_source_payload_ethernet_type <= benchsoc_ethcore_arp_tx_packetizer_source_payload_ethernet_type;
	benchsoc_ethcore_arp_tx_source_source_payload_ethernet_type <= 12'd2054;
end
always @(*) begin
	benchsoc_ethcore_arp_tx_packetizer_header <= 224'd0;
	benchsoc_ethcore_arp_tx_packetizer_header[39:32] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_hwsize[7:0]};
	benchsoc_ethcore_arp_tx_packetizer_header[15:0] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_hwtype[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_hwtype[15:8]};
	benchsoc_ethcore_arp_tx_packetizer_header[63:48] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_opcode[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_opcode[15:8]};
	benchsoc_ethcore_arp_tx_packetizer_header[31:16] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_proto[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_proto[15:8]};
	benchsoc_ethcore_arp_tx_packetizer_header[47:40] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_protosize[7:0]};
	benchsoc_ethcore_arp_tx_packetizer_header[143:112] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_ip[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_ip[15:8], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_ip[23:16], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_ip[31:24]};
	benchsoc_ethcore_arp_tx_packetizer_header[111:64] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac[15:8], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac[23:16], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac[31:24], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac[39:32], benchsoc_ethcore_arp_tx_packetizer_sink_param_sender_mac[47:40]};
	benchsoc_ethcore_arp_tx_packetizer_header[223:192] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_target_ip[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_ip[15:8], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_ip[23:16], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_ip[31:24]};
	benchsoc_ethcore_arp_tx_packetizer_header[191:144] <= {benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac[7:0], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac[15:8], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac[23:16], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac[31:24], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac[39:32], benchsoc_ethcore_arp_tx_packetizer_sink_param_target_mac[47:40]};
end
assign benchsoc_ethcore_arp_tx_packetizer_sink_last_be = benchsoc_ethcore_arp_tx_packetizer_sink_last;
assign benchsoc_ethcore_arp_tx_packetizer_new_last_be = {benchsoc_ethcore_arp_tx_packetizer_sink_last_be};
assign benchsoc_ethcore_arp_tx_packetizer_in_data_copy = (benchsoc_ethcore_arp_tx_packetizer_is_ongoing0 | benchsoc_ethcore_arp_tx_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_arp_tx_packetizer_source_last <= 1'd0;
	if (benchsoc_ethcore_arp_tx_packetizer_source_last_s) begin
		benchsoc_ethcore_arp_tx_packetizer_source_last <= benchsoc_ethcore_arp_tx_packetizer_source_last_b;
	end else begin
		benchsoc_ethcore_arp_tx_packetizer_source_last <= benchsoc_ethcore_arp_tx_packetizer_source_last_a;
	end
end
assign benchsoc_ethcore_arp_tx_packetizer_source_payload_error = benchsoc_ethcore_arp_tx_packetizer_sink_payload_error;
always @(*) begin
	benchsoc_ethcore_arp_tx_packetizer_sink_ready <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_last_a <= 1'd0;
	liteetharptx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_last_b <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_last_s <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value0 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_sr_load <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_valid <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value1 <= 1'd0;
	liteetharptx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value0 <= 5'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_sr_shift <= 1'd0;
	liteetharptx_fsm0_next_state <= liteetharptx_fsm0_state;
	case (liteetharptx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_arp_tx_packetizer_source_valid <= 1'd1;
			benchsoc_ethcore_arp_tx_packetizer_source_last_a <= 1'd0;
			benchsoc_ethcore_arp_tx_packetizer_source_payload_data <= benchsoc_ethcore_arp_tx_packetizer_sr[223:8];
			if ((benchsoc_ethcore_arp_tx_packetizer_source_valid & benchsoc_ethcore_arp_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_arp_tx_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_arp_tx_packetizer_count == 5'd27)) begin
					benchsoc_ethcore_arp_tx_packetizer_sr_shift <= 1'd0;
					liteetharptx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value0 <= (benchsoc_ethcore_arp_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value_ce0 <= 1'd1;
				end else begin
					benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value0 <= (benchsoc_ethcore_arp_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value_ce0 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_arp_tx_packetizer_source_valid <= benchsoc_ethcore_arp_tx_packetizer_sink_valid;
			benchsoc_ethcore_arp_tx_packetizer_source_last_a <= benchsoc_ethcore_arp_tx_packetizer_sink_last;
			benchsoc_ethcore_arp_tx_packetizer_source_payload_data <= benchsoc_ethcore_arp_tx_packetizer_sink_payload_data;
			if ((benchsoc_ethcore_arp_tx_packetizer_source_valid & benchsoc_ethcore_arp_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_arp_tx_packetizer_sink_ready <= 1'd1;
				if (benchsoc_ethcore_arp_tx_packetizer_source_last) begin
					liteetharptx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_arp_tx_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_arp_tx_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_arp_tx_packetizer_sink_ready <= 1'd1;
			benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value0 <= 1'd1;
			benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value_ce0 <= 1'd1;
			if (benchsoc_ethcore_arp_tx_packetizer_sink_valid) begin
				benchsoc_ethcore_arp_tx_packetizer_sink_ready <= 1'd0;
				benchsoc_ethcore_arp_tx_packetizer_source_valid <= 1'd1;
				benchsoc_ethcore_arp_tx_packetizer_source_last_a <= 1'd0;
				benchsoc_ethcore_arp_tx_packetizer_source_payload_data <= benchsoc_ethcore_arp_tx_packetizer_header[7:0];
				if ((benchsoc_ethcore_arp_tx_packetizer_source_valid & benchsoc_ethcore_arp_tx_packetizer_source_ready)) begin
					benchsoc_ethcore_arp_tx_packetizer_sr_load <= 1'd1;
					benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value1 <= 1'd1;
					benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value_ce1 <= 1'd1;
					if (1'd0) begin
						liteetharptx_fsm0_next_state <= 2'd2;
					end else begin
						liteetharptx_fsm0_next_state <= 1'd1;
					end
				end
			end
			benchsoc_ethcore_arp_tx_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	liteetharptx_fsm1_next_state <= liteetharptx_fsm1_state;
	case (liteetharptx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_arp_tx_packetizer_source_last_b <= 1'd1;
			benchsoc_ethcore_arp_tx_packetizer_source_last_s <= 1'd1;
			benchsoc_ethcore_arp_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_arp_tx_packetizer_delayed_last_be;
			benchsoc_ethcore_arp_tx_packetizer_sink_ready <= 1'd0;
			if (benchsoc_ethcore_arp_tx_packetizer_source_ready) begin
				liteetharptx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_arp_tx_packetizer_in_data_copy & benchsoc_ethcore_arp_tx_packetizer_sink_last) & (benchsoc_ethcore_arp_tx_packetizer_sink_last_be > benchsoc_ethcore_arp_tx_packetizer_new_last_be))) begin
				benchsoc_ethcore_arp_tx_packetizer_source_last_b <= 1'd0;
				benchsoc_ethcore_arp_tx_packetizer_source_last_s <= 1'd1;
				benchsoc_ethcore_arp_tx_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_ethcore_arp_tx_packetizer_source_ready & benchsoc_ethcore_arp_tx_packetizer_source_valid)) begin
					benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value0 <= benchsoc_ethcore_arp_tx_packetizer_new_last_be;
					benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value_ce0 <= 1'd1;
					liteetharptx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_arp_tx_packetizer_in_data_copy) begin
					benchsoc_ethcore_arp_tx_packetizer_source_last_b <= benchsoc_ethcore_arp_tx_packetizer_sink_last;
					benchsoc_ethcore_arp_tx_packetizer_source_last_s <= 1'd1;
					benchsoc_ethcore_arp_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_arp_tx_packetizer_new_last_be;
				end
			end
			if (benchsoc_ethcore_arp_tx_packetizer_in_data_copy) begin
				benchsoc_ethcore_arp_tx_packetizer_sink_ready <= benchsoc_ethcore_arp_tx_packetizer_source_ready;
			end else begin
				if (benchsoc_ethcore_arp_tx_packetizer_is_ongoing2) begin
					benchsoc_ethcore_arp_tx_packetizer_sink_ready <= (~benchsoc_ethcore_arp_tx_packetizer_sink_valid);
				end
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_arp_tx_sink_sink_ready <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_sink_valid <= 1'd0;
	benchsoc_ethcore_arp_tx_packetizer_source_ready <= 1'd0;
	liteetharptx_next_state <= 1'd0;
	benchsoc_ethcore_arp_tx_counter_liteetharp_next_value <= 6'd0;
	benchsoc_ethcore_arp_tx_counter_liteetharp_next_value_ce <= 1'd0;
	benchsoc_ethcore_arp_tx_source_source_valid <= 1'd0;
	liteetharptx_next_state <= liteetharptx_state;
	case (liteetharptx_state)
		1'd1: begin
			benchsoc_ethcore_arp_tx_packetizer_sink_valid <= 1'd1;
			benchsoc_ethcore_arp_tx_source_source_valid <= benchsoc_ethcore_arp_tx_packetizer_source_valid;
			benchsoc_ethcore_arp_tx_packetizer_source_ready <= benchsoc_ethcore_arp_tx_source_source_ready;
			if ((benchsoc_ethcore_arp_tx_source_source_valid & benchsoc_ethcore_arp_tx_source_source_ready)) begin
				benchsoc_ethcore_arp_tx_counter_liteetharp_next_value <= (benchsoc_ethcore_arp_tx_counter + 1'd1);
				benchsoc_ethcore_arp_tx_counter_liteetharp_next_value_ce <= 1'd1;
				if (benchsoc_ethcore_arp_tx_source_source_last) begin
					benchsoc_ethcore_arp_tx_sink_sink_ready <= 1'd1;
					liteetharptx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			benchsoc_ethcore_arp_tx_counter_liteetharp_next_value <= 1'd0;
			benchsoc_ethcore_arp_tx_counter_liteetharp_next_value_ce <= 1'd1;
			if (benchsoc_ethcore_arp_tx_sink_sink_valid) begin
				liteetharptx_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_arp_rx_depacketizer_sink_valid = benchsoc_ethcore_arp_rx_sink_sink_valid;
assign benchsoc_ethcore_arp_rx_sink_sink_ready = benchsoc_ethcore_arp_rx_depacketizer_sink_ready;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_first = benchsoc_ethcore_arp_rx_sink_sink_first;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_last = benchsoc_ethcore_arp_rx_sink_sink_last;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_payload_ethernet_type = benchsoc_ethcore_arp_rx_sink_sink_payload_ethernet_type;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_payload_sender_mac = benchsoc_ethcore_arp_rx_sink_sink_payload_sender_mac;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_payload_target_mac = benchsoc_ethcore_arp_rx_sink_sink_payload_target_mac;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_payload_data = benchsoc_ethcore_arp_rx_sink_sink_payload_data;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_payload_last_be = benchsoc_ethcore_arp_rx_sink_sink_payload_last_be;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_payload_error = benchsoc_ethcore_arp_rx_sink_sink_payload_error;
always @(*) begin
	benchsoc_ethcore_arp_rx_reply <= 1'd0;
	benchsoc_ethcore_arp_rx_request <= 1'd0;
	case (benchsoc_ethcore_arp_rx_depacketizer_source_param_opcode)
		1'd1: begin
			benchsoc_ethcore_arp_rx_request <= 1'd1;
		end
		2'd2: begin
			benchsoc_ethcore_arp_rx_reply <= 1'd1;
		end
		default: begin
		end
	endcase
end
assign benchsoc_ethcore_arp_rx_source_source_payload_ip_address = benchsoc_ethcore_arp_rx_depacketizer_source_param_sender_ip;
assign benchsoc_ethcore_arp_rx_source_source_payload_mac_address = benchsoc_ethcore_arp_rx_depacketizer_source_param_sender_mac;
assign benchsoc_ethcore_arp_rx_depacketizer_header = benchsoc_ethcore_arp_rx_depacketizer_sr;
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_hwsize = {rhs_slice_proxy14[7:0]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_hwtype = {rhs_slice_proxy16[7:0], rhs_slice_proxy15[15:8]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_opcode = {rhs_slice_proxy18[7:0], rhs_slice_proxy17[15:8]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_proto = {rhs_slice_proxy20[7:0], rhs_slice_proxy19[15:8]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_protosize = {rhs_slice_proxy21[7:0]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_sender_ip = {rhs_slice_proxy25[7:0], rhs_slice_proxy24[15:8], rhs_slice_proxy23[23:16], rhs_slice_proxy22[31:24]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_sender_mac = {rhs_slice_proxy31[7:0], rhs_slice_proxy30[15:8], rhs_slice_proxy29[23:16], rhs_slice_proxy28[31:24], rhs_slice_proxy27[39:32], rhs_slice_proxy26[47:40]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_target_ip = {rhs_slice_proxy35[7:0], rhs_slice_proxy34[15:8], rhs_slice_proxy33[23:16], rhs_slice_proxy32[31:24]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_param_target_mac = {rhs_slice_proxy41[7:0], rhs_slice_proxy40[15:8], rhs_slice_proxy39[23:16], rhs_slice_proxy38[31:24], rhs_slice_proxy37[39:32], rhs_slice_proxy36[47:40]};
assign benchsoc_ethcore_arp_rx_depacketizer_source_payload_error = benchsoc_ethcore_arp_rx_depacketizer_sink_payload_error;
assign benchsoc_ethcore_arp_rx_depacketizer_sink_last_be = benchsoc_ethcore_arp_rx_depacketizer_sink_last;
assign benchsoc_ethcore_arp_rx_depacketizer_new_last_be = {benchsoc_ethcore_arp_rx_depacketizer_sink_last_be};
assign benchsoc_ethcore_arp_rx_depacketizer_is_in_copy = (benchsoc_ethcore_arp_rx_depacketizer_is_ongoing0 | benchsoc_ethcore_arp_rx_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_arp_rx_depacketizer_source_last <= 1'd0;
	if (benchsoc_ethcore_arp_rx_depacketizer_source_last_s) begin
		benchsoc_ethcore_arp_rx_depacketizer_source_last <= benchsoc_ethcore_arp_rx_depacketizer_source_last_b;
	end else begin
		benchsoc_ethcore_arp_rx_depacketizer_source_last <= benchsoc_ethcore_arp_rx_depacketizer_source_last_a;
	end
end
always @(*) begin
	benchsoc_ethcore_arp_rx_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value3 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_is_ongoing3 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value_ce3 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_last_a <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_last_b <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_last_s <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_valid <= 1'd0;
	liteetharprx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value1 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_arp_rx_depacketizer_sr_shift <= 1'd0;
	liteetharprx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value2 <= 5'd0;
	benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value_ce2 <= 1'd0;
	liteetharprx_fsm0_next_state <= liteetharprx_fsm0_state;
	case (liteetharprx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_ethcore_arp_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value2 <= (benchsoc_ethcore_arp_rx_depacketizer_count + 1'd1);
				benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value_ce2 <= 1'd1;
				benchsoc_ethcore_arp_rx_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_arp_rx_depacketizer_count == 5'd27)) begin
					liteetharprx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value2 <= (benchsoc_ethcore_arp_rx_depacketizer_count + 1'd1);
					benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value_ce2 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_arp_rx_depacketizer_source_valid <= (benchsoc_ethcore_arp_rx_depacketizer_sink_valid | benchsoc_ethcore_arp_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_arp_rx_depacketizer_source_last_a <= (benchsoc_ethcore_arp_rx_depacketizer_sink_last | benchsoc_ethcore_arp_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= benchsoc_ethcore_arp_rx_depacketizer_source_ready;
			benchsoc_ethcore_arp_rx_depacketizer_source_payload_data <= benchsoc_ethcore_arp_rx_depacketizer_sink_payload_data;
			if ((benchsoc_ethcore_arp_rx_depacketizer_source_valid & benchsoc_ethcore_arp_rx_depacketizer_source_ready)) begin
				if (benchsoc_ethcore_arp_rx_depacketizer_source_last) begin
					liteetharprx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_arp_rx_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_ethcore_arp_rx_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_arp_rx_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_ethcore_arp_rx_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= 1'd1;
			benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value2 <= 1'd1;
			benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value_ce2 <= 1'd1;
			if (benchsoc_ethcore_arp_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_arp_rx_depacketizer_sr_shift <= 1'd1;
				benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value3 <= 1'd1;
				benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value_ce3 <= 1'd1;
				if (1'd0) begin
					liteetharprx_fsm0_next_state <= 2'd2;
				end else begin
					liteetharprx_fsm0_next_state <= 1'd1;
				end
			end
		end
	endcase
	liteetharprx_fsm1_next_state <= liteetharprx_fsm1_state;
	case (liteetharprx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_arp_rx_depacketizer_source_last_b <= 1'd1;
			benchsoc_ethcore_arp_rx_depacketizer_source_last_s <= 1'd1;
			benchsoc_ethcore_arp_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be;
			benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_ethcore_arp_rx_depacketizer_source_ready & benchsoc_ethcore_arp_rx_depacketizer_source_valid)) begin
				liteetharprx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_arp_rx_depacketizer_sink_valid & benchsoc_ethcore_arp_rx_depacketizer_sink_last) & (benchsoc_ethcore_arp_rx_depacketizer_sink_last_be > benchsoc_ethcore_arp_rx_depacketizer_new_last_be))) begin
				benchsoc_ethcore_arp_rx_depacketizer_source_last_b <= 1'd0;
				benchsoc_ethcore_arp_rx_depacketizer_source_last_s <= 1'd1;
				benchsoc_ethcore_arp_rx_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_ethcore_arp_rx_depacketizer_source_ready & benchsoc_ethcore_arp_rx_depacketizer_source_valid) | ((~benchsoc_ethcore_arp_rx_depacketizer_was_in_copy) & benchsoc_ethcore_arp_rx_depacketizer_is_in_copy))) begin
					benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value1 <= benchsoc_ethcore_arp_rx_depacketizer_new_last_be;
					benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value_ce1 <= 1'd1;
					liteetharprx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_arp_rx_depacketizer_sink_last) begin
					benchsoc_ethcore_arp_rx_depacketizer_source_last_b <= 1'd1;
					benchsoc_ethcore_arp_rx_depacketizer_source_last_s <= 1'd1;
					benchsoc_ethcore_arp_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_arp_rx_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_ethcore_arp_rx_depacketizer_is_ongoing2 | (benchsoc_ethcore_arp_rx_depacketizer_is_ongoing3 & (~benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle)))) begin
				benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= benchsoc_ethcore_arp_rx_depacketizer_source_ready;
			end else begin
				benchsoc_ethcore_arp_rx_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_arp_rx_source_source_payload_request <= 1'd0;
	benchsoc_ethcore_arp_rx_source_source_valid <= 1'd0;
	liteetharprx_next_state <= 2'd0;
	benchsoc_ethcore_arp_rx_depacketizer_source_ready <= 1'd0;
	benchsoc_ethcore_arp_rx_source_source_payload_reply <= 1'd0;
	liteetharprx_next_state <= liteetharprx_state;
	case (liteetharprx_state)
		1'd1: begin
			if (benchsoc_ethcore_arp_rx_valid) begin
				benchsoc_ethcore_arp_rx_source_source_valid <= 1'd1;
				benchsoc_ethcore_arp_rx_source_source_payload_reply <= benchsoc_ethcore_arp_rx_reply;
				benchsoc_ethcore_arp_rx_source_source_payload_request <= benchsoc_ethcore_arp_rx_request;
			end
			liteetharprx_next_state <= 2'd2;
		end
		2'd2: begin
			benchsoc_ethcore_arp_rx_depacketizer_source_ready <= 1'd1;
			if ((benchsoc_ethcore_arp_rx_depacketizer_source_valid & benchsoc_ethcore_arp_rx_depacketizer_source_last)) begin
				liteetharprx_next_state <= 1'd0;
			end
		end
		default: begin
			benchsoc_ethcore_arp_rx_depacketizer_source_ready <= 1'd1;
			if (benchsoc_ethcore_arp_rx_depacketizer_source_valid) begin
				benchsoc_ethcore_arp_rx_depacketizer_source_ready <= 1'd0;
				liteetharprx_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_arp_table_request_timer_wait = (benchsoc_ethcore_arp_table_request_pending & (~benchsoc_ethcore_arp_table_request_counter_ce));
assign benchsoc_ethcore_arp_table_cached_timer_wait = (~benchsoc_ethcore_arp_table_update);
assign benchsoc_ethcore_arp_table_response_payload_mac_address = benchsoc_ethcore_arp_table_cached_mac_address;
assign benchsoc_ethcore_arp_table_request_timer_done = (benchsoc_ethcore_arp_table_request_timer_count == 1'd0);
assign benchsoc_ethcore_arp_table_cached_timer_done = (benchsoc_ethcore_arp_table_cached_timer_count == 1'd0);
always @(*) begin
	benchsoc_ethcore_arp_table_request_counter_ce <= 1'd0;
	benchsoc_ethcore_arp_table_source_payload_reply <= 1'd0;
	liteetharptable_next_state <= 3'd0;
	benchsoc_ethcore_arp_table_request_pending_clr <= 1'd0;
	benchsoc_ethcore_arp_table_update <= 1'd0;
	benchsoc_ethcore_arp_table_source_payload_ip_address <= 32'd0;
	benchsoc_ethcore_arp_table_source_payload_request <= 1'd0;
	benchsoc_ethcore_arp_table_source_payload_mac_address <= 48'd0;
	benchsoc_ethcore_arp_table_request_pending_set <= 1'd0;
	benchsoc_ethcore_arp_table_request_ip_address_reset <= 1'd0;
	benchsoc_ethcore_arp_table_request_ready <= 1'd0;
	benchsoc_ethcore_arp_table_request_ip_address_update <= 1'd0;
	benchsoc_ethcore_arp_table_response_payload_failed <= 1'd0;
	benchsoc_ethcore_arp_table_response_valid <= 1'd0;
	benchsoc_ethcore_arp_table_source_valid <= 1'd0;
	benchsoc_ethcore_arp_table_request_counter_reset <= 1'd0;
	if ((benchsoc_ethcore_arp_table_request_counter == 3'd7)) begin
		benchsoc_ethcore_arp_table_response_payload_failed <= 1'd1;
		benchsoc_ethcore_arp_table_request_counter_reset <= 1'd1;
		benchsoc_ethcore_arp_table_request_pending_clr <= 1'd1;
	end
	liteetharptable_next_state <= liteetharptable_state;
	case (liteetharptable_state)
		1'd1: begin
			benchsoc_ethcore_arp_table_source_valid <= 1'd1;
			benchsoc_ethcore_arp_table_source_payload_reply <= 1'd1;
			benchsoc_ethcore_arp_table_source_payload_ip_address <= benchsoc_ethcore_arp_table_sink_payload_ip_address;
			benchsoc_ethcore_arp_table_source_payload_mac_address <= benchsoc_ethcore_arp_table_sink_payload_mac_address;
			if (benchsoc_ethcore_arp_table_source_ready) begin
				liteetharptable_next_state <= 1'd0;
			end
		end
		2'd2: begin
			benchsoc_ethcore_arp_table_request_pending_clr <= 1'd1;
			benchsoc_ethcore_arp_table_update <= 1'd1;
			liteetharptable_next_state <= 2'd3;
		end
		2'd3: begin
			if (benchsoc_ethcore_arp_table_cached_valid) begin
				if ((benchsoc_ethcore_arp_table_request_ip_address == benchsoc_ethcore_arp_table_cached_ip_address)) begin
					benchsoc_ethcore_arp_table_request_ip_address_reset <= 1'd1;
					liteetharptable_next_state <= 3'd5;
				end else begin
					if ((benchsoc_ethcore_arp_table_request_payload_ip_address == benchsoc_ethcore_arp_table_cached_ip_address)) begin
						benchsoc_ethcore_arp_table_request_ready <= benchsoc_ethcore_arp_table_request_valid;
						liteetharptable_next_state <= 3'd5;
					end else begin
						benchsoc_ethcore_arp_table_request_ip_address_update <= benchsoc_ethcore_arp_table_request_valid;
						liteetharptable_next_state <= 3'd4;
					end
				end
			end else begin
				benchsoc_ethcore_arp_table_request_ip_address_update <= benchsoc_ethcore_arp_table_request_valid;
				liteetharptable_next_state <= 3'd4;
			end
		end
		3'd4: begin
			benchsoc_ethcore_arp_table_source_valid <= 1'd1;
			benchsoc_ethcore_arp_table_source_payload_request <= 1'd1;
			benchsoc_ethcore_arp_table_source_payload_ip_address <= benchsoc_ethcore_arp_table_request_ip_address;
			if (benchsoc_ethcore_arp_table_source_ready) begin
				benchsoc_ethcore_arp_table_request_counter_reset <= benchsoc_ethcore_arp_table_request_valid;
				benchsoc_ethcore_arp_table_request_counter_ce <= 1'd1;
				benchsoc_ethcore_arp_table_request_pending_set <= 1'd1;
				benchsoc_ethcore_arp_table_request_ready <= 1'd1;
				liteetharptable_next_state <= 1'd0;
			end
		end
		3'd5: begin
			benchsoc_ethcore_arp_table_response_valid <= 1'd1;
			if (benchsoc_ethcore_arp_table_response_ready) begin
				liteetharptable_next_state <= 1'd0;
			end
		end
		default: begin
			if ((benchsoc_ethcore_arp_table_sink_valid & benchsoc_ethcore_arp_table_sink_payload_request)) begin
				liteetharptable_next_state <= 1'd1;
			end else begin
				if (((benchsoc_ethcore_arp_table_sink_valid & benchsoc_ethcore_arp_table_sink_payload_reply) & benchsoc_ethcore_arp_table_request_pending)) begin
					liteetharptable_next_state <= 2'd2;
				end else begin
					if ((benchsoc_ethcore_arp_table_request_counter == 3'd7)) begin
						liteetharptable_next_state <= 3'd5;
					end else begin
						if ((benchsoc_ethcore_arp_table_request_valid | (benchsoc_ethcore_arp_table_request_pending & benchsoc_ethcore_arp_table_request_timer_done))) begin
							liteetharptable_next_state <= 2'd3;
						end
					end
				end
			end
		end
	endcase
end
assign benchsoc_ethcore_ip_mac_port_sink_valid = benchsoc_ethcore_ip_tx_source_source_valid;
assign benchsoc_ethcore_ip_tx_source_source_ready = benchsoc_ethcore_ip_mac_port_sink_ready;
assign benchsoc_ethcore_ip_mac_port_sink_first = benchsoc_ethcore_ip_tx_source_source_first;
assign benchsoc_ethcore_ip_mac_port_sink_last = benchsoc_ethcore_ip_tx_source_source_last;
assign benchsoc_ethcore_ip_mac_port_sink_payload_ethernet_type = benchsoc_ethcore_ip_tx_source_source_payload_ethernet_type;
assign benchsoc_ethcore_ip_mac_port_sink_payload_sender_mac = benchsoc_ethcore_ip_tx_source_source_payload_sender_mac;
assign benchsoc_ethcore_ip_mac_port_sink_payload_target_mac = benchsoc_ethcore_ip_tx_source_source_payload_target_mac;
assign benchsoc_ethcore_ip_mac_port_sink_payload_data = benchsoc_ethcore_ip_tx_source_source_payload_data;
assign benchsoc_ethcore_ip_mac_port_sink_payload_last_be = benchsoc_ethcore_ip_tx_source_source_payload_last_be;
assign benchsoc_ethcore_ip_mac_port_sink_payload_error = benchsoc_ethcore_ip_tx_source_source_payload_error;
assign benchsoc_ethcore_ip_rx_sink_sink_valid = benchsoc_ethcore_ip_mac_port_source_valid;
assign benchsoc_ethcore_ip_mac_port_source_ready = benchsoc_ethcore_ip_rx_sink_sink_ready;
assign benchsoc_ethcore_ip_rx_sink_sink_first = benchsoc_ethcore_ip_mac_port_source_first;
assign benchsoc_ethcore_ip_rx_sink_sink_last = benchsoc_ethcore_ip_mac_port_source_last;
assign benchsoc_ethcore_ip_rx_sink_sink_payload_ethernet_type = benchsoc_ethcore_ip_mac_port_source_payload_ethernet_type;
assign benchsoc_ethcore_ip_rx_sink_sink_payload_sender_mac = benchsoc_ethcore_ip_mac_port_source_payload_sender_mac;
assign benchsoc_ethcore_ip_rx_sink_sink_payload_target_mac = benchsoc_ethcore_ip_mac_port_source_payload_target_mac;
assign benchsoc_ethcore_ip_rx_sink_sink_payload_data = benchsoc_ethcore_ip_mac_port_source_payload_data;
assign benchsoc_ethcore_ip_rx_sink_sink_payload_last_be = benchsoc_ethcore_ip_mac_port_source_payload_last_be;
assign benchsoc_ethcore_ip_rx_sink_sink_payload_error = benchsoc_ethcore_ip_mac_port_source_payload_error;
assign benchsoc_ethcore_ip_tx_sink_sink_valid = benchsoc_ethcore_ip_crossbar_source_valid;
assign benchsoc_ethcore_ip_crossbar_source_ready = benchsoc_ethcore_ip_tx_sink_sink_ready;
assign benchsoc_ethcore_ip_tx_sink_sink_first = benchsoc_ethcore_ip_crossbar_source_first;
assign benchsoc_ethcore_ip_tx_sink_sink_last = benchsoc_ethcore_ip_crossbar_source_last;
assign benchsoc_ethcore_ip_tx_sink_sink_payload_data = benchsoc_ethcore_ip_crossbar_source_payload_data;
assign benchsoc_ethcore_ip_tx_sink_sink_payload_last_be = benchsoc_ethcore_ip_crossbar_source_payload_last_be;
assign benchsoc_ethcore_ip_tx_sink_sink_payload_error = benchsoc_ethcore_ip_crossbar_source_payload_error;
assign benchsoc_ethcore_ip_tx_sink_sink_param_length = benchsoc_ethcore_ip_crossbar_source_param_length;
assign benchsoc_ethcore_ip_tx_sink_sink_param_protocol = benchsoc_ethcore_ip_crossbar_source_param_protocol;
assign benchsoc_ethcore_ip_tx_sink_sink_param_ip_address = benchsoc_ethcore_ip_crossbar_source_param_ip_address;
assign benchsoc_ethcore_ip_crossbar_sink_valid = benchsoc_ethcore_ip_rx_source_source_valid;
assign benchsoc_ethcore_ip_rx_source_source_ready = benchsoc_ethcore_ip_crossbar_sink_ready;
assign benchsoc_ethcore_ip_crossbar_sink_first = benchsoc_ethcore_ip_rx_source_source_first;
assign benchsoc_ethcore_ip_crossbar_sink_last = benchsoc_ethcore_ip_rx_source_source_last;
assign benchsoc_ethcore_ip_crossbar_sink_payload_data = benchsoc_ethcore_ip_rx_source_source_payload_data;
assign benchsoc_ethcore_ip_crossbar_sink_payload_last_be = benchsoc_ethcore_ip_rx_source_source_payload_last_be;
assign benchsoc_ethcore_ip_crossbar_sink_payload_error = benchsoc_ethcore_ip_rx_source_source_payload_error;
assign benchsoc_ethcore_ip_crossbar_sink_param_length = benchsoc_ethcore_ip_rx_source_source_param_length;
assign benchsoc_ethcore_ip_crossbar_sink_param_protocol = benchsoc_ethcore_ip_rx_source_source_param_protocol;
assign benchsoc_ethcore_ip_crossbar_sink_param_ip_address = benchsoc_ethcore_ip_rx_source_source_param_ip_address;
assign benchsoc_ethcore_ip_tx_ce = benchsoc_ethcore_ip_tx_sink_sink_valid;
assign benchsoc_ethcore_ip_tx_reset = ((benchsoc_ethcore_ip_tx_source_source_valid & benchsoc_ethcore_ip_tx_source_source_last) & benchsoc_ethcore_ip_tx_source_source_ready);
assign benchsoc_ethcore_ip_tx_packetizer_sink_last = benchsoc_ethcore_ip_tx_sink_sink_last;
assign benchsoc_ethcore_ip_tx_packetizer_sink_payload_data = benchsoc_ethcore_ip_tx_sink_sink_payload_data;
assign benchsoc_ethcore_ip_tx_packetizer_sink_payload_last_be = benchsoc_ethcore_ip_tx_sink_sink_payload_last_be;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_protocol = benchsoc_ethcore_ip_tx_sink_sink_param_protocol;
assign benchsoc_ethcore_ip_tx_packetizer_sink_valid = (benchsoc_ethcore_ip_tx_sink_sink_valid & benchsoc_ethcore_ip_tx_liteethipv4checksum_done);
assign benchsoc_ethcore_ip_tx_sink_sink_ready = (benchsoc_ethcore_ip_tx_packetizer_sink_ready & benchsoc_ethcore_ip_tx_liteethipv4checksum_done);
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_target_ip = benchsoc_ethcore_ip_tx_sink_sink_param_ip_address;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_total_length = (5'd20 + benchsoc_ethcore_ip_tx_sink_sink_param_length);
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_version = 3'd4;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_ihl = 3'd5;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_identification = 1'd0;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_ttl = 8'd128;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_sender_ip = 32'd3232236082;
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_header = benchsoc_ethcore_ip_tx_packetizer_header;
assign benchsoc_ethcore_ip_tx_packetizer_sink_param_checksum = benchsoc_ethcore_ip_tx_liteethipv4checksum_value;
assign benchsoc_ethcore_arp_table_request_payload_ip_address = benchsoc_ethcore_ip_tx_sink_sink_param_ip_address;
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next0 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[15:0]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next1 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next0 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[31:16]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next2 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next1 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[47:32]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next3 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next2 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[63:48]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next4 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next3 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[79:64]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next5 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next4 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[111:96]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next6 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next5 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[127:112]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next7 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next6 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[143:128]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next8 = (benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next7 + benchsoc_ethcore_ip_tx_liteethipv4checksum_header[159:144]);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_value = (~{benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next8[7:0], benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next8[15:8]});
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_counter_ce = (~benchsoc_ethcore_ip_tx_liteethipv4checksum_done);
assign benchsoc_ethcore_ip_tx_liteethipv4checksum_done = (benchsoc_ethcore_ip_tx_liteethipv4checksum_counter == 4'd9);
always @(*) begin
	benchsoc_ethcore_ip_tx_packetizer_header <= 160'd0;
	benchsoc_ethcore_ip_tx_packetizer_header[95:80] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_checksum[7:0], benchsoc_ethcore_ip_tx_packetizer_sink_param_checksum[15:8]};
	benchsoc_ethcore_ip_tx_packetizer_header[47:32] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_identification[7:0], benchsoc_ethcore_ip_tx_packetizer_sink_param_identification[15:8]};
	benchsoc_ethcore_ip_tx_packetizer_header[3:0] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_ihl[3:0]};
	benchsoc_ethcore_ip_tx_packetizer_header[79:72] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_protocol[7:0]};
	benchsoc_ethcore_ip_tx_packetizer_header[127:96] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_sender_ip[7:0], benchsoc_ethcore_ip_tx_packetizer_sink_param_sender_ip[15:8], benchsoc_ethcore_ip_tx_packetizer_sink_param_sender_ip[23:16], benchsoc_ethcore_ip_tx_packetizer_sink_param_sender_ip[31:24]};
	benchsoc_ethcore_ip_tx_packetizer_header[159:128] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_target_ip[7:0], benchsoc_ethcore_ip_tx_packetizer_sink_param_target_ip[15:8], benchsoc_ethcore_ip_tx_packetizer_sink_param_target_ip[23:16], benchsoc_ethcore_ip_tx_packetizer_sink_param_target_ip[31:24]};
	benchsoc_ethcore_ip_tx_packetizer_header[31:16] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_total_length[7:0], benchsoc_ethcore_ip_tx_packetizer_sink_param_total_length[15:8]};
	benchsoc_ethcore_ip_tx_packetizer_header[71:64] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_ttl[7:0]};
	benchsoc_ethcore_ip_tx_packetizer_header[7:4] <= {benchsoc_ethcore_ip_tx_packetizer_sink_param_version[3:0]};
end
assign benchsoc_ethcore_ip_tx_packetizer_sink_last_be = benchsoc_ethcore_ip_tx_packetizer_sink_last;
assign benchsoc_ethcore_ip_tx_packetizer_new_last_be = {benchsoc_ethcore_ip_tx_packetizer_sink_last_be};
assign benchsoc_ethcore_ip_tx_packetizer_in_data_copy = (benchsoc_ethcore_ip_tx_packetizer_is_ongoing0 | benchsoc_ethcore_ip_tx_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_ip_tx_packetizer_source_last <= 1'd0;
	if (benchsoc_ethcore_ip_tx_packetizer_source_last_s) begin
		benchsoc_ethcore_ip_tx_packetizer_source_last <= benchsoc_ethcore_ip_tx_packetizer_source_last_b;
	end else begin
		benchsoc_ethcore_ip_tx_packetizer_source_last <= benchsoc_ethcore_ip_tx_packetizer_source_last_a;
	end
end
assign benchsoc_ethcore_ip_tx_packetizer_source_payload_error = benchsoc_ethcore_ip_tx_packetizer_sink_payload_error;
always @(*) begin
	benchsoc_ethcore_ip_tx_packetizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_payload_data <= 8'd0;
	liteethip_liteethiptx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value0 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_sr_load <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_sr_shift <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_sink_ready <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_last_a <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_last_b <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_last_s <= 1'd0;
	liteethip_liteethiptx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value0 <= 5'd0;
	benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value1 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_valid <= 1'd0;
	liteethip_liteethiptx_fsm0_next_state <= liteethip_liteethiptx_fsm0_state;
	case (liteethip_liteethiptx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_ip_tx_packetizer_source_valid <= 1'd1;
			benchsoc_ethcore_ip_tx_packetizer_source_last_a <= 1'd0;
			benchsoc_ethcore_ip_tx_packetizer_source_payload_data <= benchsoc_ethcore_ip_tx_packetizer_sr[159:8];
			if ((benchsoc_ethcore_ip_tx_packetizer_source_valid & benchsoc_ethcore_ip_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_ip_tx_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_ip_tx_packetizer_count == 5'd19)) begin
					benchsoc_ethcore_ip_tx_packetizer_sr_shift <= 1'd0;
					liteethip_liteethiptx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value0 <= (benchsoc_ethcore_ip_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value_ce0 <= 1'd1;
				end else begin
					benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value0 <= (benchsoc_ethcore_ip_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value_ce0 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_ip_tx_packetizer_source_valid <= benchsoc_ethcore_ip_tx_packetizer_sink_valid;
			benchsoc_ethcore_ip_tx_packetizer_source_last_a <= benchsoc_ethcore_ip_tx_packetizer_sink_last;
			benchsoc_ethcore_ip_tx_packetizer_source_payload_data <= benchsoc_ethcore_ip_tx_packetizer_sink_payload_data;
			if ((benchsoc_ethcore_ip_tx_packetizer_source_valid & benchsoc_ethcore_ip_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_ip_tx_packetizer_sink_ready <= 1'd1;
				if (benchsoc_ethcore_ip_tx_packetizer_source_last) begin
					liteethip_liteethiptx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_ip_tx_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_ip_tx_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_ip_tx_packetizer_sink_ready <= 1'd1;
			benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value0 <= 1'd1;
			benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value_ce0 <= 1'd1;
			if (benchsoc_ethcore_ip_tx_packetizer_sink_valid) begin
				benchsoc_ethcore_ip_tx_packetizer_sink_ready <= 1'd0;
				benchsoc_ethcore_ip_tx_packetizer_source_valid <= 1'd1;
				benchsoc_ethcore_ip_tx_packetizer_source_last_a <= 1'd0;
				benchsoc_ethcore_ip_tx_packetizer_source_payload_data <= benchsoc_ethcore_ip_tx_packetizer_header[7:0];
				if ((benchsoc_ethcore_ip_tx_packetizer_source_valid & benchsoc_ethcore_ip_tx_packetizer_source_ready)) begin
					benchsoc_ethcore_ip_tx_packetizer_sr_load <= 1'd1;
					benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value1 <= 1'd1;
					benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value_ce1 <= 1'd1;
					if (1'd0) begin
						liteethip_liteethiptx_fsm0_next_state <= 2'd2;
					end else begin
						liteethip_liteethiptx_fsm0_next_state <= 1'd1;
					end
				end
			end
			benchsoc_ethcore_ip_tx_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	liteethip_liteethiptx_fsm1_next_state <= liteethip_liteethiptx_fsm1_state;
	case (liteethip_liteethiptx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_ip_tx_packetizer_source_last_b <= 1'd1;
			benchsoc_ethcore_ip_tx_packetizer_source_last_s <= 1'd1;
			benchsoc_ethcore_ip_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_ip_tx_packetizer_delayed_last_be;
			benchsoc_ethcore_ip_tx_packetizer_sink_ready <= 1'd0;
			if (benchsoc_ethcore_ip_tx_packetizer_source_ready) begin
				liteethip_liteethiptx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_ip_tx_packetizer_in_data_copy & benchsoc_ethcore_ip_tx_packetizer_sink_last) & (benchsoc_ethcore_ip_tx_packetizer_sink_last_be > benchsoc_ethcore_ip_tx_packetizer_new_last_be))) begin
				benchsoc_ethcore_ip_tx_packetizer_source_last_b <= 1'd0;
				benchsoc_ethcore_ip_tx_packetizer_source_last_s <= 1'd1;
				benchsoc_ethcore_ip_tx_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_ethcore_ip_tx_packetizer_source_ready & benchsoc_ethcore_ip_tx_packetizer_source_valid)) begin
					benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value0 <= benchsoc_ethcore_ip_tx_packetizer_new_last_be;
					benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value_ce0 <= 1'd1;
					liteethip_liteethiptx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_ip_tx_packetizer_in_data_copy) begin
					benchsoc_ethcore_ip_tx_packetizer_source_last_b <= benchsoc_ethcore_ip_tx_packetizer_sink_last;
					benchsoc_ethcore_ip_tx_packetizer_source_last_s <= 1'd1;
					benchsoc_ethcore_ip_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_ip_tx_packetizer_new_last_be;
				end
			end
			if (benchsoc_ethcore_ip_tx_packetizer_in_data_copy) begin
				benchsoc_ethcore_ip_tx_packetizer_sink_ready <= benchsoc_ethcore_ip_tx_packetizer_source_ready;
			end else begin
				if (benchsoc_ethcore_ip_tx_packetizer_is_ongoing2) begin
					benchsoc_ethcore_ip_tx_packetizer_sink_ready <= (~benchsoc_ethcore_ip_tx_packetizer_sink_valid);
				end
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_ip_tx_source_source_payload_data <= 8'd0;
	benchsoc_ethcore_ip_tx_source_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_ip_tx_source_source_payload_error <= 1'd0;
	benchsoc_ethcore_ip_tx_target_unreachable <= 1'd0;
	benchsoc_ethcore_arp_table_request_valid <= 1'd0;
	benchsoc_ethcore_arp_table_response_ready <= 1'd0;
	liteethip_liteethiptx_next_state <= 3'd0;
	benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value <= 48'd0;
	benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value_ce <= 1'd0;
	benchsoc_ethcore_ip_tx_source_source_valid <= 1'd0;
	benchsoc_ethcore_ip_tx_packetizer_source_ready <= 1'd0;
	benchsoc_ethcore_ip_tx_source_source_first <= 1'd0;
	benchsoc_ethcore_ip_tx_source_source_last <= 1'd0;
	benchsoc_ethcore_ip_tx_source_source_payload_ethernet_type <= 16'd0;
	benchsoc_ethcore_ip_tx_source_source_payload_sender_mac <= 48'd0;
	benchsoc_ethcore_ip_tx_source_source_payload_target_mac <= 48'd0;
	liteethip_liteethiptx_next_state <= liteethip_liteethiptx_state;
	case (liteethip_liteethiptx_state)
		1'd1: begin
			benchsoc_ethcore_arp_table_request_valid <= 1'd1;
			if ((benchsoc_ethcore_arp_table_request_valid & benchsoc_ethcore_arp_table_request_ready)) begin
				liteethip_liteethiptx_next_state <= 2'd2;
			end
		end
		2'd2: begin
			if (benchsoc_ethcore_arp_table_response_valid) begin
				benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value <= benchsoc_ethcore_arp_table_response_payload_mac_address;
				benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value_ce <= 1'd1;
				benchsoc_ethcore_arp_table_response_ready <= 1'd1;
				if (benchsoc_ethcore_arp_table_response_payload_failed) begin
					benchsoc_ethcore_ip_tx_target_unreachable <= 1'd1;
					liteethip_liteethiptx_next_state <= 3'd4;
				end else begin
					liteethip_liteethiptx_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			benchsoc_ethcore_ip_tx_source_source_valid <= benchsoc_ethcore_ip_tx_packetizer_source_valid;
			benchsoc_ethcore_ip_tx_packetizer_source_ready <= benchsoc_ethcore_ip_tx_source_source_ready;
			benchsoc_ethcore_ip_tx_source_source_first <= benchsoc_ethcore_ip_tx_packetizer_source_first;
			benchsoc_ethcore_ip_tx_source_source_last <= benchsoc_ethcore_ip_tx_packetizer_source_last;
			benchsoc_ethcore_ip_tx_source_source_payload_ethernet_type <= benchsoc_ethcore_ip_tx_packetizer_source_payload_ethernet_type;
			benchsoc_ethcore_ip_tx_source_source_payload_sender_mac <= benchsoc_ethcore_ip_tx_packetizer_source_payload_sender_mac;
			benchsoc_ethcore_ip_tx_source_source_payload_target_mac <= benchsoc_ethcore_ip_tx_packetizer_source_payload_target_mac;
			benchsoc_ethcore_ip_tx_source_source_payload_data <= benchsoc_ethcore_ip_tx_packetizer_source_payload_data;
			benchsoc_ethcore_ip_tx_source_source_payload_last_be <= benchsoc_ethcore_ip_tx_packetizer_source_payload_last_be;
			benchsoc_ethcore_ip_tx_source_source_payload_error <= benchsoc_ethcore_ip_tx_packetizer_source_payload_error;
			benchsoc_ethcore_ip_tx_source_source_payload_ethernet_type <= 12'd2048;
			benchsoc_ethcore_ip_tx_source_source_payload_target_mac <= benchsoc_ethcore_ip_tx_target_mac;
			benchsoc_ethcore_ip_tx_source_source_payload_sender_mac <= 45'd18566422200320;
			if (((benchsoc_ethcore_ip_tx_source_source_valid & benchsoc_ethcore_ip_tx_source_source_last) & benchsoc_ethcore_ip_tx_source_source_ready)) begin
				liteethip_liteethiptx_next_state <= 1'd0;
			end
		end
		3'd4: begin
			benchsoc_ethcore_ip_tx_packetizer_source_ready <= 1'd1;
			if (((benchsoc_ethcore_ip_tx_packetizer_source_valid & benchsoc_ethcore_ip_tx_packetizer_source_last) & benchsoc_ethcore_ip_tx_packetizer_source_ready)) begin
				liteethip_liteethiptx_next_state <= 1'd0;
			end
		end
		default: begin
			if (benchsoc_ethcore_ip_tx_packetizer_source_valid) begin
				if ((benchsoc_ethcore_ip_tx_sink_sink_param_ip_address[7:0] == 8'd255)) begin
					benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value <= 48'd281474976710655;
					benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value_ce <= 1'd1;
					liteethip_liteethiptx_next_state <= 2'd3;
				end else begin
					if ((benchsoc_ethcore_ip_tx_sink_sink_param_ip_address[31:28] == 4'd14)) begin
						benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value <= {24'd65630, 1'd0, benchsoc_ethcore_ip_tx_sink_sink_param_ip_address[22:0]};
						benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value_ce <= 1'd1;
						liteethip_liteethiptx_next_state <= 2'd3;
					end else begin
						liteethip_liteethiptx_next_state <= 1'd1;
					end
				end
			end
		end
	endcase
end
assign benchsoc_ethcore_ip_rx_depacketizer_sink_valid = benchsoc_ethcore_ip_rx_sink_sink_valid;
assign benchsoc_ethcore_ip_rx_sink_sink_ready = benchsoc_ethcore_ip_rx_depacketizer_sink_ready;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_first = benchsoc_ethcore_ip_rx_sink_sink_first;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_last = benchsoc_ethcore_ip_rx_sink_sink_last;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_payload_ethernet_type = benchsoc_ethcore_ip_rx_sink_sink_payload_ethernet_type;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_payload_sender_mac = benchsoc_ethcore_ip_rx_sink_sink_payload_sender_mac;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_payload_target_mac = benchsoc_ethcore_ip_rx_sink_sink_payload_target_mac;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_payload_data = benchsoc_ethcore_ip_rx_sink_sink_payload_data;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_payload_last_be = benchsoc_ethcore_ip_rx_sink_sink_payload_last_be;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_payload_error = benchsoc_ethcore_ip_rx_sink_sink_payload_error;
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_header = benchsoc_ethcore_ip_rx_depacketizer_header;
assign benchsoc_ethcore_ip_rx_reset = (~benchsoc_ethcore_ip_rx_depacketizer_source_valid);
assign benchsoc_ethcore_ip_rx_ce = 1'd1;
assign benchsoc_ethcore_ip_rx_source_source_last = benchsoc_ethcore_ip_rx_depacketizer_source_last;
assign benchsoc_ethcore_ip_rx_source_source_payload_data = benchsoc_ethcore_ip_rx_depacketizer_source_payload_data;
assign benchsoc_ethcore_ip_rx_source_source_payload_last_be = benchsoc_ethcore_ip_rx_depacketizer_source_payload_last_be;
assign benchsoc_ethcore_ip_rx_source_source_payload_error = benchsoc_ethcore_ip_rx_depacketizer_source_payload_error;
assign benchsoc_ethcore_ip_rx_source_source_param_protocol = benchsoc_ethcore_ip_rx_depacketizer_source_param_protocol;
assign benchsoc_ethcore_ip_rx_source_source_param_length = (benchsoc_ethcore_ip_rx_depacketizer_source_param_total_length - 5'd20);
assign benchsoc_ethcore_ip_rx_source_source_param_ip_address = benchsoc_ethcore_ip_rx_depacketizer_source_param_sender_ip;
assign benchsoc_ethcore_ip_rx_depacketizer_header = benchsoc_ethcore_ip_rx_depacketizer_sr;
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_checksum = {rhs_slice_proxy43[7:0], rhs_slice_proxy42[15:8]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_identification = {rhs_slice_proxy45[7:0], rhs_slice_proxy44[15:8]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_ihl = {rhs_slice_proxy46[3:0]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_protocol = {rhs_slice_proxy47[7:0]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_sender_ip = {rhs_slice_proxy51[7:0], rhs_slice_proxy50[15:8], rhs_slice_proxy49[23:16], rhs_slice_proxy48[31:24]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_target_ip = {rhs_slice_proxy55[7:0], rhs_slice_proxy54[15:8], rhs_slice_proxy53[23:16], rhs_slice_proxy52[31:24]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_total_length = {rhs_slice_proxy57[7:0], rhs_slice_proxy56[15:8]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_ttl = {rhs_slice_proxy58[7:0]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_param_version = {rhs_slice_proxy59[3:0]};
assign benchsoc_ethcore_ip_rx_depacketizer_source_payload_error = benchsoc_ethcore_ip_rx_depacketizer_sink_payload_error;
assign benchsoc_ethcore_ip_rx_depacketizer_sink_last_be = benchsoc_ethcore_ip_rx_depacketizer_sink_last;
assign benchsoc_ethcore_ip_rx_depacketizer_new_last_be = {benchsoc_ethcore_ip_rx_depacketizer_sink_last_be};
assign benchsoc_ethcore_ip_rx_depacketizer_is_in_copy = (benchsoc_ethcore_ip_rx_depacketizer_is_ongoing0 | benchsoc_ethcore_ip_rx_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_ip_rx_depacketizer_source_last <= 1'd0;
	if (benchsoc_ethcore_ip_rx_depacketizer_source_last_s) begin
		benchsoc_ethcore_ip_rx_depacketizer_source_last <= benchsoc_ethcore_ip_rx_depacketizer_source_last_b;
	end else begin
		benchsoc_ethcore_ip_rx_depacketizer_source_last <= benchsoc_ethcore_ip_rx_depacketizer_source_last_a;
	end
end
always @(*) begin
	benchsoc_ethcore_ip_rx_depacketizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_is_ongoing1 <= 1'd0;
	liteethip_liteethiprx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value2 <= 5'd0;
	benchsoc_ethcore_ip_rx_depacketizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value_ce2 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value3 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value_ce3 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_is_ongoing3 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_sr_shift <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_source_last_a <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_source_last_b <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_source_last_s <= 1'd0;
	liteethip_liteethiprx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value1 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_source_valid <= 1'd0;
	benchsoc_ethcore_ip_rx_depacketizer_is_ongoing0 <= 1'd0;
	liteethip_liteethiprx_fsm0_next_state <= liteethip_liteethiprx_fsm0_state;
	case (liteethip_liteethiprx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_ethcore_ip_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value2 <= (benchsoc_ethcore_ip_rx_depacketizer_count + 1'd1);
				benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value_ce2 <= 1'd1;
				benchsoc_ethcore_ip_rx_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_ip_rx_depacketizer_count == 5'd19)) begin
					liteethip_liteethiprx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value2 <= (benchsoc_ethcore_ip_rx_depacketizer_count + 1'd1);
					benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value_ce2 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_ip_rx_depacketizer_source_valid <= (benchsoc_ethcore_ip_rx_depacketizer_sink_valid | benchsoc_ethcore_ip_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_ip_rx_depacketizer_source_last_a <= (benchsoc_ethcore_ip_rx_depacketizer_sink_last | benchsoc_ethcore_ip_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= benchsoc_ethcore_ip_rx_depacketizer_source_ready;
			benchsoc_ethcore_ip_rx_depacketizer_source_payload_data <= benchsoc_ethcore_ip_rx_depacketizer_sink_payload_data;
			if ((benchsoc_ethcore_ip_rx_depacketizer_source_valid & benchsoc_ethcore_ip_rx_depacketizer_source_ready)) begin
				if (benchsoc_ethcore_ip_rx_depacketizer_source_last) begin
					liteethip_liteethiprx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_ip_rx_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_ethcore_ip_rx_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_ip_rx_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_ethcore_ip_rx_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= 1'd1;
			benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value2 <= 1'd1;
			benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value_ce2 <= 1'd1;
			if (benchsoc_ethcore_ip_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_ip_rx_depacketizer_sr_shift <= 1'd1;
				benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value3 <= 1'd1;
				benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value_ce3 <= 1'd1;
				if (1'd0) begin
					liteethip_liteethiprx_fsm0_next_state <= 2'd2;
				end else begin
					liteethip_liteethiprx_fsm0_next_state <= 1'd1;
				end
			end
		end
	endcase
	liteethip_liteethiprx_fsm1_next_state <= liteethip_liteethiprx_fsm1_state;
	case (liteethip_liteethiprx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_ip_rx_depacketizer_source_last_b <= 1'd1;
			benchsoc_ethcore_ip_rx_depacketizer_source_last_s <= 1'd1;
			benchsoc_ethcore_ip_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be;
			benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_ethcore_ip_rx_depacketizer_source_ready & benchsoc_ethcore_ip_rx_depacketizer_source_valid)) begin
				liteethip_liteethiprx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_ip_rx_depacketizer_sink_valid & benchsoc_ethcore_ip_rx_depacketizer_sink_last) & (benchsoc_ethcore_ip_rx_depacketizer_sink_last_be > benchsoc_ethcore_ip_rx_depacketizer_new_last_be))) begin
				benchsoc_ethcore_ip_rx_depacketizer_source_last_b <= 1'd0;
				benchsoc_ethcore_ip_rx_depacketizer_source_last_s <= 1'd1;
				benchsoc_ethcore_ip_rx_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_ethcore_ip_rx_depacketizer_source_ready & benchsoc_ethcore_ip_rx_depacketizer_source_valid) | ((~benchsoc_ethcore_ip_rx_depacketizer_was_in_copy) & benchsoc_ethcore_ip_rx_depacketizer_is_in_copy))) begin
					benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value1 <= benchsoc_ethcore_ip_rx_depacketizer_new_last_be;
					benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value_ce1 <= 1'd1;
					liteethip_liteethiprx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_ip_rx_depacketizer_sink_last) begin
					benchsoc_ethcore_ip_rx_depacketizer_source_last_b <= 1'd1;
					benchsoc_ethcore_ip_rx_depacketizer_source_last_s <= 1'd1;
					benchsoc_ethcore_ip_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_ip_rx_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_ethcore_ip_rx_depacketizer_is_ongoing2 | (benchsoc_ethcore_ip_rx_depacketizer_is_ongoing3 & (~benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle)))) begin
				benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= benchsoc_ethcore_ip_rx_depacketizer_source_ready;
			end else begin
				benchsoc_ethcore_ip_rx_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next0 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[15:0]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next1 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next0 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[31:16]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next2 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next1 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[47:32]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next3 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next2 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[63:48]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next4 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next3 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[79:64]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next5 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next4 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[95:80]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next6 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next5 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[111:96]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next7 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next6 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[127:112]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next8 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next7 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[143:128]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next9 = (benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next8 + benchsoc_ethcore_ip_rx_liteethipv4checksum_header[159:144]);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_value = (~{benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next9[7:0], benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next9[15:8]});
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_counter_ce = (~benchsoc_ethcore_ip_rx_liteethipv4checksum_done);
assign benchsoc_ethcore_ip_rx_liteethipv4checksum_done = (benchsoc_ethcore_ip_rx_liteethipv4checksum_counter == 4'd11);
always @(*) begin
	benchsoc_ethcore_ip_rx_depacketizer_source_ready <= 1'd0;
	benchsoc_ethcore_ip_rx_source_source_valid <= 1'd0;
	liteethip_liteethiprx_next_state <= 2'd0;
	liteethip_liteethiprx_next_state <= liteethip_liteethiprx_state;
	case (liteethip_liteethiprx_state)
		1'd1: begin
			benchsoc_ethcore_ip_rx_source_source_valid <= benchsoc_ethcore_ip_rx_depacketizer_source_valid;
			benchsoc_ethcore_ip_rx_depacketizer_source_ready <= benchsoc_ethcore_ip_rx_source_source_ready;
			if ((benchsoc_ethcore_ip_rx_source_source_valid & benchsoc_ethcore_ip_rx_source_source_ready)) begin
				if (benchsoc_ethcore_ip_rx_source_source_last) begin
					liteethip_liteethiprx_next_state <= 1'd0;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_ip_rx_depacketizer_source_ready <= 1'd1;
			if (((benchsoc_ethcore_ip_rx_depacketizer_source_valid & benchsoc_ethcore_ip_rx_depacketizer_source_last) & benchsoc_ethcore_ip_rx_depacketizer_source_ready)) begin
				liteethip_liteethiprx_next_state <= 1'd0;
			end
		end
		default: begin
			if ((benchsoc_ethcore_ip_rx_depacketizer_source_valid & benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
				liteethip_liteethiprx_next_state <= 2'd2;
				if ((((((benchsoc_ethcore_ip_rx_depacketizer_source_param_target_ip == 32'd3232236082) | 1'd1) & (benchsoc_ethcore_ip_rx_depacketizer_source_param_version == 3'd4)) & (benchsoc_ethcore_ip_rx_depacketizer_source_param_ihl == 3'd5)) & (benchsoc_ethcore_ip_rx_liteethipv4checksum_value == 1'd0))) begin
					liteethip_liteethiprx_next_state <= 1'd1;
				end
			end
		end
	endcase
end
always @(*) begin
	liteethip_sel0 <= 2'd0;
	if ((benchsoc_ethcore_ip_crossbar_sink_param_protocol == 1'd1)) begin
		liteethip_sel0 <= 1'd1;
	end
	if ((benchsoc_ethcore_ip_crossbar_sink_param_protocol == 5'd17)) begin
		liteethip_sel0 <= 2'd2;
	end
end
always @(*) begin
	liteethip_request <= 2'd0;
	liteethip_request[0] <= liteethip_status0_ongoing0;
	liteethip_request[1] <= liteethip_status1_ongoing0;
end
always @(*) begin
	benchsoc_ethcore_ip_crossbar_source_last <= 1'd0;
	benchsoc_ethcore_ip_port_sink_ready <= 1'd0;
	benchsoc_ethcore_ip_crossbar_source_payload_data <= 8'd0;
	benchsoc_ethcore_ip_crossbar_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_ip_crossbar_source_payload_error <= 1'd0;
	benchsoc_ethcore_ip_crossbar_source_param_length <= 16'd0;
	benchsoc_ethcore_ip_crossbar_source_param_protocol <= 8'd0;
	benchsoc_ethcore_ip_crossbar_source_param_ip_address <= 32'd0;
	benchsoc_ethcore_icmp_sink_ready <= 1'd0;
	benchsoc_ethcore_ip_crossbar_source_valid <= 1'd0;
	benchsoc_ethcore_ip_crossbar_source_first <= 1'd0;
	case (liteethip_grant)
		1'd0: begin
			benchsoc_ethcore_ip_crossbar_source_valid <= benchsoc_ethcore_icmp_sink_valid;
			benchsoc_ethcore_icmp_sink_ready <= benchsoc_ethcore_ip_crossbar_source_ready;
			benchsoc_ethcore_ip_crossbar_source_first <= benchsoc_ethcore_icmp_sink_first;
			benchsoc_ethcore_ip_crossbar_source_last <= benchsoc_ethcore_icmp_sink_last;
			benchsoc_ethcore_ip_crossbar_source_payload_data <= benchsoc_ethcore_icmp_sink_payload_data;
			benchsoc_ethcore_ip_crossbar_source_payload_last_be <= benchsoc_ethcore_icmp_sink_payload_last_be;
			benchsoc_ethcore_ip_crossbar_source_payload_error <= benchsoc_ethcore_icmp_sink_payload_error;
			benchsoc_ethcore_ip_crossbar_source_param_length <= benchsoc_ethcore_icmp_sink_param_length;
			benchsoc_ethcore_ip_crossbar_source_param_protocol <= benchsoc_ethcore_icmp_sink_param_protocol;
			benchsoc_ethcore_ip_crossbar_source_param_ip_address <= benchsoc_ethcore_icmp_sink_param_ip_address;
		end
		1'd1: begin
			benchsoc_ethcore_ip_crossbar_source_valid <= benchsoc_ethcore_ip_port_sink_valid;
			benchsoc_ethcore_ip_port_sink_ready <= benchsoc_ethcore_ip_crossbar_source_ready;
			benchsoc_ethcore_ip_crossbar_source_first <= benchsoc_ethcore_ip_port_sink_first;
			benchsoc_ethcore_ip_crossbar_source_last <= benchsoc_ethcore_ip_port_sink_last;
			benchsoc_ethcore_ip_crossbar_source_payload_data <= benchsoc_ethcore_ip_port_sink_payload_data;
			benchsoc_ethcore_ip_crossbar_source_payload_last_be <= benchsoc_ethcore_ip_port_sink_payload_last_be;
			benchsoc_ethcore_ip_crossbar_source_payload_error <= benchsoc_ethcore_ip_port_sink_payload_error;
			benchsoc_ethcore_ip_crossbar_source_param_length <= benchsoc_ethcore_ip_port_sink_param_length;
			benchsoc_ethcore_ip_crossbar_source_param_protocol <= benchsoc_ethcore_ip_port_sink_param_protocol;
			benchsoc_ethcore_ip_crossbar_source_param_ip_address <= benchsoc_ethcore_ip_port_sink_param_ip_address;
		end
	endcase
end
always @(*) begin
	liteethip_status0_last <= 1'd0;
	if (benchsoc_ethcore_icmp_sink_valid) begin
		liteethip_status0_last <= (benchsoc_ethcore_icmp_sink_last & benchsoc_ethcore_icmp_sink_ready);
	end
end
assign liteethip_status0_ongoing0 = ((benchsoc_ethcore_icmp_sink_valid | liteethip_status0_ongoing1) & (~liteethip_status0_last));
always @(*) begin
	liteethip_status1_last <= 1'd0;
	if (benchsoc_ethcore_ip_port_sink_valid) begin
		liteethip_status1_last <= (benchsoc_ethcore_ip_port_sink_last & benchsoc_ethcore_ip_port_sink_ready);
	end
end
assign liteethip_status1_ongoing0 = ((benchsoc_ethcore_ip_port_sink_valid | liteethip_status1_ongoing1) & (~liteethip_status1_last));
always @(*) begin
	liteethip_sel1 <= 2'd0;
	if (liteethip_first) begin
		liteethip_sel1 <= liteethip_sel0;
	end else begin
		liteethip_sel1 <= liteethip_sel_ongoing;
	end
end
always @(*) begin
	benchsoc_ethcore_icmp_source_valid <= 1'd0;
	benchsoc_ethcore_icmp_source_first <= 1'd0;
	benchsoc_ethcore_ip_crossbar_sink_ready <= 1'd0;
	benchsoc_ethcore_icmp_source_last <= 1'd0;
	benchsoc_ethcore_icmp_source_payload_data <= 8'd0;
	benchsoc_ethcore_ip_port_source_valid <= 1'd0;
	benchsoc_ethcore_icmp_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_icmp_source_payload_error <= 1'd0;
	benchsoc_ethcore_ip_port_source_first <= 1'd0;
	benchsoc_ethcore_icmp_source_param_length <= 16'd0;
	benchsoc_ethcore_ip_port_source_last <= 1'd0;
	benchsoc_ethcore_icmp_source_param_protocol <= 8'd0;
	benchsoc_ethcore_ip_port_source_payload_data <= 8'd0;
	benchsoc_ethcore_icmp_source_param_ip_address <= 32'd0;
	benchsoc_ethcore_ip_port_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_ip_port_source_payload_error <= 1'd0;
	benchsoc_ethcore_ip_port_source_param_length <= 16'd0;
	benchsoc_ethcore_ip_port_source_param_protocol <= 8'd0;
	benchsoc_ethcore_ip_port_source_param_ip_address <= 32'd0;
	case (liteethip_sel1)
		1'd1: begin
			benchsoc_ethcore_icmp_source_valid <= benchsoc_ethcore_ip_crossbar_sink_valid;
			benchsoc_ethcore_ip_crossbar_sink_ready <= benchsoc_ethcore_icmp_source_ready;
			benchsoc_ethcore_icmp_source_first <= benchsoc_ethcore_ip_crossbar_sink_first;
			benchsoc_ethcore_icmp_source_last <= benchsoc_ethcore_ip_crossbar_sink_last;
			benchsoc_ethcore_icmp_source_payload_data <= benchsoc_ethcore_ip_crossbar_sink_payload_data;
			benchsoc_ethcore_icmp_source_payload_last_be <= benchsoc_ethcore_ip_crossbar_sink_payload_last_be;
			benchsoc_ethcore_icmp_source_payload_error <= benchsoc_ethcore_ip_crossbar_sink_payload_error;
			benchsoc_ethcore_icmp_source_param_length <= benchsoc_ethcore_ip_crossbar_sink_param_length;
			benchsoc_ethcore_icmp_source_param_protocol <= benchsoc_ethcore_ip_crossbar_sink_param_protocol;
			benchsoc_ethcore_icmp_source_param_ip_address <= benchsoc_ethcore_ip_crossbar_sink_param_ip_address;
		end
		2'd2: begin
			benchsoc_ethcore_ip_port_source_valid <= benchsoc_ethcore_ip_crossbar_sink_valid;
			benchsoc_ethcore_ip_crossbar_sink_ready <= benchsoc_ethcore_ip_port_source_ready;
			benchsoc_ethcore_ip_port_source_first <= benchsoc_ethcore_ip_crossbar_sink_first;
			benchsoc_ethcore_ip_port_source_last <= benchsoc_ethcore_ip_crossbar_sink_last;
			benchsoc_ethcore_ip_port_source_payload_data <= benchsoc_ethcore_ip_crossbar_sink_payload_data;
			benchsoc_ethcore_ip_port_source_payload_last_be <= benchsoc_ethcore_ip_crossbar_sink_payload_last_be;
			benchsoc_ethcore_ip_port_source_payload_error <= benchsoc_ethcore_ip_crossbar_sink_payload_error;
			benchsoc_ethcore_ip_port_source_param_length <= benchsoc_ethcore_ip_crossbar_sink_param_length;
			benchsoc_ethcore_ip_port_source_param_protocol <= benchsoc_ethcore_ip_crossbar_sink_param_protocol;
			benchsoc_ethcore_ip_port_source_param_ip_address <= benchsoc_ethcore_ip_crossbar_sink_param_ip_address;
		end
		default: begin
			benchsoc_ethcore_ip_crossbar_sink_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	liteethip_last <= 1'd0;
	if (benchsoc_ethcore_ip_crossbar_sink_valid) begin
		liteethip_last <= (benchsoc_ethcore_ip_crossbar_sink_last & benchsoc_ethcore_ip_crossbar_sink_ready);
	end
end
assign liteethip_ongoing0 = ((benchsoc_ethcore_ip_crossbar_sink_valid | liteethip_ongoing1) & (~liteethip_last));
assign benchsoc_ethcore_icmp_echo_sink_sink_valid = benchsoc_ethcore_icmp_rx_source_source_valid;
assign benchsoc_ethcore_icmp_rx_source_source_ready = benchsoc_ethcore_icmp_echo_sink_sink_ready;
assign benchsoc_ethcore_icmp_echo_sink_sink_first = benchsoc_ethcore_icmp_rx_source_source_first;
assign benchsoc_ethcore_icmp_echo_sink_sink_last = benchsoc_ethcore_icmp_rx_source_source_last;
assign benchsoc_ethcore_icmp_echo_sink_sink_payload_data = benchsoc_ethcore_icmp_rx_source_source_payload_data;
assign benchsoc_ethcore_icmp_echo_sink_sink_payload_last_be = benchsoc_ethcore_icmp_rx_source_source_payload_last_be;
assign benchsoc_ethcore_icmp_echo_sink_sink_payload_error = benchsoc_ethcore_icmp_rx_source_source_payload_error;
assign benchsoc_ethcore_icmp_echo_sink_sink_param_checksum = benchsoc_ethcore_icmp_rx_source_source_param_checksum;
assign benchsoc_ethcore_icmp_echo_sink_sink_param_code = benchsoc_ethcore_icmp_rx_source_source_param_code;
assign benchsoc_ethcore_icmp_echo_sink_sink_param_msgtype = benchsoc_ethcore_icmp_rx_source_source_param_msgtype;
assign benchsoc_ethcore_icmp_echo_sink_sink_param_quench = benchsoc_ethcore_icmp_rx_source_source_param_quench;
assign benchsoc_ethcore_icmp_echo_sink_sink_param_ip_address = benchsoc_ethcore_icmp_rx_source_source_param_ip_address;
assign benchsoc_ethcore_icmp_echo_sink_sink_param_length = benchsoc_ethcore_icmp_rx_source_source_param_length;
assign benchsoc_ethcore_icmp_tx_sink_sink_valid = benchsoc_ethcore_icmp_echo_source_source_valid;
assign benchsoc_ethcore_icmp_echo_source_source_ready = benchsoc_ethcore_icmp_tx_sink_sink_ready;
assign benchsoc_ethcore_icmp_tx_sink_sink_first = benchsoc_ethcore_icmp_echo_source_source_first;
assign benchsoc_ethcore_icmp_tx_sink_sink_last = benchsoc_ethcore_icmp_echo_source_source_last;
assign benchsoc_ethcore_icmp_tx_sink_sink_payload_data = benchsoc_ethcore_icmp_echo_source_source_payload_data;
assign benchsoc_ethcore_icmp_tx_sink_sink_payload_last_be = benchsoc_ethcore_icmp_echo_source_source_payload_last_be;
assign benchsoc_ethcore_icmp_tx_sink_sink_payload_error = benchsoc_ethcore_icmp_echo_source_source_payload_error;
assign benchsoc_ethcore_icmp_tx_sink_sink_param_checksum = benchsoc_ethcore_icmp_echo_source_source_param_checksum;
assign benchsoc_ethcore_icmp_tx_sink_sink_param_code = benchsoc_ethcore_icmp_echo_source_source_param_code;
assign benchsoc_ethcore_icmp_tx_sink_sink_param_msgtype = benchsoc_ethcore_icmp_echo_source_source_param_msgtype;
assign benchsoc_ethcore_icmp_tx_sink_sink_param_quench = benchsoc_ethcore_icmp_echo_source_source_param_quench;
assign benchsoc_ethcore_icmp_tx_sink_sink_param_ip_address = benchsoc_ethcore_icmp_echo_source_source_param_ip_address;
assign benchsoc_ethcore_icmp_tx_sink_sink_param_length = benchsoc_ethcore_icmp_echo_source_source_param_length;
assign benchsoc_ethcore_icmp_sink_valid = benchsoc_ethcore_icmp_tx_source_source_valid;
assign benchsoc_ethcore_icmp_tx_source_source_ready = benchsoc_ethcore_icmp_sink_ready;
assign benchsoc_ethcore_icmp_sink_first = benchsoc_ethcore_icmp_tx_source_source_first;
assign benchsoc_ethcore_icmp_sink_last = benchsoc_ethcore_icmp_tx_source_source_last;
assign benchsoc_ethcore_icmp_sink_payload_data = benchsoc_ethcore_icmp_tx_source_source_payload_data;
assign benchsoc_ethcore_icmp_sink_payload_last_be = benchsoc_ethcore_icmp_tx_source_source_payload_last_be;
assign benchsoc_ethcore_icmp_sink_payload_error = benchsoc_ethcore_icmp_tx_source_source_payload_error;
assign benchsoc_ethcore_icmp_sink_param_length = benchsoc_ethcore_icmp_tx_source_source_param_length;
assign benchsoc_ethcore_icmp_sink_param_protocol = benchsoc_ethcore_icmp_tx_source_source_param_protocol;
assign benchsoc_ethcore_icmp_sink_param_ip_address = benchsoc_ethcore_icmp_tx_source_source_param_ip_address;
assign benchsoc_ethcore_icmp_rx_sink_sink_valid = benchsoc_ethcore_icmp_source_valid;
assign benchsoc_ethcore_icmp_source_ready = benchsoc_ethcore_icmp_rx_sink_sink_ready;
assign benchsoc_ethcore_icmp_rx_sink_sink_first = benchsoc_ethcore_icmp_source_first;
assign benchsoc_ethcore_icmp_rx_sink_sink_last = benchsoc_ethcore_icmp_source_last;
assign benchsoc_ethcore_icmp_rx_sink_sink_payload_data = benchsoc_ethcore_icmp_source_payload_data;
assign benchsoc_ethcore_icmp_rx_sink_sink_payload_last_be = benchsoc_ethcore_icmp_source_payload_last_be;
assign benchsoc_ethcore_icmp_rx_sink_sink_payload_error = benchsoc_ethcore_icmp_source_payload_error;
assign benchsoc_ethcore_icmp_rx_sink_sink_param_length = benchsoc_ethcore_icmp_source_param_length;
assign benchsoc_ethcore_icmp_rx_sink_sink_param_protocol = benchsoc_ethcore_icmp_source_param_protocol;
assign benchsoc_ethcore_icmp_rx_sink_sink_param_ip_address = benchsoc_ethcore_icmp_source_param_ip_address;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_valid = benchsoc_ethcore_icmp_tx_sink_sink_valid;
assign benchsoc_ethcore_icmp_tx_sink_sink_ready = benchsoc_ethcore_icmp_tx_packetizer_sink_ready;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_last = benchsoc_ethcore_icmp_tx_sink_sink_last;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_payload_data = benchsoc_ethcore_icmp_tx_sink_sink_payload_data;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_payload_last_be = benchsoc_ethcore_icmp_tx_sink_sink_payload_last_be;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_param_checksum = benchsoc_ethcore_icmp_tx_sink_sink_param_checksum;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_param_code = benchsoc_ethcore_icmp_tx_sink_sink_param_code;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_param_msgtype = benchsoc_ethcore_icmp_tx_sink_sink_param_msgtype;
assign benchsoc_ethcore_icmp_tx_packetizer_sink_param_quench = benchsoc_ethcore_icmp_tx_sink_sink_param_quench;
assign benchsoc_ethcore_icmp_tx_source_source_first = benchsoc_ethcore_icmp_tx_packetizer_source_first;
assign benchsoc_ethcore_icmp_tx_source_source_last = benchsoc_ethcore_icmp_tx_packetizer_source_last;
assign benchsoc_ethcore_icmp_tx_source_source_payload_data = benchsoc_ethcore_icmp_tx_packetizer_source_payload_data;
assign benchsoc_ethcore_icmp_tx_source_source_payload_last_be = benchsoc_ethcore_icmp_tx_packetizer_source_payload_last_be;
assign benchsoc_ethcore_icmp_tx_source_source_payload_error = benchsoc_ethcore_icmp_tx_packetizer_source_payload_error;
always @(*) begin
	benchsoc_ethcore_icmp_tx_source_source_param_length <= 16'd0;
	benchsoc_ethcore_icmp_tx_source_source_param_length <= benchsoc_ethcore_icmp_tx_packetizer_source_param_length;
	benchsoc_ethcore_icmp_tx_source_source_param_length <= (benchsoc_ethcore_icmp_tx_sink_sink_param_length + 4'd8);
end
always @(*) begin
	benchsoc_ethcore_icmp_tx_source_source_param_protocol <= 8'd0;
	benchsoc_ethcore_icmp_tx_source_source_param_protocol <= benchsoc_ethcore_icmp_tx_packetizer_source_param_protocol;
	benchsoc_ethcore_icmp_tx_source_source_param_protocol <= 1'd1;
end
always @(*) begin
	benchsoc_ethcore_icmp_tx_source_source_param_ip_address <= 32'd0;
	benchsoc_ethcore_icmp_tx_source_source_param_ip_address <= benchsoc_ethcore_icmp_tx_packetizer_source_param_ip_address;
	benchsoc_ethcore_icmp_tx_source_source_param_ip_address <= benchsoc_ethcore_icmp_tx_sink_sink_param_ip_address;
end
always @(*) begin
	benchsoc_ethcore_icmp_tx_packetizer_header <= 64'd0;
	benchsoc_ethcore_icmp_tx_packetizer_header[31:16] <= {benchsoc_ethcore_icmp_tx_packetizer_sink_param_checksum[7:0], benchsoc_ethcore_icmp_tx_packetizer_sink_param_checksum[15:8]};
	benchsoc_ethcore_icmp_tx_packetizer_header[15:8] <= {benchsoc_ethcore_icmp_tx_packetizer_sink_param_code[7:0]};
	benchsoc_ethcore_icmp_tx_packetizer_header[7:0] <= {benchsoc_ethcore_icmp_tx_packetizer_sink_param_msgtype[7:0]};
	benchsoc_ethcore_icmp_tx_packetizer_header[63:32] <= {benchsoc_ethcore_icmp_tx_packetizer_sink_param_quench[7:0], benchsoc_ethcore_icmp_tx_packetizer_sink_param_quench[15:8], benchsoc_ethcore_icmp_tx_packetizer_sink_param_quench[23:16], benchsoc_ethcore_icmp_tx_packetizer_sink_param_quench[31:24]};
end
assign benchsoc_ethcore_icmp_tx_packetizer_sink_last_be = benchsoc_ethcore_icmp_tx_packetizer_sink_last;
assign benchsoc_ethcore_icmp_tx_packetizer_new_last_be = {benchsoc_ethcore_icmp_tx_packetizer_sink_last_be};
assign benchsoc_ethcore_icmp_tx_packetizer_in_data_copy = (benchsoc_ethcore_icmp_tx_packetizer_is_ongoing0 | benchsoc_ethcore_icmp_tx_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_icmp_tx_packetizer_source_last <= 1'd0;
	if (benchsoc_ethcore_icmp_tx_packetizer_source_last_s) begin
		benchsoc_ethcore_icmp_tx_packetizer_source_last <= benchsoc_ethcore_icmp_tx_packetizer_source_last_b;
	end else begin
		benchsoc_ethcore_icmp_tx_packetizer_source_last <= benchsoc_ethcore_icmp_tx_packetizer_source_last_a;
	end
end
assign benchsoc_ethcore_icmp_tx_packetizer_source_payload_error = benchsoc_ethcore_icmp_tx_packetizer_sink_payload_error;
always @(*) begin
	benchsoc_ethcore_icmp_tx_packetizer_sr_shift <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= 1'd0;
	liteethicmptx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value0 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_valid <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_last_a <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_last_b <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_last_s <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_payload_last_be <= 1'd0;
	liteethicmptx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value0 <= 3'd0;
	benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value1 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_sr_load <= 1'd0;
	liteethicmptx_fsm0_next_state <= liteethicmptx_fsm0_state;
	case (liteethicmptx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_icmp_tx_packetizer_source_valid <= 1'd1;
			benchsoc_ethcore_icmp_tx_packetizer_source_last_a <= 1'd0;
			benchsoc_ethcore_icmp_tx_packetizer_source_payload_data <= benchsoc_ethcore_icmp_tx_packetizer_sr[63:8];
			if ((benchsoc_ethcore_icmp_tx_packetizer_source_valid & benchsoc_ethcore_icmp_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_icmp_tx_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_icmp_tx_packetizer_count == 3'd7)) begin
					benchsoc_ethcore_icmp_tx_packetizer_sr_shift <= 1'd0;
					liteethicmptx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value0 <= (benchsoc_ethcore_icmp_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value_ce0 <= 1'd1;
				end else begin
					benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value0 <= (benchsoc_ethcore_icmp_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value_ce0 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_icmp_tx_packetizer_source_valid <= benchsoc_ethcore_icmp_tx_packetizer_sink_valid;
			benchsoc_ethcore_icmp_tx_packetizer_source_last_a <= benchsoc_ethcore_icmp_tx_packetizer_sink_last;
			benchsoc_ethcore_icmp_tx_packetizer_source_payload_data <= benchsoc_ethcore_icmp_tx_packetizer_sink_payload_data;
			if ((benchsoc_ethcore_icmp_tx_packetizer_source_valid & benchsoc_ethcore_icmp_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= 1'd1;
				if (benchsoc_ethcore_icmp_tx_packetizer_source_last) begin
					liteethicmptx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_icmp_tx_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_icmp_tx_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= 1'd1;
			benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value0 <= 1'd1;
			benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value_ce0 <= 1'd1;
			if (benchsoc_ethcore_icmp_tx_packetizer_sink_valid) begin
				benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= 1'd0;
				benchsoc_ethcore_icmp_tx_packetizer_source_valid <= 1'd1;
				benchsoc_ethcore_icmp_tx_packetizer_source_last_a <= 1'd0;
				benchsoc_ethcore_icmp_tx_packetizer_source_payload_data <= benchsoc_ethcore_icmp_tx_packetizer_header[7:0];
				if ((benchsoc_ethcore_icmp_tx_packetizer_source_valid & benchsoc_ethcore_icmp_tx_packetizer_source_ready)) begin
					benchsoc_ethcore_icmp_tx_packetizer_sr_load <= 1'd1;
					benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value1 <= 1'd1;
					benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value_ce1 <= 1'd1;
					if (1'd0) begin
						liteethicmptx_fsm0_next_state <= 2'd2;
					end else begin
						liteethicmptx_fsm0_next_state <= 1'd1;
					end
				end
			end
			benchsoc_ethcore_icmp_tx_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	liteethicmptx_fsm1_next_state <= liteethicmptx_fsm1_state;
	case (liteethicmptx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_icmp_tx_packetizer_source_last_b <= 1'd1;
			benchsoc_ethcore_icmp_tx_packetizer_source_last_s <= 1'd1;
			benchsoc_ethcore_icmp_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be;
			benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= 1'd0;
			if (benchsoc_ethcore_icmp_tx_packetizer_source_ready) begin
				liteethicmptx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_icmp_tx_packetizer_in_data_copy & benchsoc_ethcore_icmp_tx_packetizer_sink_last) & (benchsoc_ethcore_icmp_tx_packetizer_sink_last_be > benchsoc_ethcore_icmp_tx_packetizer_new_last_be))) begin
				benchsoc_ethcore_icmp_tx_packetizer_source_last_b <= 1'd0;
				benchsoc_ethcore_icmp_tx_packetizer_source_last_s <= 1'd1;
				benchsoc_ethcore_icmp_tx_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_ethcore_icmp_tx_packetizer_source_ready & benchsoc_ethcore_icmp_tx_packetizer_source_valid)) begin
					benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value0 <= benchsoc_ethcore_icmp_tx_packetizer_new_last_be;
					benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value_ce0 <= 1'd1;
					liteethicmptx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_icmp_tx_packetizer_in_data_copy) begin
					benchsoc_ethcore_icmp_tx_packetizer_source_last_b <= benchsoc_ethcore_icmp_tx_packetizer_sink_last;
					benchsoc_ethcore_icmp_tx_packetizer_source_last_s <= 1'd1;
					benchsoc_ethcore_icmp_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_icmp_tx_packetizer_new_last_be;
				end
			end
			if (benchsoc_ethcore_icmp_tx_packetizer_in_data_copy) begin
				benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= benchsoc_ethcore_icmp_tx_packetizer_source_ready;
			end else begin
				if (benchsoc_ethcore_icmp_tx_packetizer_is_ongoing2) begin
					benchsoc_ethcore_icmp_tx_packetizer_sink_ready <= (~benchsoc_ethcore_icmp_tx_packetizer_sink_valid);
				end
			end
		end
	endcase
end
always @(*) begin
	liteethicmptx_next_state <= 1'd0;
	benchsoc_ethcore_icmp_tx_source_source_valid <= 1'd0;
	benchsoc_ethcore_icmp_tx_packetizer_source_ready <= 1'd0;
	liteethicmptx_next_state <= liteethicmptx_state;
	case (liteethicmptx_state)
		1'd1: begin
			benchsoc_ethcore_icmp_tx_source_source_valid <= benchsoc_ethcore_icmp_tx_packetizer_source_valid;
			benchsoc_ethcore_icmp_tx_packetizer_source_ready <= benchsoc_ethcore_icmp_tx_source_source_ready;
			if (((benchsoc_ethcore_icmp_tx_source_source_valid & benchsoc_ethcore_icmp_tx_source_source_last) & benchsoc_ethcore_icmp_tx_source_source_ready)) begin
				liteethicmptx_next_state <= 1'd0;
			end
		end
		default: begin
			if (benchsoc_ethcore_icmp_tx_packetizer_source_valid) begin
				liteethicmptx_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_valid = benchsoc_ethcore_icmp_rx_sink_sink_valid;
assign benchsoc_ethcore_icmp_rx_sink_sink_ready = benchsoc_ethcore_icmp_rx_depacketizer_sink_ready;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_first = benchsoc_ethcore_icmp_rx_sink_sink_first;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_last = benchsoc_ethcore_icmp_rx_sink_sink_last;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_data = benchsoc_ethcore_icmp_rx_sink_sink_payload_data;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_last_be = benchsoc_ethcore_icmp_rx_sink_sink_payload_last_be;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_error = benchsoc_ethcore_icmp_rx_sink_sink_payload_error;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_param_length = benchsoc_ethcore_icmp_rx_sink_sink_param_length;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_param_protocol = benchsoc_ethcore_icmp_rx_sink_sink_param_protocol;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_param_ip_address = benchsoc_ethcore_icmp_rx_sink_sink_param_ip_address;
assign benchsoc_ethcore_icmp_rx_source_source_last = benchsoc_ethcore_icmp_rx_depacketizer_source_last;
assign benchsoc_ethcore_icmp_rx_source_source_payload_data = benchsoc_ethcore_icmp_rx_depacketizer_source_payload_data;
assign benchsoc_ethcore_icmp_rx_source_source_payload_last_be = benchsoc_ethcore_icmp_rx_depacketizer_source_payload_last_be;
assign benchsoc_ethcore_icmp_rx_source_source_payload_error = benchsoc_ethcore_icmp_rx_depacketizer_source_payload_error;
assign benchsoc_ethcore_icmp_rx_source_source_param_checksum = benchsoc_ethcore_icmp_rx_depacketizer_source_param_checksum;
assign benchsoc_ethcore_icmp_rx_source_source_param_code = benchsoc_ethcore_icmp_rx_depacketizer_source_param_code;
assign benchsoc_ethcore_icmp_rx_source_source_param_msgtype = benchsoc_ethcore_icmp_rx_depacketizer_source_param_msgtype;
assign benchsoc_ethcore_icmp_rx_source_source_param_quench = benchsoc_ethcore_icmp_rx_depacketizer_source_param_quench;
assign benchsoc_ethcore_icmp_rx_source_source_param_ip_address = benchsoc_ethcore_icmp_rx_sink_sink_param_ip_address;
assign benchsoc_ethcore_icmp_rx_source_source_param_length = (benchsoc_ethcore_icmp_rx_sink_sink_param_length - 4'd8);
assign benchsoc_ethcore_icmp_rx_depacketizer_header = benchsoc_ethcore_icmp_rx_depacketizer_sr;
assign benchsoc_ethcore_icmp_rx_depacketizer_source_param_checksum = {rhs_slice_proxy61[7:0], rhs_slice_proxy60[15:8]};
assign benchsoc_ethcore_icmp_rx_depacketizer_source_param_code = {rhs_slice_proxy62[7:0]};
assign benchsoc_ethcore_icmp_rx_depacketizer_source_param_msgtype = {rhs_slice_proxy63[7:0]};
assign benchsoc_ethcore_icmp_rx_depacketizer_source_param_quench = {rhs_slice_proxy67[7:0], rhs_slice_proxy66[15:8], rhs_slice_proxy65[23:16], rhs_slice_proxy64[31:24]};
assign benchsoc_ethcore_icmp_rx_depacketizer_source_payload_error = benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_error;
assign benchsoc_ethcore_icmp_rx_depacketizer_sink_last_be = benchsoc_ethcore_icmp_rx_depacketizer_sink_last;
assign benchsoc_ethcore_icmp_rx_depacketizer_new_last_be = {benchsoc_ethcore_icmp_rx_depacketizer_sink_last_be};
assign benchsoc_ethcore_icmp_rx_depacketizer_is_in_copy = (benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing0 | benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_icmp_rx_depacketizer_source_last <= 1'd0;
	if (benchsoc_ethcore_icmp_rx_depacketizer_source_last_s) begin
		benchsoc_ethcore_icmp_rx_depacketizer_source_last <= benchsoc_ethcore_icmp_rx_depacketizer_source_last_b;
	end else begin
		benchsoc_ethcore_icmp_rx_depacketizer_source_last <= benchsoc_ethcore_icmp_rx_depacketizer_source_last_a;
	end
end
always @(*) begin
	benchsoc_ethcore_icmp_rx_depacketizer_source_last_b <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_sr_shift <= 1'd0;
	liteethicmprx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value1 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_source_valid <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing3 <= 1'd0;
	liteethicmprx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value2 <= 3'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_source_last_a <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value_ce2 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_source_last_s <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value3 <= 1'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce3 <= 1'd0;
	liteethicmprx_fsm0_next_state <= liteethicmprx_fsm0_state;
	case (liteethicmprx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_ethcore_icmp_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value2 <= (benchsoc_ethcore_icmp_rx_depacketizer_count + 1'd1);
				benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value_ce2 <= 1'd1;
				benchsoc_ethcore_icmp_rx_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_icmp_rx_depacketizer_count == 3'd7)) begin
					liteethicmprx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value2 <= (benchsoc_ethcore_icmp_rx_depacketizer_count + 1'd1);
					benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value_ce2 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_icmp_rx_depacketizer_source_valid <= (benchsoc_ethcore_icmp_rx_depacketizer_sink_valid | benchsoc_ethcore_icmp_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_icmp_rx_depacketizer_source_last_a <= (benchsoc_ethcore_icmp_rx_depacketizer_sink_last | benchsoc_ethcore_icmp_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= benchsoc_ethcore_icmp_rx_depacketizer_source_ready;
			benchsoc_ethcore_icmp_rx_depacketizer_source_payload_data <= benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_data;
			if ((benchsoc_ethcore_icmp_rx_depacketizer_source_valid & benchsoc_ethcore_icmp_rx_depacketizer_source_ready)) begin
				if (benchsoc_ethcore_icmp_rx_depacketizer_source_last) begin
					liteethicmprx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= 1'd1;
			benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value2 <= 1'd1;
			benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value_ce2 <= 1'd1;
			if (benchsoc_ethcore_icmp_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_icmp_rx_depacketizer_sr_shift <= 1'd1;
				benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value3 <= 1'd1;
				benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce3 <= 1'd1;
				if (1'd0) begin
					liteethicmprx_fsm0_next_state <= 2'd2;
				end else begin
					liteethicmprx_fsm0_next_state <= 1'd1;
				end
			end
		end
	endcase
	liteethicmprx_fsm1_next_state <= liteethicmprx_fsm1_state;
	case (liteethicmprx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_icmp_rx_depacketizer_source_last_b <= 1'd1;
			benchsoc_ethcore_icmp_rx_depacketizer_source_last_s <= 1'd1;
			benchsoc_ethcore_icmp_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be;
			benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_ethcore_icmp_rx_depacketizer_source_ready & benchsoc_ethcore_icmp_rx_depacketizer_source_valid)) begin
				liteethicmprx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_icmp_rx_depacketizer_sink_valid & benchsoc_ethcore_icmp_rx_depacketizer_sink_last) & (benchsoc_ethcore_icmp_rx_depacketizer_sink_last_be > benchsoc_ethcore_icmp_rx_depacketizer_new_last_be))) begin
				benchsoc_ethcore_icmp_rx_depacketizer_source_last_b <= 1'd0;
				benchsoc_ethcore_icmp_rx_depacketizer_source_last_s <= 1'd1;
				benchsoc_ethcore_icmp_rx_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_ethcore_icmp_rx_depacketizer_source_ready & benchsoc_ethcore_icmp_rx_depacketizer_source_valid) | ((~benchsoc_ethcore_icmp_rx_depacketizer_was_in_copy) & benchsoc_ethcore_icmp_rx_depacketizer_is_in_copy))) begin
					benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value1 <= benchsoc_ethcore_icmp_rx_depacketizer_new_last_be;
					benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value_ce1 <= 1'd1;
					liteethicmprx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_icmp_rx_depacketizer_sink_last) begin
					benchsoc_ethcore_icmp_rx_depacketizer_source_last_b <= 1'd1;
					benchsoc_ethcore_icmp_rx_depacketizer_source_last_s <= 1'd1;
					benchsoc_ethcore_icmp_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_icmp_rx_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing2 | (benchsoc_ethcore_icmp_rx_depacketizer_is_ongoing3 & (~benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle)))) begin
				benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= benchsoc_ethcore_icmp_rx_depacketizer_source_ready;
			end else begin
				benchsoc_ethcore_icmp_rx_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_icmp_rx_depacketizer_source_ready <= 1'd0;
	liteethicmprx_next_state <= 2'd0;
	benchsoc_ethcore_icmp_rx_source_source_valid <= 1'd0;
	liteethicmprx_next_state <= liteethicmprx_state;
	case (liteethicmprx_state)
		1'd1: begin
			benchsoc_ethcore_icmp_rx_source_source_valid <= benchsoc_ethcore_icmp_rx_depacketizer_source_valid;
			benchsoc_ethcore_icmp_rx_depacketizer_source_ready <= benchsoc_ethcore_icmp_rx_source_source_ready;
			if ((benchsoc_ethcore_icmp_rx_source_source_valid & benchsoc_ethcore_icmp_rx_source_source_ready)) begin
				if (benchsoc_ethcore_icmp_rx_source_source_last) begin
					liteethicmprx_next_state <= 1'd0;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_icmp_rx_depacketizer_source_ready <= 1'd1;
			if (((benchsoc_ethcore_icmp_rx_depacketizer_source_valid & benchsoc_ethcore_icmp_rx_depacketizer_source_last) & benchsoc_ethcore_icmp_rx_depacketizer_source_ready)) begin
				liteethicmprx_next_state <= 1'd0;
			end
		end
		default: begin
			if (benchsoc_ethcore_icmp_rx_depacketizer_source_valid) begin
				liteethicmprx_next_state <= 2'd2;
				if ((benchsoc_ethcore_icmp_rx_sink_sink_param_protocol == 1'd1)) begin
					if ((benchsoc_ethcore_icmp_rx_depacketizer_source_param_msgtype == 4'd8)) begin
						liteethicmprx_next_state <= 1'd1;
					end
				end
			end
		end
	endcase
end
assign benchsoc_ethcore_icmp_echo_buffer_sink_valid = benchsoc_ethcore_icmp_echo_sink_sink_valid;
assign benchsoc_ethcore_icmp_echo_sink_sink_ready = benchsoc_ethcore_icmp_echo_buffer_sink_ready;
assign benchsoc_ethcore_icmp_echo_buffer_sink_first = benchsoc_ethcore_icmp_echo_sink_sink_first;
assign benchsoc_ethcore_icmp_echo_buffer_sink_last = benchsoc_ethcore_icmp_echo_sink_sink_last;
assign benchsoc_ethcore_icmp_echo_buffer_sink_payload_data = benchsoc_ethcore_icmp_echo_sink_sink_payload_data;
assign benchsoc_ethcore_icmp_echo_buffer_sink_payload_last_be = benchsoc_ethcore_icmp_echo_sink_sink_payload_last_be;
assign benchsoc_ethcore_icmp_echo_buffer_sink_payload_error = benchsoc_ethcore_icmp_echo_sink_sink_payload_error;
assign benchsoc_ethcore_icmp_echo_buffer_sink_param_checksum = benchsoc_ethcore_icmp_echo_sink_sink_param_checksum;
assign benchsoc_ethcore_icmp_echo_buffer_sink_param_code = benchsoc_ethcore_icmp_echo_sink_sink_param_code;
assign benchsoc_ethcore_icmp_echo_buffer_sink_param_msgtype = benchsoc_ethcore_icmp_echo_sink_sink_param_msgtype;
assign benchsoc_ethcore_icmp_echo_buffer_sink_param_quench = benchsoc_ethcore_icmp_echo_sink_sink_param_quench;
assign benchsoc_ethcore_icmp_echo_buffer_sink_param_ip_address = benchsoc_ethcore_icmp_echo_sink_sink_param_ip_address;
assign benchsoc_ethcore_icmp_echo_buffer_sink_param_length = benchsoc_ethcore_icmp_echo_sink_sink_param_length;
assign benchsoc_ethcore_icmp_echo_source_source_valid = benchsoc_ethcore_icmp_echo_buffer_source_valid;
assign benchsoc_ethcore_icmp_echo_buffer_source_ready = benchsoc_ethcore_icmp_echo_source_source_ready;
assign benchsoc_ethcore_icmp_echo_source_source_first = benchsoc_ethcore_icmp_echo_buffer_source_first;
assign benchsoc_ethcore_icmp_echo_source_source_last = benchsoc_ethcore_icmp_echo_buffer_source_last;
assign benchsoc_ethcore_icmp_echo_source_source_payload_data = benchsoc_ethcore_icmp_echo_buffer_source_payload_data;
assign benchsoc_ethcore_icmp_echo_source_source_payload_last_be = benchsoc_ethcore_icmp_echo_buffer_source_payload_last_be;
assign benchsoc_ethcore_icmp_echo_source_source_payload_error = benchsoc_ethcore_icmp_echo_buffer_source_payload_error;
assign benchsoc_ethcore_icmp_echo_source_source_param_code = benchsoc_ethcore_icmp_echo_buffer_source_param_code;
assign benchsoc_ethcore_icmp_echo_source_source_param_quench = benchsoc_ethcore_icmp_echo_buffer_source_param_quench;
assign benchsoc_ethcore_icmp_echo_source_source_param_ip_address = benchsoc_ethcore_icmp_echo_buffer_source_param_ip_address;
assign benchsoc_ethcore_icmp_echo_source_source_param_length = benchsoc_ethcore_icmp_echo_buffer_source_param_length;
always @(*) begin
	benchsoc_ethcore_icmp_echo_source_source_param_msgtype <= 8'd0;
	benchsoc_ethcore_icmp_echo_source_source_param_msgtype <= benchsoc_ethcore_icmp_echo_buffer_source_param_msgtype;
	benchsoc_ethcore_icmp_echo_source_source_param_msgtype <= 1'd0;
end
assign benchsoc_ethcore_icmp_echo_source_source_param_checksum = ((benchsoc_ethcore_icmp_echo_buffer_source_param_checksum + 12'd2048) + (benchsoc_ethcore_icmp_echo_buffer_source_param_checksum >= 16'd63488));
assign benchsoc_ethcore_icmp_echo_buffer_syncfifo_din = {benchsoc_ethcore_icmp_echo_buffer_fifo_in_last, benchsoc_ethcore_icmp_echo_buffer_fifo_in_first, benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_length, benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_ip_address, benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_quench, benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_msgtype, benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_code, benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_checksum, benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_error, benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_last_be, benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_data};
assign {benchsoc_ethcore_icmp_echo_buffer_fifo_out_last, benchsoc_ethcore_icmp_echo_buffer_fifo_out_first, benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_length, benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_ip_address, benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_quench, benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_msgtype, benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_code, benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_checksum, benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_error, benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_last_be, benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_data} = benchsoc_ethcore_icmp_echo_buffer_syncfifo_dout;
assign benchsoc_ethcore_icmp_echo_buffer_sink_ready = benchsoc_ethcore_icmp_echo_buffer_syncfifo_writable;
assign benchsoc_ethcore_icmp_echo_buffer_syncfifo_we = benchsoc_ethcore_icmp_echo_buffer_sink_valid;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_first = benchsoc_ethcore_icmp_echo_buffer_sink_first;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_last = benchsoc_ethcore_icmp_echo_buffer_sink_last;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_data = benchsoc_ethcore_icmp_echo_buffer_sink_payload_data;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_last_be = benchsoc_ethcore_icmp_echo_buffer_sink_payload_last_be;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_payload_error = benchsoc_ethcore_icmp_echo_buffer_sink_payload_error;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_checksum = benchsoc_ethcore_icmp_echo_buffer_sink_param_checksum;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_code = benchsoc_ethcore_icmp_echo_buffer_sink_param_code;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_msgtype = benchsoc_ethcore_icmp_echo_buffer_sink_param_msgtype;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_quench = benchsoc_ethcore_icmp_echo_buffer_sink_param_quench;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_ip_address = benchsoc_ethcore_icmp_echo_buffer_sink_param_ip_address;
assign benchsoc_ethcore_icmp_echo_buffer_fifo_in_param_length = benchsoc_ethcore_icmp_echo_buffer_sink_param_length;
assign benchsoc_ethcore_icmp_echo_buffer_source_valid = benchsoc_ethcore_icmp_echo_buffer_readable;
assign benchsoc_ethcore_icmp_echo_buffer_source_first = benchsoc_ethcore_icmp_echo_buffer_fifo_out_first;
assign benchsoc_ethcore_icmp_echo_buffer_source_last = benchsoc_ethcore_icmp_echo_buffer_fifo_out_last;
assign benchsoc_ethcore_icmp_echo_buffer_source_payload_data = benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_data;
assign benchsoc_ethcore_icmp_echo_buffer_source_payload_last_be = benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_last_be;
assign benchsoc_ethcore_icmp_echo_buffer_source_payload_error = benchsoc_ethcore_icmp_echo_buffer_fifo_out_payload_error;
assign benchsoc_ethcore_icmp_echo_buffer_source_param_checksum = benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_checksum;
assign benchsoc_ethcore_icmp_echo_buffer_source_param_code = benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_code;
assign benchsoc_ethcore_icmp_echo_buffer_source_param_msgtype = benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_msgtype;
assign benchsoc_ethcore_icmp_echo_buffer_source_param_quench = benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_quench;
assign benchsoc_ethcore_icmp_echo_buffer_source_param_ip_address = benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_ip_address;
assign benchsoc_ethcore_icmp_echo_buffer_source_param_length = benchsoc_ethcore_icmp_echo_buffer_fifo_out_param_length;
assign benchsoc_ethcore_icmp_echo_buffer_re = benchsoc_ethcore_icmp_echo_buffer_source_ready;
assign benchsoc_ethcore_icmp_echo_buffer_syncfifo_re = (benchsoc_ethcore_icmp_echo_buffer_syncfifo_readable & ((~benchsoc_ethcore_icmp_echo_buffer_readable) | benchsoc_ethcore_icmp_echo_buffer_re));
assign benchsoc_ethcore_icmp_echo_buffer_level1 = (benchsoc_ethcore_icmp_echo_buffer_level0 + benchsoc_ethcore_icmp_echo_buffer_readable);
always @(*) begin
	benchsoc_ethcore_icmp_echo_buffer_wrport_adr <= 7'd0;
	if (benchsoc_ethcore_icmp_echo_buffer_replace) begin
		benchsoc_ethcore_icmp_echo_buffer_wrport_adr <= (benchsoc_ethcore_icmp_echo_buffer_produce - 1'd1);
	end else begin
		benchsoc_ethcore_icmp_echo_buffer_wrport_adr <= benchsoc_ethcore_icmp_echo_buffer_produce;
	end
end
assign benchsoc_ethcore_icmp_echo_buffer_wrport_dat_w = benchsoc_ethcore_icmp_echo_buffer_syncfifo_din;
assign benchsoc_ethcore_icmp_echo_buffer_wrport_we = (benchsoc_ethcore_icmp_echo_buffer_syncfifo_we & (benchsoc_ethcore_icmp_echo_buffer_syncfifo_writable | benchsoc_ethcore_icmp_echo_buffer_replace));
assign benchsoc_ethcore_icmp_echo_buffer_do_read = (benchsoc_ethcore_icmp_echo_buffer_syncfifo_readable & benchsoc_ethcore_icmp_echo_buffer_syncfifo_re);
assign benchsoc_ethcore_icmp_echo_buffer_rdport_adr = benchsoc_ethcore_icmp_echo_buffer_consume;
assign benchsoc_ethcore_icmp_echo_buffer_syncfifo_dout = benchsoc_ethcore_icmp_echo_buffer_rdport_dat_r;
assign benchsoc_ethcore_icmp_echo_buffer_rdport_re = benchsoc_ethcore_icmp_echo_buffer_do_read;
assign benchsoc_ethcore_icmp_echo_buffer_syncfifo_writable = (benchsoc_ethcore_icmp_echo_buffer_level0 != 8'd128);
assign benchsoc_ethcore_icmp_echo_buffer_syncfifo_readable = (benchsoc_ethcore_icmp_echo_buffer_level0 != 1'd0);
assign benchsoc_ethcore_ip_port_sink_valid = benchsoc_ethcore_tx_source_source_valid;
assign benchsoc_ethcore_tx_source_source_ready = benchsoc_ethcore_ip_port_sink_ready;
assign benchsoc_ethcore_ip_port_sink_first = benchsoc_ethcore_tx_source_source_first;
assign benchsoc_ethcore_ip_port_sink_last = benchsoc_ethcore_tx_source_source_last;
assign benchsoc_ethcore_ip_port_sink_payload_data = benchsoc_ethcore_tx_source_source_payload_data;
assign benchsoc_ethcore_ip_port_sink_payload_last_be = benchsoc_ethcore_tx_source_source_payload_last_be;
assign benchsoc_ethcore_ip_port_sink_payload_error = benchsoc_ethcore_tx_source_source_payload_error;
assign benchsoc_ethcore_ip_port_sink_param_length = benchsoc_ethcore_tx_source_source_param_length;
assign benchsoc_ethcore_ip_port_sink_param_protocol = benchsoc_ethcore_tx_source_source_param_protocol;
assign benchsoc_ethcore_ip_port_sink_param_ip_address = benchsoc_ethcore_tx_source_source_param_ip_address;
assign benchsoc_ethcore_rx_sink_sink_valid = benchsoc_ethcore_ip_port_source_valid;
assign benchsoc_ethcore_ip_port_source_ready = benchsoc_ethcore_rx_sink_sink_ready;
assign benchsoc_ethcore_rx_sink_sink_first = benchsoc_ethcore_ip_port_source_first;
assign benchsoc_ethcore_rx_sink_sink_last = benchsoc_ethcore_ip_port_source_last;
assign benchsoc_ethcore_rx_sink_sink_payload_data = benchsoc_ethcore_ip_port_source_payload_data;
assign benchsoc_ethcore_rx_sink_sink_payload_last_be = benchsoc_ethcore_ip_port_source_payload_last_be;
assign benchsoc_ethcore_rx_sink_sink_payload_error = benchsoc_ethcore_ip_port_source_payload_error;
assign benchsoc_ethcore_rx_sink_sink_param_length = benchsoc_ethcore_ip_port_source_param_length;
assign benchsoc_ethcore_rx_sink_sink_param_protocol = benchsoc_ethcore_ip_port_source_param_protocol;
assign benchsoc_ethcore_rx_sink_sink_param_ip_address = benchsoc_ethcore_ip_port_source_param_ip_address;
assign benchsoc_ethcore_tx_sink_sink_valid = benchsoc_ethcore_crossbar_source_valid;
assign benchsoc_ethcore_crossbar_source_ready = benchsoc_ethcore_tx_sink_sink_ready;
assign benchsoc_ethcore_tx_sink_sink_first = benchsoc_ethcore_crossbar_source_first;
assign benchsoc_ethcore_tx_sink_sink_last = benchsoc_ethcore_crossbar_source_last;
assign benchsoc_ethcore_tx_sink_sink_payload_data = benchsoc_ethcore_crossbar_source_payload_data;
assign benchsoc_ethcore_tx_sink_sink_payload_last_be = benchsoc_ethcore_crossbar_source_payload_last_be;
assign benchsoc_ethcore_tx_sink_sink_payload_error = benchsoc_ethcore_crossbar_source_payload_error;
assign benchsoc_ethcore_tx_sink_sink_param_src_port = benchsoc_ethcore_crossbar_source_param_src_port;
assign benchsoc_ethcore_tx_sink_sink_param_dst_port = benchsoc_ethcore_crossbar_source_param_dst_port;
assign benchsoc_ethcore_tx_sink_sink_param_ip_address = benchsoc_ethcore_crossbar_source_param_ip_address;
assign benchsoc_ethcore_tx_sink_sink_param_length = benchsoc_ethcore_crossbar_source_param_length;
assign benchsoc_ethcore_crossbar_sink_valid = benchsoc_ethcore_rx_source_source_valid;
assign benchsoc_ethcore_rx_source_source_ready = benchsoc_ethcore_crossbar_sink_ready;
assign benchsoc_ethcore_crossbar_sink_first = benchsoc_ethcore_rx_source_source_first;
assign benchsoc_ethcore_crossbar_sink_last = benchsoc_ethcore_rx_source_source_last;
assign benchsoc_ethcore_crossbar_sink_payload_data = benchsoc_ethcore_rx_source_source_payload_data;
assign benchsoc_ethcore_crossbar_sink_payload_last_be = benchsoc_ethcore_rx_source_source_payload_last_be;
assign benchsoc_ethcore_crossbar_sink_payload_error = benchsoc_ethcore_rx_source_source_payload_error;
assign benchsoc_ethcore_crossbar_sink_param_src_port = benchsoc_ethcore_rx_source_source_param_src_port;
assign benchsoc_ethcore_crossbar_sink_param_dst_port = benchsoc_ethcore_rx_source_source_param_dst_port;
assign benchsoc_ethcore_crossbar_sink_param_ip_address = benchsoc_ethcore_rx_source_source_param_ip_address;
assign benchsoc_ethcore_crossbar_sink_param_length = benchsoc_ethcore_rx_source_source_param_length;
assign benchsoc_ethcore_tx_packetizer_sink_valid = benchsoc_ethcore_tx_sink_sink_valid;
assign benchsoc_ethcore_tx_sink_sink_ready = benchsoc_ethcore_tx_packetizer_sink_ready;
assign benchsoc_ethcore_tx_packetizer_sink_last = benchsoc_ethcore_tx_sink_sink_last;
assign benchsoc_ethcore_tx_packetizer_sink_payload_data = benchsoc_ethcore_tx_sink_sink_payload_data;
assign benchsoc_ethcore_tx_packetizer_sink_payload_last_be = benchsoc_ethcore_tx_sink_sink_payload_last_be;
assign benchsoc_ethcore_tx_packetizer_sink_param_src_port = benchsoc_ethcore_tx_sink_sink_param_src_port;
assign benchsoc_ethcore_tx_packetizer_sink_param_dst_port = benchsoc_ethcore_tx_sink_sink_param_dst_port;
assign benchsoc_ethcore_tx_packetizer_sink_param_length = (benchsoc_ethcore_tx_sink_sink_param_length + 4'd8);
assign benchsoc_ethcore_tx_packetizer_sink_param_checksum = 1'd0;
always @(*) begin
	benchsoc_ethcore_tx_packetizer_header <= 64'd0;
	benchsoc_ethcore_tx_packetizer_header[63:48] <= {benchsoc_ethcore_tx_packetizer_sink_param_checksum[7:0], benchsoc_ethcore_tx_packetizer_sink_param_checksum[15:8]};
	benchsoc_ethcore_tx_packetizer_header[31:16] <= {benchsoc_ethcore_tx_packetizer_sink_param_dst_port[7:0], benchsoc_ethcore_tx_packetizer_sink_param_dst_port[15:8]};
	benchsoc_ethcore_tx_packetizer_header[47:32] <= {benchsoc_ethcore_tx_packetizer_sink_param_length[7:0], benchsoc_ethcore_tx_packetizer_sink_param_length[15:8]};
	benchsoc_ethcore_tx_packetizer_header[15:0] <= {benchsoc_ethcore_tx_packetizer_sink_param_src_port[7:0], benchsoc_ethcore_tx_packetizer_sink_param_src_port[15:8]};
end
assign benchsoc_ethcore_tx_packetizer_sink_last_be = benchsoc_ethcore_tx_packetizer_sink_last;
assign benchsoc_ethcore_tx_packetizer_new_last_be = {benchsoc_ethcore_tx_packetizer_sink_last_be};
assign benchsoc_ethcore_tx_packetizer_in_data_copy = (benchsoc_ethcore_tx_packetizer_is_ongoing0 | benchsoc_ethcore_tx_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_tx_packetizer_source_last <= 1'd0;
	if (benchsoc_ethcore_tx_packetizer_source_last_s) begin
		benchsoc_ethcore_tx_packetizer_source_last <= benchsoc_ethcore_tx_packetizer_source_last_b;
	end else begin
		benchsoc_ethcore_tx_packetizer_source_last <= benchsoc_ethcore_tx_packetizer_source_last_a;
	end
end
assign benchsoc_ethcore_tx_packetizer_source_payload_error = benchsoc_ethcore_tx_packetizer_sink_payload_error;
always @(*) begin
	liteethudp_liteethudptx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value0 <= 3'd0;
	benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_sink_ready <= 1'd0;
	benchsoc_ethcore_tx_packetizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value1 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_source_valid <= 1'd0;
	benchsoc_ethcore_tx_packetizer_source_last_a <= 1'd0;
	benchsoc_ethcore_tx_packetizer_source_last_b <= 1'd0;
	benchsoc_ethcore_tx_packetizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_tx_packetizer_source_last_s <= 1'd0;
	benchsoc_ethcore_tx_packetizer_source_payload_last_be <= 1'd0;
	liteethudp_liteethudptx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value0 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value_ce0 <= 1'd0;
	benchsoc_ethcore_tx_packetizer_sr_load <= 1'd0;
	benchsoc_ethcore_tx_packetizer_sr_shift <= 1'd0;
	liteethudp_liteethudptx_fsm0_next_state <= liteethudp_liteethudptx_fsm0_state;
	case (liteethudp_liteethudptx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_tx_packetizer_source_valid <= 1'd1;
			benchsoc_ethcore_tx_packetizer_source_last_a <= 1'd0;
			benchsoc_ethcore_tx_packetizer_source_payload_data <= benchsoc_ethcore_tx_packetizer_sr[63:8];
			if ((benchsoc_ethcore_tx_packetizer_source_valid & benchsoc_ethcore_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_tx_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_tx_packetizer_count == 3'd7)) begin
					benchsoc_ethcore_tx_packetizer_sr_shift <= 1'd0;
					liteethudp_liteethudptx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value0 <= (benchsoc_ethcore_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value_ce0 <= 1'd1;
				end else begin
					benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value0 <= (benchsoc_ethcore_tx_packetizer_count + 1'd1);
					benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value_ce0 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_tx_packetizer_source_valid <= benchsoc_ethcore_tx_packetizer_sink_valid;
			benchsoc_ethcore_tx_packetizer_source_last_a <= benchsoc_ethcore_tx_packetizer_sink_last;
			benchsoc_ethcore_tx_packetizer_source_payload_data <= benchsoc_ethcore_tx_packetizer_sink_payload_data;
			if ((benchsoc_ethcore_tx_packetizer_source_valid & benchsoc_ethcore_tx_packetizer_source_ready)) begin
				benchsoc_ethcore_tx_packetizer_sink_ready <= 1'd1;
				if (benchsoc_ethcore_tx_packetizer_source_last) begin
					liteethudp_liteethudptx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_tx_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_tx_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_tx_packetizer_sink_ready <= 1'd1;
			benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value0 <= 1'd1;
			benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value_ce0 <= 1'd1;
			if (benchsoc_ethcore_tx_packetizer_sink_valid) begin
				benchsoc_ethcore_tx_packetizer_sink_ready <= 1'd0;
				benchsoc_ethcore_tx_packetizer_source_valid <= 1'd1;
				benchsoc_ethcore_tx_packetizer_source_last_a <= 1'd0;
				benchsoc_ethcore_tx_packetizer_source_payload_data <= benchsoc_ethcore_tx_packetizer_header[7:0];
				if ((benchsoc_ethcore_tx_packetizer_source_valid & benchsoc_ethcore_tx_packetizer_source_ready)) begin
					benchsoc_ethcore_tx_packetizer_sr_load <= 1'd1;
					benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value1 <= 1'd1;
					benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value_ce1 <= 1'd1;
					if (1'd0) begin
						liteethudp_liteethudptx_fsm0_next_state <= 2'd2;
					end else begin
						liteethudp_liteethudptx_fsm0_next_state <= 1'd1;
					end
				end
			end
			benchsoc_ethcore_tx_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	liteethudp_liteethudptx_fsm1_next_state <= liteethudp_liteethudptx_fsm1_state;
	case (liteethudp_liteethudptx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_tx_packetizer_source_last_b <= 1'd1;
			benchsoc_ethcore_tx_packetizer_source_last_s <= 1'd1;
			benchsoc_ethcore_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_tx_packetizer_delayed_last_be;
			benchsoc_ethcore_tx_packetizer_sink_ready <= 1'd0;
			if (benchsoc_ethcore_tx_packetizer_source_ready) begin
				liteethudp_liteethudptx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_tx_packetizer_in_data_copy & benchsoc_ethcore_tx_packetizer_sink_last) & (benchsoc_ethcore_tx_packetizer_sink_last_be > benchsoc_ethcore_tx_packetizer_new_last_be))) begin
				benchsoc_ethcore_tx_packetizer_source_last_b <= 1'd0;
				benchsoc_ethcore_tx_packetizer_source_last_s <= 1'd1;
				benchsoc_ethcore_tx_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_ethcore_tx_packetizer_source_ready & benchsoc_ethcore_tx_packetizer_source_valid)) begin
					benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value0 <= benchsoc_ethcore_tx_packetizer_new_last_be;
					benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value_ce0 <= 1'd1;
					liteethudp_liteethudptx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_tx_packetizer_in_data_copy) begin
					benchsoc_ethcore_tx_packetizer_source_last_b <= benchsoc_ethcore_tx_packetizer_sink_last;
					benchsoc_ethcore_tx_packetizer_source_last_s <= 1'd1;
					benchsoc_ethcore_tx_packetizer_source_payload_last_be <= benchsoc_ethcore_tx_packetizer_new_last_be;
				end
			end
			if (benchsoc_ethcore_tx_packetizer_in_data_copy) begin
				benchsoc_ethcore_tx_packetizer_sink_ready <= benchsoc_ethcore_tx_packetizer_source_ready;
			end else begin
				if (benchsoc_ethcore_tx_packetizer_is_ongoing2) begin
					benchsoc_ethcore_tx_packetizer_sink_ready <= (~benchsoc_ethcore_tx_packetizer_sink_valid);
				end
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_tx_packetizer_source_ready <= 1'd0;
	benchsoc_ethcore_tx_source_source_payload_data <= 8'd0;
	benchsoc_ethcore_tx_source_source_payload_error <= 1'd0;
	benchsoc_ethcore_tx_source_source_param_length <= 16'd0;
	benchsoc_ethcore_tx_source_source_param_protocol <= 8'd0;
	benchsoc_ethcore_tx_source_source_param_ip_address <= 32'd0;
	benchsoc_ethcore_tx_source_source_valid <= 1'd0;
	benchsoc_ethcore_tx_source_source_first <= 1'd0;
	benchsoc_ethcore_tx_source_source_last <= 1'd0;
	liteethudp_liteethudptx_next_state <= 1'd0;
	benchsoc_ethcore_tx_source_source_payload_last_be <= 1'd0;
	liteethudp_liteethudptx_next_state <= liteethudp_liteethudptx_state;
	case (liteethudp_liteethudptx_state)
		1'd1: begin
			benchsoc_ethcore_tx_source_source_valid <= benchsoc_ethcore_tx_packetizer_source_valid;
			benchsoc_ethcore_tx_packetizer_source_ready <= benchsoc_ethcore_tx_source_source_ready;
			benchsoc_ethcore_tx_source_source_first <= benchsoc_ethcore_tx_packetizer_source_first;
			benchsoc_ethcore_tx_source_source_last <= benchsoc_ethcore_tx_packetizer_source_last;
			benchsoc_ethcore_tx_source_source_payload_data <= benchsoc_ethcore_tx_packetizer_source_payload_data;
			benchsoc_ethcore_tx_source_source_payload_last_be <= benchsoc_ethcore_tx_packetizer_source_payload_last_be;
			benchsoc_ethcore_tx_source_source_payload_error <= benchsoc_ethcore_tx_packetizer_source_payload_error;
			benchsoc_ethcore_tx_source_source_param_length <= benchsoc_ethcore_tx_packetizer_source_param_length;
			benchsoc_ethcore_tx_source_source_param_protocol <= benchsoc_ethcore_tx_packetizer_source_param_protocol;
			benchsoc_ethcore_tx_source_source_param_ip_address <= benchsoc_ethcore_tx_packetizer_source_param_ip_address;
			benchsoc_ethcore_tx_source_source_param_length <= benchsoc_ethcore_tx_packetizer_sink_param_length;
			benchsoc_ethcore_tx_source_source_param_protocol <= 5'd17;
			benchsoc_ethcore_tx_source_source_param_ip_address <= benchsoc_ethcore_tx_sink_sink_param_ip_address;
			if ((benchsoc_ethcore_tx_source_source_valid & benchsoc_ethcore_tx_source_source_ready)) begin
				if (benchsoc_ethcore_tx_source_source_last) begin
					liteethudp_liteethudptx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			if (benchsoc_ethcore_tx_packetizer_source_valid) begin
				liteethudp_liteethudptx_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_ethcore_rx_depacketizer_sink_valid = benchsoc_ethcore_rx_sink_sink_valid;
assign benchsoc_ethcore_rx_sink_sink_ready = benchsoc_ethcore_rx_depacketizer_sink_ready;
assign benchsoc_ethcore_rx_depacketizer_sink_first = benchsoc_ethcore_rx_sink_sink_first;
assign benchsoc_ethcore_rx_depacketizer_sink_last = benchsoc_ethcore_rx_sink_sink_last;
assign benchsoc_ethcore_rx_depacketizer_sink_payload_data = benchsoc_ethcore_rx_sink_sink_payload_data;
assign benchsoc_ethcore_rx_depacketizer_sink_payload_last_be = benchsoc_ethcore_rx_sink_sink_payload_last_be;
assign benchsoc_ethcore_rx_depacketizer_sink_payload_error = benchsoc_ethcore_rx_sink_sink_payload_error;
assign benchsoc_ethcore_rx_depacketizer_sink_param_length = benchsoc_ethcore_rx_sink_sink_param_length;
assign benchsoc_ethcore_rx_depacketizer_sink_param_protocol = benchsoc_ethcore_rx_sink_sink_param_protocol;
assign benchsoc_ethcore_rx_depacketizer_sink_param_ip_address = benchsoc_ethcore_rx_sink_sink_param_ip_address;
assign benchsoc_ethcore_rx_source_source_payload_data = benchsoc_ethcore_rx_depacketizer_source_payload_data;
assign benchsoc_ethcore_rx_source_source_payload_error = benchsoc_ethcore_rx_depacketizer_source_payload_error;
assign benchsoc_ethcore_rx_source_source_param_dst_port = benchsoc_ethcore_rx_depacketizer_source_param_dst_port;
assign benchsoc_ethcore_rx_source_source_param_src_port = benchsoc_ethcore_rx_depacketizer_source_param_src_port;
assign benchsoc_ethcore_rx_source_source_param_ip_address = benchsoc_ethcore_rx_sink_sink_param_ip_address;
assign benchsoc_ethcore_rx_source_source_param_length = (benchsoc_ethcore_rx_depacketizer_source_param_length - 4'd8);
assign benchsoc_ethcore_rx_depacketizer_header = benchsoc_ethcore_rx_depacketizer_sr;
assign benchsoc_ethcore_rx_depacketizer_source_param_checksum = {rhs_slice_proxy69[7:0], rhs_slice_proxy68[15:8]};
assign benchsoc_ethcore_rx_depacketizer_source_param_dst_port = {rhs_slice_proxy71[7:0], rhs_slice_proxy70[15:8]};
assign benchsoc_ethcore_rx_depacketizer_source_param_length = {rhs_slice_proxy73[7:0], rhs_slice_proxy72[15:8]};
assign benchsoc_ethcore_rx_depacketizer_source_param_src_port = {rhs_slice_proxy75[7:0], rhs_slice_proxy74[15:8]};
assign benchsoc_ethcore_rx_depacketizer_source_payload_error = benchsoc_ethcore_rx_depacketizer_sink_payload_error;
assign benchsoc_ethcore_rx_depacketizer_sink_last_be = benchsoc_ethcore_rx_depacketizer_sink_last;
assign benchsoc_ethcore_rx_depacketizer_new_last_be = {benchsoc_ethcore_rx_depacketizer_sink_last_be};
assign benchsoc_ethcore_rx_depacketizer_is_in_copy = (benchsoc_ethcore_rx_depacketizer_is_ongoing0 | benchsoc_ethcore_rx_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_ethcore_rx_depacketizer_source_last <= 1'd0;
	if (benchsoc_ethcore_rx_depacketizer_source_last_s) begin
		benchsoc_ethcore_rx_depacketizer_source_last <= benchsoc_ethcore_rx_depacketizer_source_last_b;
	end else begin
		benchsoc_ethcore_rx_depacketizer_source_last <= benchsoc_ethcore_rx_depacketizer_source_last_a;
	end
end
always @(*) begin
	liteethudp_liteethudprx_fsm0_next_state <= 2'd0;
	benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value2 <= 3'd0;
	benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value_ce2 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_is_ongoing0 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value3 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_is_ongoing1 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_sink_ready <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value_ce3 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_source_valid <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_is_ongoing3 <= 1'd0;
	liteethudp_liteethudprx_fsm1_next_state <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_source_last_a <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_source_payload_data <= 8'd0;
	benchsoc_ethcore_rx_depacketizer_source_last_b <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_source_payload_last_be <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_source_last_s <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value1 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value_ce1 <= 1'd0;
	benchsoc_ethcore_rx_depacketizer_sr_shift <= 1'd0;
	liteethudp_liteethudprx_fsm0_next_state <= liteethudp_liteethudprx_fsm0_state;
	case (liteethudp_liteethudprx_fsm0_state)
		1'd1: begin
			benchsoc_ethcore_rx_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_ethcore_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value2 <= (benchsoc_ethcore_rx_depacketizer_count + 1'd1);
				benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value_ce2 <= 1'd1;
				benchsoc_ethcore_rx_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_ethcore_rx_depacketizer_count == 3'd7)) begin
					liteethudp_liteethudprx_fsm0_next_state <= 2'd2;
					benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value2 <= (benchsoc_ethcore_rx_depacketizer_count + 1'd1);
					benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value_ce2 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_rx_depacketizer_source_valid <= (benchsoc_ethcore_rx_depacketizer_sink_valid | benchsoc_ethcore_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_rx_depacketizer_source_last_a <= (benchsoc_ethcore_rx_depacketizer_sink_last | benchsoc_ethcore_rx_depacketizer_sink_d_last);
			benchsoc_ethcore_rx_depacketizer_sink_ready <= benchsoc_ethcore_rx_depacketizer_source_ready;
			benchsoc_ethcore_rx_depacketizer_source_payload_data <= benchsoc_ethcore_rx_depacketizer_sink_payload_data;
			if ((benchsoc_ethcore_rx_depacketizer_source_valid & benchsoc_ethcore_rx_depacketizer_source_ready)) begin
				if (benchsoc_ethcore_rx_depacketizer_source_last) begin
					liteethudp_liteethudprx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_ethcore_rx_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_ethcore_rx_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_ethcore_rx_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_ethcore_rx_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_ethcore_rx_depacketizer_sink_ready <= 1'd1;
			benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value2 <= 1'd1;
			benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value_ce2 <= 1'd1;
			if (benchsoc_ethcore_rx_depacketizer_sink_valid) begin
				benchsoc_ethcore_rx_depacketizer_sr_shift <= 1'd1;
				benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value3 <= 1'd1;
				benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value_ce3 <= 1'd1;
				if (1'd0) begin
					liteethudp_liteethudprx_fsm0_next_state <= 2'd2;
				end else begin
					liteethudp_liteethudprx_fsm0_next_state <= 1'd1;
				end
			end
		end
	endcase
	liteethudp_liteethudprx_fsm1_next_state <= liteethudp_liteethudprx_fsm1_state;
	case (liteethudp_liteethudprx_fsm1_state)
		1'd1: begin
			benchsoc_ethcore_rx_depacketizer_source_last_b <= 1'd1;
			benchsoc_ethcore_rx_depacketizer_source_last_s <= 1'd1;
			benchsoc_ethcore_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_rx_depacketizer_delayed_last_be;
			benchsoc_ethcore_rx_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_ethcore_rx_depacketizer_source_ready & benchsoc_ethcore_rx_depacketizer_source_valid)) begin
				liteethudp_liteethudprx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_ethcore_rx_depacketizer_sink_valid & benchsoc_ethcore_rx_depacketizer_sink_last) & (benchsoc_ethcore_rx_depacketizer_sink_last_be > benchsoc_ethcore_rx_depacketizer_new_last_be))) begin
				benchsoc_ethcore_rx_depacketizer_source_last_b <= 1'd0;
				benchsoc_ethcore_rx_depacketizer_source_last_s <= 1'd1;
				benchsoc_ethcore_rx_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_ethcore_rx_depacketizer_source_ready & benchsoc_ethcore_rx_depacketizer_source_valid) | ((~benchsoc_ethcore_rx_depacketizer_was_in_copy) & benchsoc_ethcore_rx_depacketizer_is_in_copy))) begin
					benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value1 <= benchsoc_ethcore_rx_depacketizer_new_last_be;
					benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value_ce1 <= 1'd1;
					liteethudp_liteethudprx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_ethcore_rx_depacketizer_sink_last) begin
					benchsoc_ethcore_rx_depacketizer_source_last_b <= 1'd1;
					benchsoc_ethcore_rx_depacketizer_source_last_s <= 1'd1;
					benchsoc_ethcore_rx_depacketizer_source_payload_last_be <= benchsoc_ethcore_rx_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_ethcore_rx_depacketizer_is_ongoing2 | (benchsoc_ethcore_rx_depacketizer_is_ongoing3 & (~benchsoc_ethcore_rx_depacketizer_fsm_from_idle)))) begin
				benchsoc_ethcore_rx_depacketizer_sink_ready <= benchsoc_ethcore_rx_depacketizer_source_ready;
			end else begin
				benchsoc_ethcore_rx_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	benchsoc_ethcore_rx_source_source_last <= 1'd0;
	liteethudp_liteethudprx_next_state <= 2'd0;
	benchsoc_ethcore_rx_depacketizer_source_ready <= 1'd0;
	benchsoc_ethcore_rx_count_liteethudp_next_value <= 16'd0;
	benchsoc_ethcore_rx_count_liteethudp_next_value_ce <= 1'd0;
	benchsoc_ethcore_rx_source_source_valid <= 1'd0;
	liteethudp_liteethudprx_next_state <= liteethudp_liteethudprx_state;
	case (liteethudp_liteethudprx_state)
		1'd1: begin
			benchsoc_ethcore_rx_source_source_valid <= benchsoc_ethcore_rx_depacketizer_source_valid;
			benchsoc_ethcore_rx_depacketizer_source_ready <= benchsoc_ethcore_rx_source_source_ready;
			benchsoc_ethcore_rx_source_source_last <= (benchsoc_ethcore_rx_depacketizer_source_last | (benchsoc_ethcore_rx_count == (benchsoc_ethcore_rx_source_source_param_length - 1'd1)));
			if ((benchsoc_ethcore_rx_source_source_valid & benchsoc_ethcore_rx_source_source_ready)) begin
				benchsoc_ethcore_rx_count_liteethudp_next_value <= (benchsoc_ethcore_rx_count + 1'd1);
				benchsoc_ethcore_rx_count_liteethudp_next_value_ce <= 1'd1;
				if (benchsoc_ethcore_rx_depacketizer_source_last) begin
					liteethudp_liteethudprx_next_state <= 1'd0;
				end else begin
					if (benchsoc_ethcore_rx_source_source_last) begin
						liteethudp_liteethudprx_next_state <= 2'd2;
					end
				end
			end
		end
		2'd2: begin
			benchsoc_ethcore_rx_depacketizer_source_ready <= 1'd1;
			if (((benchsoc_ethcore_rx_depacketizer_source_valid & benchsoc_ethcore_rx_depacketizer_source_last) & benchsoc_ethcore_rx_depacketizer_source_ready)) begin
				liteethudp_liteethudprx_next_state <= 1'd0;
			end
		end
		default: begin
			benchsoc_ethcore_rx_count_liteethudp_next_value <= 1'd0;
			benchsoc_ethcore_rx_count_liteethudp_next_value_ce <= 1'd1;
			if (benchsoc_ethcore_rx_depacketizer_source_valid) begin
				liteethudp_liteethudprx_next_state <= 2'd2;
				if ((benchsoc_ethcore_rx_sink_sink_param_protocol == 5'd17)) begin
					liteethudp_liteethudprx_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign benchsoc_etherbone_tx_cdc_sink_sink_valid = benchsoc_etherbone_user_port_sink_valid;
assign benchsoc_etherbone_user_port_sink_ready = benchsoc_etherbone_tx_cdc_sink_sink_ready;
assign benchsoc_etherbone_tx_cdc_sink_sink_first = benchsoc_etherbone_user_port_sink_first;
assign benchsoc_etherbone_tx_cdc_sink_sink_last = benchsoc_etherbone_user_port_sink_last;
assign benchsoc_etherbone_tx_cdc_sink_sink_payload_data = benchsoc_etherbone_user_port_sink_payload_data;
assign benchsoc_etherbone_tx_cdc_sink_sink_payload_last_be = benchsoc_etherbone_user_port_sink_payload_last_be;
assign benchsoc_etherbone_tx_cdc_sink_sink_payload_error = benchsoc_etherbone_user_port_sink_payload_error;
assign benchsoc_etherbone_tx_cdc_sink_sink_param_src_port = benchsoc_etherbone_user_port_sink_param_src_port;
assign benchsoc_etherbone_tx_cdc_sink_sink_param_dst_port = benchsoc_etherbone_user_port_sink_param_dst_port;
assign benchsoc_etherbone_tx_cdc_sink_sink_param_ip_address = benchsoc_etherbone_user_port_sink_param_ip_address;
assign benchsoc_etherbone_tx_cdc_sink_sink_param_length = benchsoc_etherbone_user_port_sink_param_length;
assign benchsoc_etherbone_tx_converter_sink_valid = benchsoc_etherbone_tx_cdc_source_source_valid;
assign benchsoc_etherbone_tx_cdc_source_source_ready = benchsoc_etherbone_tx_converter_sink_ready;
assign benchsoc_etherbone_tx_converter_sink_first = benchsoc_etherbone_tx_cdc_source_source_first;
assign benchsoc_etherbone_tx_converter_sink_last = benchsoc_etherbone_tx_cdc_source_source_last;
assign benchsoc_etherbone_tx_converter_sink_payload_data = benchsoc_etherbone_tx_cdc_source_source_payload_data;
assign benchsoc_etherbone_tx_converter_sink_payload_last_be = benchsoc_etherbone_tx_cdc_source_source_payload_last_be;
assign benchsoc_etherbone_tx_converter_sink_payload_error = benchsoc_etherbone_tx_cdc_source_source_payload_error;
assign benchsoc_etherbone_tx_converter_sink_param_src_port = benchsoc_etherbone_tx_cdc_source_source_param_src_port;
assign benchsoc_etherbone_tx_converter_sink_param_dst_port = benchsoc_etherbone_tx_cdc_source_source_param_dst_port;
assign benchsoc_etherbone_tx_converter_sink_param_ip_address = benchsoc_etherbone_tx_cdc_source_source_param_ip_address;
assign benchsoc_etherbone_tx_converter_sink_param_length = benchsoc_etherbone_tx_cdc_source_source_param_length;
assign benchsoc_etherbone_internal_port_sink_valid = benchsoc_etherbone_tx_converter_source_valid;
assign benchsoc_etherbone_tx_converter_source_ready = benchsoc_etherbone_internal_port_sink_ready;
assign benchsoc_etherbone_internal_port_sink_first = benchsoc_etherbone_tx_converter_source_first;
assign benchsoc_etherbone_internal_port_sink_last = benchsoc_etherbone_tx_converter_source_last;
assign benchsoc_etherbone_internal_port_sink_payload_data = benchsoc_etherbone_tx_converter_source_payload_data;
assign benchsoc_etherbone_internal_port_sink_payload_last_be = benchsoc_etherbone_tx_converter_source_payload_last_be;
assign benchsoc_etherbone_internal_port_sink_payload_error = benchsoc_etherbone_tx_converter_source_payload_error;
assign benchsoc_etherbone_internal_port_sink_param_src_port = benchsoc_etherbone_tx_converter_source_param_src_port;
assign benchsoc_etherbone_internal_port_sink_param_dst_port = benchsoc_etherbone_tx_converter_source_param_dst_port;
assign benchsoc_etherbone_internal_port_sink_param_ip_address = benchsoc_etherbone_tx_converter_source_param_ip_address;
assign benchsoc_etherbone_internal_port_sink_param_length = benchsoc_etherbone_tx_converter_source_param_length;
assign benchsoc_etherbone_rx_converter_sink_valid = benchsoc_etherbone_internal_port_source_valid;
assign benchsoc_etherbone_internal_port_source_ready = benchsoc_etherbone_rx_converter_sink_ready;
assign benchsoc_etherbone_rx_converter_sink_first = benchsoc_etherbone_internal_port_source_first;
assign benchsoc_etherbone_rx_converter_sink_last = benchsoc_etherbone_internal_port_source_last;
assign benchsoc_etherbone_rx_converter_sink_payload_data = benchsoc_etherbone_internal_port_source_payload_data;
assign benchsoc_etherbone_rx_converter_sink_payload_last_be = benchsoc_etherbone_internal_port_source_payload_last_be;
assign benchsoc_etherbone_rx_converter_sink_payload_error = benchsoc_etherbone_internal_port_source_payload_error;
assign benchsoc_etherbone_rx_converter_sink_param_src_port = benchsoc_etherbone_internal_port_source_param_src_port;
assign benchsoc_etherbone_rx_converter_sink_param_dst_port = benchsoc_etherbone_internal_port_source_param_dst_port;
assign benchsoc_etherbone_rx_converter_sink_param_ip_address = benchsoc_etherbone_internal_port_source_param_ip_address;
assign benchsoc_etherbone_rx_converter_sink_param_length = benchsoc_etherbone_internal_port_source_param_length;
assign benchsoc_etherbone_rx_cdc_sink_sink_valid = benchsoc_etherbone_rx_converter_source_valid;
assign benchsoc_etherbone_rx_converter_source_ready = benchsoc_etherbone_rx_cdc_sink_sink_ready;
assign benchsoc_etherbone_rx_cdc_sink_sink_first = benchsoc_etherbone_rx_converter_source_first;
assign benchsoc_etherbone_rx_cdc_sink_sink_last = benchsoc_etherbone_rx_converter_source_last;
assign benchsoc_etherbone_rx_cdc_sink_sink_payload_data = benchsoc_etherbone_rx_converter_source_payload_data;
assign benchsoc_etherbone_rx_cdc_sink_sink_payload_last_be = benchsoc_etherbone_rx_converter_source_payload_last_be;
assign benchsoc_etherbone_rx_cdc_sink_sink_payload_error = benchsoc_etherbone_rx_converter_source_payload_error;
assign benchsoc_etherbone_rx_cdc_sink_sink_param_src_port = benchsoc_etherbone_rx_converter_source_param_src_port;
assign benchsoc_etherbone_rx_cdc_sink_sink_param_dst_port = benchsoc_etherbone_rx_converter_source_param_dst_port;
assign benchsoc_etherbone_rx_cdc_sink_sink_param_ip_address = benchsoc_etherbone_rx_converter_source_param_ip_address;
assign benchsoc_etherbone_rx_cdc_sink_sink_param_length = benchsoc_etherbone_rx_converter_source_param_length;
assign benchsoc_etherbone_user_port_source_valid = benchsoc_etherbone_rx_cdc_source_source_valid;
assign benchsoc_etherbone_rx_cdc_source_source_ready = benchsoc_etherbone_user_port_source_ready;
assign benchsoc_etherbone_user_port_source_first = benchsoc_etherbone_rx_cdc_source_source_first;
assign benchsoc_etherbone_user_port_source_last = benchsoc_etherbone_rx_cdc_source_source_last;
assign benchsoc_etherbone_user_port_source_payload_data = benchsoc_etherbone_rx_cdc_source_source_payload_data;
assign benchsoc_etherbone_user_port_source_payload_last_be = benchsoc_etherbone_rx_cdc_source_source_payload_last_be;
assign benchsoc_etherbone_user_port_source_payload_error = benchsoc_etherbone_rx_cdc_source_source_payload_error;
assign benchsoc_etherbone_user_port_source_param_src_port = benchsoc_etherbone_rx_cdc_source_source_param_src_port;
assign benchsoc_etherbone_user_port_source_param_dst_port = benchsoc_etherbone_rx_cdc_source_source_param_dst_port;
assign benchsoc_etherbone_user_port_source_param_ip_address = benchsoc_etherbone_rx_cdc_source_source_param_ip_address;
assign benchsoc_etherbone_user_port_source_param_length = benchsoc_etherbone_rx_cdc_source_source_param_length;
always @(*) begin
	liteethudp_sel <= 1'd0;
	if ((benchsoc_ethcore_crossbar_sink_param_dst_port == 11'd1234)) begin
		liteethudp_sel <= 1'd1;
	end
end
assign benchsoc_etherbone_tx_cdc_cdc_sink_valid = benchsoc_etherbone_tx_cdc_sink_sink_valid;
assign benchsoc_etherbone_tx_cdc_sink_sink_ready = benchsoc_etherbone_tx_cdc_cdc_sink_ready;
assign benchsoc_etherbone_tx_cdc_cdc_sink_first = benchsoc_etherbone_tx_cdc_sink_sink_first;
assign benchsoc_etherbone_tx_cdc_cdc_sink_last = benchsoc_etherbone_tx_cdc_sink_sink_last;
assign benchsoc_etherbone_tx_cdc_cdc_sink_payload_data = benchsoc_etherbone_tx_cdc_sink_sink_payload_data;
assign benchsoc_etherbone_tx_cdc_cdc_sink_payload_last_be = benchsoc_etherbone_tx_cdc_sink_sink_payload_last_be;
assign benchsoc_etherbone_tx_cdc_cdc_sink_payload_error = benchsoc_etherbone_tx_cdc_sink_sink_payload_error;
assign benchsoc_etherbone_tx_cdc_cdc_sink_param_src_port = benchsoc_etherbone_tx_cdc_sink_sink_param_src_port;
assign benchsoc_etherbone_tx_cdc_cdc_sink_param_dst_port = benchsoc_etherbone_tx_cdc_sink_sink_param_dst_port;
assign benchsoc_etherbone_tx_cdc_cdc_sink_param_ip_address = benchsoc_etherbone_tx_cdc_sink_sink_param_ip_address;
assign benchsoc_etherbone_tx_cdc_cdc_sink_param_length = benchsoc_etherbone_tx_cdc_sink_sink_param_length;
assign benchsoc_etherbone_tx_cdc_source_source_valid = benchsoc_etherbone_tx_cdc_cdc_source_valid;
assign benchsoc_etherbone_tx_cdc_cdc_source_ready = benchsoc_etherbone_tx_cdc_source_source_ready;
assign benchsoc_etherbone_tx_cdc_source_source_first = benchsoc_etherbone_tx_cdc_cdc_source_first;
assign benchsoc_etherbone_tx_cdc_source_source_last = benchsoc_etherbone_tx_cdc_cdc_source_last;
assign benchsoc_etherbone_tx_cdc_source_source_payload_data = benchsoc_etherbone_tx_cdc_cdc_source_payload_data;
assign benchsoc_etherbone_tx_cdc_source_source_payload_last_be = benchsoc_etherbone_tx_cdc_cdc_source_payload_last_be;
assign benchsoc_etherbone_tx_cdc_source_source_payload_error = benchsoc_etherbone_tx_cdc_cdc_source_payload_error;
assign benchsoc_etherbone_tx_cdc_source_source_param_src_port = benchsoc_etherbone_tx_cdc_cdc_source_param_src_port;
assign benchsoc_etherbone_tx_cdc_source_source_param_dst_port = benchsoc_etherbone_tx_cdc_cdc_source_param_dst_port;
assign benchsoc_etherbone_tx_cdc_source_source_param_ip_address = benchsoc_etherbone_tx_cdc_cdc_source_param_ip_address;
assign benchsoc_etherbone_tx_cdc_source_source_param_length = benchsoc_etherbone_tx_cdc_cdc_source_param_length;
assign benchsoc_etherbone_tx_cdc_cdc_asyncfifo_din = {benchsoc_etherbone_tx_cdc_cdc_fifo_in_last, benchsoc_etherbone_tx_cdc_cdc_fifo_in_first, benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_length, benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_ip_address, benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_dst_port, benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_src_port, benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_error, benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_last_be, benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_data};
assign {benchsoc_etherbone_tx_cdc_cdc_fifo_out_last, benchsoc_etherbone_tx_cdc_cdc_fifo_out_first, benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_length, benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_ip_address, benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_dst_port, benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_src_port, benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_error, benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_last_be, benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_data} = benchsoc_etherbone_tx_cdc_cdc_asyncfifo_dout;
assign benchsoc_etherbone_tx_cdc_cdc_sink_ready = benchsoc_etherbone_tx_cdc_cdc_asyncfifo_writable;
assign benchsoc_etherbone_tx_cdc_cdc_asyncfifo_we = benchsoc_etherbone_tx_cdc_cdc_sink_valid;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_first = benchsoc_etherbone_tx_cdc_cdc_sink_first;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_last = benchsoc_etherbone_tx_cdc_cdc_sink_last;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_data = benchsoc_etherbone_tx_cdc_cdc_sink_payload_data;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_last_be = benchsoc_etherbone_tx_cdc_cdc_sink_payload_last_be;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_payload_error = benchsoc_etherbone_tx_cdc_cdc_sink_payload_error;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_src_port = benchsoc_etherbone_tx_cdc_cdc_sink_param_src_port;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_dst_port = benchsoc_etherbone_tx_cdc_cdc_sink_param_dst_port;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_ip_address = benchsoc_etherbone_tx_cdc_cdc_sink_param_ip_address;
assign benchsoc_etherbone_tx_cdc_cdc_fifo_in_param_length = benchsoc_etherbone_tx_cdc_cdc_sink_param_length;
assign benchsoc_etherbone_tx_cdc_cdc_source_valid = benchsoc_etherbone_tx_cdc_cdc_asyncfifo_readable;
assign benchsoc_etherbone_tx_cdc_cdc_source_first = benchsoc_etherbone_tx_cdc_cdc_fifo_out_first;
assign benchsoc_etherbone_tx_cdc_cdc_source_last = benchsoc_etherbone_tx_cdc_cdc_fifo_out_last;
assign benchsoc_etherbone_tx_cdc_cdc_source_payload_data = benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_data;
assign benchsoc_etherbone_tx_cdc_cdc_source_payload_last_be = benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_last_be;
assign benchsoc_etherbone_tx_cdc_cdc_source_payload_error = benchsoc_etherbone_tx_cdc_cdc_fifo_out_payload_error;
assign benchsoc_etherbone_tx_cdc_cdc_source_param_src_port = benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_src_port;
assign benchsoc_etherbone_tx_cdc_cdc_source_param_dst_port = benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_dst_port;
assign benchsoc_etherbone_tx_cdc_cdc_source_param_ip_address = benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_ip_address;
assign benchsoc_etherbone_tx_cdc_cdc_source_param_length = benchsoc_etherbone_tx_cdc_cdc_fifo_out_param_length;
assign benchsoc_etherbone_tx_cdc_cdc_asyncfifo_re = benchsoc_etherbone_tx_cdc_cdc_source_ready;
assign benchsoc_etherbone_tx_cdc_cdc_graycounter0_ce = (benchsoc_etherbone_tx_cdc_cdc_asyncfifo_writable & benchsoc_etherbone_tx_cdc_cdc_asyncfifo_we);
assign benchsoc_etherbone_tx_cdc_cdc_graycounter1_ce = (benchsoc_etherbone_tx_cdc_cdc_asyncfifo_readable & benchsoc_etherbone_tx_cdc_cdc_asyncfifo_re);
assign benchsoc_etherbone_tx_cdc_cdc_asyncfifo_writable = (((benchsoc_etherbone_tx_cdc_cdc_graycounter0_q[2] == benchsoc_etherbone_tx_cdc_cdc_consume_wdomain[2]) | (benchsoc_etherbone_tx_cdc_cdc_graycounter0_q[1] == benchsoc_etherbone_tx_cdc_cdc_consume_wdomain[1])) | (benchsoc_etherbone_tx_cdc_cdc_graycounter0_q[0] != benchsoc_etherbone_tx_cdc_cdc_consume_wdomain[0]));
assign benchsoc_etherbone_tx_cdc_cdc_asyncfifo_readable = (benchsoc_etherbone_tx_cdc_cdc_graycounter1_q != benchsoc_etherbone_tx_cdc_cdc_produce_rdomain);
assign benchsoc_etherbone_tx_cdc_cdc_wrport_adr = benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_binary[1:0];
assign benchsoc_etherbone_tx_cdc_cdc_wrport_dat_w = benchsoc_etherbone_tx_cdc_cdc_asyncfifo_din;
assign benchsoc_etherbone_tx_cdc_cdc_wrport_we = benchsoc_etherbone_tx_cdc_cdc_graycounter0_ce;
assign benchsoc_etherbone_tx_cdc_cdc_rdport_adr = benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary[1:0];
assign benchsoc_etherbone_tx_cdc_cdc_asyncfifo_dout = benchsoc_etherbone_tx_cdc_cdc_rdport_dat_r;
always @(*) begin
	benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary <= 3'd0;
	if (benchsoc_etherbone_tx_cdc_cdc_graycounter0_ce) begin
		benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary <= (benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary <= benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_binary;
	end
end
assign benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next = (benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary ^ benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary <= 3'd0;
	if (benchsoc_etherbone_tx_cdc_cdc_graycounter1_ce) begin
		benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary <= (benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary <= benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_binary;
	end
end
assign benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next = (benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary ^ benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary[2:1]);
assign benchsoc_etherbone_tx_converter_converter_sink_valid = benchsoc_etherbone_tx_converter_sink_valid;
assign benchsoc_etherbone_tx_converter_converter_sink_first = benchsoc_etherbone_tx_converter_sink_first;
assign benchsoc_etherbone_tx_converter_converter_sink_last = benchsoc_etherbone_tx_converter_sink_last;
assign benchsoc_etherbone_tx_converter_sink_ready = benchsoc_etherbone_tx_converter_converter_sink_ready;
always @(*) begin
	benchsoc_etherbone_tx_converter_converter_sink_payload_data <= 40'd0;
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[7:0] <= benchsoc_etherbone_tx_converter_sink_payload_data[7:0];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[8] <= benchsoc_etherbone_tx_converter_sink_payload_last_be[0];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[9] <= benchsoc_etherbone_tx_converter_sink_payload_error[0];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[17:10] <= benchsoc_etherbone_tx_converter_sink_payload_data[15:8];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[18] <= benchsoc_etherbone_tx_converter_sink_payload_last_be[1];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[19] <= benchsoc_etherbone_tx_converter_sink_payload_error[1];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[27:20] <= benchsoc_etherbone_tx_converter_sink_payload_data[23:16];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[28] <= benchsoc_etherbone_tx_converter_sink_payload_last_be[2];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[29] <= benchsoc_etherbone_tx_converter_sink_payload_error[2];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[37:30] <= benchsoc_etherbone_tx_converter_sink_payload_data[31:24];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[38] <= benchsoc_etherbone_tx_converter_sink_payload_last_be[3];
	benchsoc_etherbone_tx_converter_converter_sink_payload_data[39] <= benchsoc_etherbone_tx_converter_sink_payload_error[3];
end
assign benchsoc_etherbone_tx_converter_source_valid = benchsoc_etherbone_tx_converter_source_source_valid;
assign benchsoc_etherbone_tx_converter_source_first = benchsoc_etherbone_tx_converter_source_source_first;
assign benchsoc_etherbone_tx_converter_source_last = benchsoc_etherbone_tx_converter_source_source_last;
assign benchsoc_etherbone_tx_converter_source_source_ready = benchsoc_etherbone_tx_converter_source_ready;
assign {benchsoc_etherbone_tx_converter_source_payload_error, benchsoc_etherbone_tx_converter_source_payload_last_be, benchsoc_etherbone_tx_converter_source_payload_data} = benchsoc_etherbone_tx_converter_source_source_payload_data;
assign benchsoc_etherbone_tx_converter_source_param_src_port = benchsoc_etherbone_tx_converter_sink_param_src_port;
assign benchsoc_etherbone_tx_converter_source_param_dst_port = benchsoc_etherbone_tx_converter_sink_param_dst_port;
assign benchsoc_etherbone_tx_converter_source_param_ip_address = benchsoc_etherbone_tx_converter_sink_param_ip_address;
assign benchsoc_etherbone_tx_converter_source_param_length = benchsoc_etherbone_tx_converter_sink_param_length;
assign benchsoc_etherbone_tx_converter_source_source_valid = benchsoc_etherbone_tx_converter_converter_source_valid;
assign benchsoc_etherbone_tx_converter_converter_source_ready = benchsoc_etherbone_tx_converter_source_source_ready;
assign benchsoc_etherbone_tx_converter_source_source_first = benchsoc_etherbone_tx_converter_converter_source_first;
assign benchsoc_etherbone_tx_converter_source_source_last = benchsoc_etherbone_tx_converter_converter_source_last;
assign benchsoc_etherbone_tx_converter_source_source_payload_data = benchsoc_etherbone_tx_converter_converter_source_payload_data;
assign benchsoc_etherbone_tx_converter_converter_first = (benchsoc_etherbone_tx_converter_converter_mux == 1'd0);
assign benchsoc_etherbone_tx_converter_converter_last = (benchsoc_etherbone_tx_converter_converter_mux == 2'd3);
assign benchsoc_etherbone_tx_converter_converter_source_valid = benchsoc_etherbone_tx_converter_converter_sink_valid;
assign benchsoc_etherbone_tx_converter_converter_source_first = (benchsoc_etherbone_tx_converter_converter_sink_first & benchsoc_etherbone_tx_converter_converter_first);
assign benchsoc_etherbone_tx_converter_converter_source_last = (benchsoc_etherbone_tx_converter_converter_sink_last & benchsoc_etherbone_tx_converter_converter_last);
assign benchsoc_etherbone_tx_converter_converter_sink_ready = (benchsoc_etherbone_tx_converter_converter_last & benchsoc_etherbone_tx_converter_converter_source_ready);
always @(*) begin
	benchsoc_etherbone_tx_converter_converter_source_payload_data <= 10'd0;
	case (benchsoc_etherbone_tx_converter_converter_mux)
		1'd0: begin
			benchsoc_etherbone_tx_converter_converter_source_payload_data <= benchsoc_etherbone_tx_converter_converter_sink_payload_data[9:0];
		end
		1'd1: begin
			benchsoc_etherbone_tx_converter_converter_source_payload_data <= benchsoc_etherbone_tx_converter_converter_sink_payload_data[19:10];
		end
		2'd2: begin
			benchsoc_etherbone_tx_converter_converter_source_payload_data <= benchsoc_etherbone_tx_converter_converter_sink_payload_data[29:20];
		end
		default: begin
			benchsoc_etherbone_tx_converter_converter_source_payload_data <= benchsoc_etherbone_tx_converter_converter_sink_payload_data[39:30];
		end
	endcase
end
assign benchsoc_etherbone_tx_converter_converter_source_payload_valid_token_count = benchsoc_etherbone_tx_converter_converter_last;
assign benchsoc_etherbone_rx_converter_converter_sink_valid = benchsoc_etherbone_rx_converter_sink_valid;
assign benchsoc_etherbone_rx_converter_converter_sink_first = benchsoc_etherbone_rx_converter_sink_first;
assign benchsoc_etherbone_rx_converter_converter_sink_last = benchsoc_etherbone_rx_converter_sink_last;
assign benchsoc_etherbone_rx_converter_sink_ready = benchsoc_etherbone_rx_converter_converter_sink_ready;
assign benchsoc_etherbone_rx_converter_converter_sink_payload_data = {benchsoc_etherbone_rx_converter_sink_payload_error, benchsoc_etherbone_rx_converter_sink_payload_last_be, benchsoc_etherbone_rx_converter_sink_payload_data};
assign benchsoc_etherbone_rx_converter_source_valid = benchsoc_etherbone_rx_converter_source_source_valid;
assign benchsoc_etherbone_rx_converter_source_first = benchsoc_etherbone_rx_converter_source_source_first;
assign benchsoc_etherbone_rx_converter_source_last = benchsoc_etherbone_rx_converter_source_source_last;
assign benchsoc_etherbone_rx_converter_source_source_ready = benchsoc_etherbone_rx_converter_source_ready;
always @(*) begin
	benchsoc_etherbone_rx_converter_source_payload_data <= 32'd0;
	benchsoc_etherbone_rx_converter_source_payload_data[7:0] <= benchsoc_etherbone_rx_converter_source_source_payload_data[7:0];
	benchsoc_etherbone_rx_converter_source_payload_data[15:8] <= benchsoc_etherbone_rx_converter_source_source_payload_data[17:10];
	benchsoc_etherbone_rx_converter_source_payload_data[23:16] <= benchsoc_etherbone_rx_converter_source_source_payload_data[27:20];
	benchsoc_etherbone_rx_converter_source_payload_data[31:24] <= benchsoc_etherbone_rx_converter_source_source_payload_data[37:30];
end
always @(*) begin
	benchsoc_etherbone_rx_converter_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_rx_converter_source_payload_last_be[0] <= benchsoc_etherbone_rx_converter_source_source_payload_data[8];
	benchsoc_etherbone_rx_converter_source_payload_last_be[1] <= benchsoc_etherbone_rx_converter_source_source_payload_data[18];
	benchsoc_etherbone_rx_converter_source_payload_last_be[2] <= benchsoc_etherbone_rx_converter_source_source_payload_data[28];
	benchsoc_etherbone_rx_converter_source_payload_last_be[3] <= benchsoc_etherbone_rx_converter_source_source_payload_data[38];
end
always @(*) begin
	benchsoc_etherbone_rx_converter_source_payload_error <= 4'd0;
	benchsoc_etherbone_rx_converter_source_payload_error[0] <= benchsoc_etherbone_rx_converter_source_source_payload_data[9];
	benchsoc_etherbone_rx_converter_source_payload_error[1] <= benchsoc_etherbone_rx_converter_source_source_payload_data[19];
	benchsoc_etherbone_rx_converter_source_payload_error[2] <= benchsoc_etherbone_rx_converter_source_source_payload_data[29];
	benchsoc_etherbone_rx_converter_source_payload_error[3] <= benchsoc_etherbone_rx_converter_source_source_payload_data[39];
end
assign benchsoc_etherbone_rx_converter_source_source_valid = benchsoc_etherbone_rx_converter_converter_source_valid;
assign benchsoc_etherbone_rx_converter_converter_source_ready = benchsoc_etherbone_rx_converter_source_source_ready;
assign benchsoc_etherbone_rx_converter_source_source_first = benchsoc_etherbone_rx_converter_converter_source_first;
assign benchsoc_etherbone_rx_converter_source_source_last = benchsoc_etherbone_rx_converter_converter_source_last;
assign benchsoc_etherbone_rx_converter_source_source_payload_data = benchsoc_etherbone_rx_converter_converter_source_payload_data;
assign benchsoc_etherbone_rx_converter_converter_sink_ready = ((~benchsoc_etherbone_rx_converter_converter_strobe_all) | benchsoc_etherbone_rx_converter_converter_source_ready);
assign benchsoc_etherbone_rx_converter_converter_source_valid = benchsoc_etherbone_rx_converter_converter_strobe_all;
assign benchsoc_etherbone_rx_converter_converter_load_part = (benchsoc_etherbone_rx_converter_converter_sink_valid & benchsoc_etherbone_rx_converter_converter_sink_ready);
assign benchsoc_etherbone_rx_cdc_cdc_sink_valid = benchsoc_etherbone_rx_cdc_sink_sink_valid;
assign benchsoc_etherbone_rx_cdc_sink_sink_ready = benchsoc_etherbone_rx_cdc_cdc_sink_ready;
assign benchsoc_etherbone_rx_cdc_cdc_sink_first = benchsoc_etherbone_rx_cdc_sink_sink_first;
assign benchsoc_etherbone_rx_cdc_cdc_sink_last = benchsoc_etherbone_rx_cdc_sink_sink_last;
assign benchsoc_etherbone_rx_cdc_cdc_sink_payload_data = benchsoc_etherbone_rx_cdc_sink_sink_payload_data;
assign benchsoc_etherbone_rx_cdc_cdc_sink_payload_last_be = benchsoc_etherbone_rx_cdc_sink_sink_payload_last_be;
assign benchsoc_etherbone_rx_cdc_cdc_sink_payload_error = benchsoc_etherbone_rx_cdc_sink_sink_payload_error;
assign benchsoc_etherbone_rx_cdc_cdc_sink_param_src_port = benchsoc_etherbone_rx_cdc_sink_sink_param_src_port;
assign benchsoc_etherbone_rx_cdc_cdc_sink_param_dst_port = benchsoc_etherbone_rx_cdc_sink_sink_param_dst_port;
assign benchsoc_etherbone_rx_cdc_cdc_sink_param_ip_address = benchsoc_etherbone_rx_cdc_sink_sink_param_ip_address;
assign benchsoc_etherbone_rx_cdc_cdc_sink_param_length = benchsoc_etherbone_rx_cdc_sink_sink_param_length;
assign benchsoc_etherbone_rx_cdc_source_source_valid = benchsoc_etherbone_rx_cdc_cdc_source_valid;
assign benchsoc_etherbone_rx_cdc_cdc_source_ready = benchsoc_etherbone_rx_cdc_source_source_ready;
assign benchsoc_etherbone_rx_cdc_source_source_first = benchsoc_etherbone_rx_cdc_cdc_source_first;
assign benchsoc_etherbone_rx_cdc_source_source_last = benchsoc_etherbone_rx_cdc_cdc_source_last;
assign benchsoc_etherbone_rx_cdc_source_source_payload_data = benchsoc_etherbone_rx_cdc_cdc_source_payload_data;
assign benchsoc_etherbone_rx_cdc_source_source_payload_last_be = benchsoc_etherbone_rx_cdc_cdc_source_payload_last_be;
assign benchsoc_etherbone_rx_cdc_source_source_payload_error = benchsoc_etherbone_rx_cdc_cdc_source_payload_error;
assign benchsoc_etherbone_rx_cdc_source_source_param_src_port = benchsoc_etherbone_rx_cdc_cdc_source_param_src_port;
assign benchsoc_etherbone_rx_cdc_source_source_param_dst_port = benchsoc_etherbone_rx_cdc_cdc_source_param_dst_port;
assign benchsoc_etherbone_rx_cdc_source_source_param_ip_address = benchsoc_etherbone_rx_cdc_cdc_source_param_ip_address;
assign benchsoc_etherbone_rx_cdc_source_source_param_length = benchsoc_etherbone_rx_cdc_cdc_source_param_length;
assign benchsoc_etherbone_rx_cdc_cdc_asyncfifo_din = {benchsoc_etherbone_rx_cdc_cdc_fifo_in_last, benchsoc_etherbone_rx_cdc_cdc_fifo_in_first, benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_length, benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_ip_address, benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_dst_port, benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_src_port, benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_error, benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_last_be, benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_data};
assign {benchsoc_etherbone_rx_cdc_cdc_fifo_out_last, benchsoc_etherbone_rx_cdc_cdc_fifo_out_first, benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_length, benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_ip_address, benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_dst_port, benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_src_port, benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_error, benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_last_be, benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_data} = benchsoc_etherbone_rx_cdc_cdc_asyncfifo_dout;
assign benchsoc_etherbone_rx_cdc_cdc_sink_ready = benchsoc_etherbone_rx_cdc_cdc_asyncfifo_writable;
assign benchsoc_etherbone_rx_cdc_cdc_asyncfifo_we = benchsoc_etherbone_rx_cdc_cdc_sink_valid;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_first = benchsoc_etherbone_rx_cdc_cdc_sink_first;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_last = benchsoc_etherbone_rx_cdc_cdc_sink_last;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_data = benchsoc_etherbone_rx_cdc_cdc_sink_payload_data;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_last_be = benchsoc_etherbone_rx_cdc_cdc_sink_payload_last_be;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_payload_error = benchsoc_etherbone_rx_cdc_cdc_sink_payload_error;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_src_port = benchsoc_etherbone_rx_cdc_cdc_sink_param_src_port;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_dst_port = benchsoc_etherbone_rx_cdc_cdc_sink_param_dst_port;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_ip_address = benchsoc_etherbone_rx_cdc_cdc_sink_param_ip_address;
assign benchsoc_etherbone_rx_cdc_cdc_fifo_in_param_length = benchsoc_etherbone_rx_cdc_cdc_sink_param_length;
assign benchsoc_etherbone_rx_cdc_cdc_source_valid = benchsoc_etherbone_rx_cdc_cdc_asyncfifo_readable;
assign benchsoc_etherbone_rx_cdc_cdc_source_first = benchsoc_etherbone_rx_cdc_cdc_fifo_out_first;
assign benchsoc_etherbone_rx_cdc_cdc_source_last = benchsoc_etherbone_rx_cdc_cdc_fifo_out_last;
assign benchsoc_etherbone_rx_cdc_cdc_source_payload_data = benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_data;
assign benchsoc_etherbone_rx_cdc_cdc_source_payload_last_be = benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_last_be;
assign benchsoc_etherbone_rx_cdc_cdc_source_payload_error = benchsoc_etherbone_rx_cdc_cdc_fifo_out_payload_error;
assign benchsoc_etherbone_rx_cdc_cdc_source_param_src_port = benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_src_port;
assign benchsoc_etherbone_rx_cdc_cdc_source_param_dst_port = benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_dst_port;
assign benchsoc_etherbone_rx_cdc_cdc_source_param_ip_address = benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_ip_address;
assign benchsoc_etherbone_rx_cdc_cdc_source_param_length = benchsoc_etherbone_rx_cdc_cdc_fifo_out_param_length;
assign benchsoc_etherbone_rx_cdc_cdc_asyncfifo_re = benchsoc_etherbone_rx_cdc_cdc_source_ready;
assign benchsoc_etherbone_rx_cdc_cdc_graycounter0_ce = (benchsoc_etherbone_rx_cdc_cdc_asyncfifo_writable & benchsoc_etherbone_rx_cdc_cdc_asyncfifo_we);
assign benchsoc_etherbone_rx_cdc_cdc_graycounter1_ce = (benchsoc_etherbone_rx_cdc_cdc_asyncfifo_readable & benchsoc_etherbone_rx_cdc_cdc_asyncfifo_re);
assign benchsoc_etherbone_rx_cdc_cdc_asyncfifo_writable = (((benchsoc_etherbone_rx_cdc_cdc_graycounter0_q[2] == benchsoc_etherbone_rx_cdc_cdc_consume_wdomain[2]) | (benchsoc_etherbone_rx_cdc_cdc_graycounter0_q[1] == benchsoc_etherbone_rx_cdc_cdc_consume_wdomain[1])) | (benchsoc_etherbone_rx_cdc_cdc_graycounter0_q[0] != benchsoc_etherbone_rx_cdc_cdc_consume_wdomain[0]));
assign benchsoc_etherbone_rx_cdc_cdc_asyncfifo_readable = (benchsoc_etherbone_rx_cdc_cdc_graycounter1_q != benchsoc_etherbone_rx_cdc_cdc_produce_rdomain);
assign benchsoc_etherbone_rx_cdc_cdc_wrport_adr = benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_binary[1:0];
assign benchsoc_etherbone_rx_cdc_cdc_wrport_dat_w = benchsoc_etherbone_rx_cdc_cdc_asyncfifo_din;
assign benchsoc_etherbone_rx_cdc_cdc_wrport_we = benchsoc_etherbone_rx_cdc_cdc_graycounter0_ce;
assign benchsoc_etherbone_rx_cdc_cdc_rdport_adr = benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary[1:0];
assign benchsoc_etherbone_rx_cdc_cdc_asyncfifo_dout = benchsoc_etherbone_rx_cdc_cdc_rdport_dat_r;
always @(*) begin
	benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary <= 3'd0;
	if (benchsoc_etherbone_rx_cdc_cdc_graycounter0_ce) begin
		benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary <= (benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_binary + 1'd1);
	end else begin
		benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary <= benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_binary;
	end
end
assign benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next = (benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary ^ benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
	benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary <= 3'd0;
	if (benchsoc_etherbone_rx_cdc_cdc_graycounter1_ce) begin
		benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary <= (benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_binary + 1'd1);
	end else begin
		benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary <= benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_binary;
	end
end
assign benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next = (benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary ^ benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary[2:1]);
assign benchsoc_ethcore_crossbar_source_valid = benchsoc_etherbone_internal_port_sink_valid;
assign benchsoc_etherbone_internal_port_sink_ready = benchsoc_ethcore_crossbar_source_ready;
assign benchsoc_ethcore_crossbar_source_first = benchsoc_etherbone_internal_port_sink_first;
assign benchsoc_ethcore_crossbar_source_last = benchsoc_etherbone_internal_port_sink_last;
assign benchsoc_ethcore_crossbar_source_payload_data = benchsoc_etherbone_internal_port_sink_payload_data;
assign benchsoc_ethcore_crossbar_source_payload_last_be = benchsoc_etherbone_internal_port_sink_payload_last_be;
assign benchsoc_ethcore_crossbar_source_payload_error = benchsoc_etherbone_internal_port_sink_payload_error;
assign benchsoc_ethcore_crossbar_source_param_src_port = benchsoc_etherbone_internal_port_sink_param_src_port;
assign benchsoc_ethcore_crossbar_source_param_dst_port = benchsoc_etherbone_internal_port_sink_param_dst_port;
assign benchsoc_ethcore_crossbar_source_param_ip_address = benchsoc_etherbone_internal_port_sink_param_ip_address;
assign benchsoc_ethcore_crossbar_source_param_length = benchsoc_etherbone_internal_port_sink_param_length;
assign benchsoc_etherbone_internal_port_source_valid = benchsoc_ethcore_crossbar_sink_valid;
assign benchsoc_ethcore_crossbar_sink_ready = benchsoc_etherbone_internal_port_source_ready;
assign benchsoc_etherbone_internal_port_source_first = benchsoc_ethcore_crossbar_sink_first;
assign benchsoc_etherbone_internal_port_source_last = benchsoc_ethcore_crossbar_sink_last;
assign benchsoc_etherbone_internal_port_source_payload_data = benchsoc_ethcore_crossbar_sink_payload_data;
assign benchsoc_etherbone_internal_port_source_payload_last_be = benchsoc_ethcore_crossbar_sink_payload_last_be;
assign benchsoc_etherbone_internal_port_source_payload_error = benchsoc_ethcore_crossbar_sink_payload_error;
assign benchsoc_etherbone_internal_port_source_param_src_port = benchsoc_ethcore_crossbar_sink_param_src_port;
assign benchsoc_etherbone_internal_port_source_param_dst_port = benchsoc_ethcore_crossbar_sink_param_dst_port;
assign benchsoc_etherbone_internal_port_source_param_ip_address = benchsoc_ethcore_crossbar_sink_param_ip_address;
assign benchsoc_etherbone_internal_port_source_param_length = benchsoc_ethcore_crossbar_sink_param_length;
assign benchsoc_etherbone_dispatcher_sel0 = (~benchsoc_etherbone_rx_source_source_param_pf);
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_valid = benchsoc_etherbone_record_receiver_source_valid;
assign benchsoc_etherbone_record_receiver_source_ready = benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_first = benchsoc_etherbone_record_receiver_source_first;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_last = benchsoc_etherbone_record_receiver_source_last;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_addr = benchsoc_etherbone_record_receiver_source_payload_addr;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_last_be = benchsoc_etherbone_record_receiver_source_payload_last_be;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_data = benchsoc_etherbone_record_receiver_source_payload_data;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_we = benchsoc_etherbone_record_receiver_source_param_we;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_count = benchsoc_etherbone_record_receiver_source_param_count;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_base_addr = benchsoc_etherbone_record_receiver_source_param_base_addr;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_be = benchsoc_etherbone_record_receiver_source_param_be;
assign benchsoc_etherbone_record_sender_sink_valid = benchsoc_etherbone_liteethetherbonewishbonemaster_source_valid;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_source_ready = benchsoc_etherbone_record_sender_sink_ready;
assign benchsoc_etherbone_record_sender_sink_first = benchsoc_etherbone_liteethetherbonewishbonemaster_source_first;
assign benchsoc_etherbone_record_sender_sink_last = benchsoc_etherbone_liteethetherbonewishbonemaster_source_last;
assign benchsoc_etherbone_record_sender_sink_payload_addr = benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_addr;
assign benchsoc_etherbone_record_sender_sink_payload_last_be = benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_last_be;
assign benchsoc_etherbone_record_sender_sink_payload_data = benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_data;
assign benchsoc_etherbone_record_sender_sink_param_we = benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_we;
assign benchsoc_etherbone_record_sender_sink_param_count = benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_count;
assign benchsoc_etherbone_record_sender_sink_param_base_addr = benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_base_addr;
assign benchsoc_etherbone_record_sender_sink_param_be = benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_be;
assign benchsoc_etherbone_user_port_sink_valid = benchsoc_etherbone_tx_source_source_valid;
assign benchsoc_etherbone_tx_source_source_ready = benchsoc_etherbone_user_port_sink_ready;
assign benchsoc_etherbone_user_port_sink_first = benchsoc_etherbone_tx_source_source_first;
assign benchsoc_etherbone_user_port_sink_last = benchsoc_etherbone_tx_source_source_last;
assign benchsoc_etherbone_user_port_sink_payload_data = benchsoc_etherbone_tx_source_source_payload_data;
assign benchsoc_etherbone_user_port_sink_payload_last_be = benchsoc_etherbone_tx_source_source_payload_last_be;
assign benchsoc_etherbone_user_port_sink_payload_error = benchsoc_etherbone_tx_source_source_payload_error;
assign benchsoc_etherbone_user_port_sink_param_src_port = benchsoc_etherbone_tx_source_source_param_src_port;
assign benchsoc_etherbone_user_port_sink_param_dst_port = benchsoc_etherbone_tx_source_source_param_dst_port;
assign benchsoc_etherbone_user_port_sink_param_ip_address = benchsoc_etherbone_tx_source_source_param_ip_address;
assign benchsoc_etherbone_user_port_sink_param_length = benchsoc_etherbone_tx_source_source_param_length;
assign benchsoc_etherbone_rx_sink_sink_valid = benchsoc_etherbone_user_port_source_valid;
assign benchsoc_etherbone_user_port_source_ready = benchsoc_etherbone_rx_sink_sink_ready;
assign benchsoc_etherbone_rx_sink_sink_first = benchsoc_etherbone_user_port_source_first;
assign benchsoc_etherbone_rx_sink_sink_last = benchsoc_etherbone_user_port_source_last;
assign benchsoc_etherbone_rx_sink_sink_payload_data = benchsoc_etherbone_user_port_source_payload_data;
assign benchsoc_etherbone_rx_sink_sink_payload_last_be = benchsoc_etherbone_user_port_source_payload_last_be;
assign benchsoc_etherbone_rx_sink_sink_payload_error = benchsoc_etherbone_user_port_source_payload_error;
assign benchsoc_etherbone_rx_sink_sink_param_src_port = benchsoc_etherbone_user_port_source_param_src_port;
assign benchsoc_etherbone_rx_sink_sink_param_dst_port = benchsoc_etherbone_user_port_source_param_dst_port;
assign benchsoc_etherbone_rx_sink_sink_param_ip_address = benchsoc_etherbone_user_port_source_param_ip_address;
assign benchsoc_etherbone_rx_sink_sink_param_length = benchsoc_etherbone_user_port_source_param_length;
assign benchsoc_etherbone_tx_packetizer_sink_valid = benchsoc_etherbone_tx_sink_sink_valid;
assign benchsoc_etherbone_tx_sink_sink_ready = benchsoc_etherbone_tx_packetizer_sink_ready;
assign benchsoc_etherbone_tx_packetizer_sink_last = benchsoc_etherbone_tx_sink_sink_last;
assign benchsoc_etherbone_tx_packetizer_sink_payload_data = benchsoc_etherbone_tx_sink_sink_payload_data;
assign benchsoc_etherbone_tx_packetizer_sink_payload_last_be = benchsoc_etherbone_tx_sink_sink_payload_last_be;
assign benchsoc_etherbone_tx_packetizer_sink_param_nr = benchsoc_etherbone_tx_sink_sink_param_nr;
assign benchsoc_etherbone_tx_packetizer_sink_param_pf = benchsoc_etherbone_tx_sink_sink_param_pf;
assign benchsoc_etherbone_tx_packetizer_sink_param_pr = benchsoc_etherbone_tx_sink_sink_param_pr;
assign benchsoc_etherbone_tx_packetizer_sink_param_version = 1'd1;
assign benchsoc_etherbone_tx_packetizer_sink_param_magic = 15'd20079;
assign benchsoc_etherbone_tx_packetizer_sink_param_port_size = 3'd4;
assign benchsoc_etherbone_tx_packetizer_sink_param_addr_size = 3'd4;
always @(*) begin
	benchsoc_etherbone_tx_packetizer_header <= 64'd0;
	benchsoc_etherbone_tx_packetizer_header[31:28] <= {benchsoc_etherbone_tx_packetizer_sink_param_addr_size[3:0]};
	benchsoc_etherbone_tx_packetizer_header[15:0] <= {benchsoc_etherbone_tx_packetizer_sink_param_magic[7:0], benchsoc_etherbone_tx_packetizer_sink_param_magic[15:8]};
	benchsoc_etherbone_tx_packetizer_header[18] <= {benchsoc_etherbone_tx_packetizer_sink_param_nr};
	benchsoc_etherbone_tx_packetizer_header[16] <= {benchsoc_etherbone_tx_packetizer_sink_param_pf};
	benchsoc_etherbone_tx_packetizer_header[27:24] <= {benchsoc_etherbone_tx_packetizer_sink_param_port_size[3:0]};
	benchsoc_etherbone_tx_packetizer_header[17] <= {benchsoc_etherbone_tx_packetizer_sink_param_pr};
	benchsoc_etherbone_tx_packetizer_header[23:20] <= {benchsoc_etherbone_tx_packetizer_sink_param_version[3:0]};
end
assign benchsoc_etherbone_tx_packetizer_new_last_be = {benchsoc_etherbone_tx_packetizer_sink_payload_last_be[3], benchsoc_etherbone_tx_packetizer_sink_payload_last_be[2], benchsoc_etherbone_tx_packetizer_sink_payload_last_be[1], benchsoc_etherbone_tx_packetizer_sink_payload_last_be[0]};
assign benchsoc_etherbone_tx_packetizer_in_data_copy = (benchsoc_etherbone_tx_packetizer_is_ongoing0 | benchsoc_etherbone_tx_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_etherbone_tx_packetizer_source_last <= 1'd0;
	if (benchsoc_etherbone_tx_packetizer_source_last_s) begin
		benchsoc_etherbone_tx_packetizer_source_last <= benchsoc_etherbone_tx_packetizer_source_last_b;
	end else begin
		benchsoc_etherbone_tx_packetizer_source_last <= benchsoc_etherbone_tx_packetizer_source_last_a;
	end
end
assign benchsoc_etherbone_tx_packetizer_source_payload_error = benchsoc_etherbone_tx_packetizer_sink_payload_error;
always @(*) begin
	benchsoc_etherbone_tx_packetizer_source_last_b <= 1'd0;
	benchsoc_etherbone_tx_packetizer_source_last_s <= 1'd0;
	benchsoc_etherbone_tx_packetizer_sr_load <= 1'd0;
	benchsoc_etherbone_tx_packetizer_sr_shift <= 1'd0;
	liteethetherbonepackettx_fsm1_next_state <= 1'd0;
	benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value2 <= 4'd0;
	benchsoc_etherbone_tx_packetizer_sink_ready <= 1'd0;
	benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value_ce2 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_is_ongoing0 <= 1'd0;
	liteethetherbonepackettx_fsm0_next_state <= 2'd0;
	benchsoc_etherbone_tx_packetizer_count_fsm0_next_value4 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_source_valid <= 1'd0;
	benchsoc_etherbone_tx_packetizer_count_fsm0_next_value_ce4 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_is_ongoing1 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value5 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_source_payload_data <= 32'd0;
	benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value_ce5 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_tx_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_etherbone_tx_packetizer_source_last_a <= 1'd0;
	liteethetherbonepackettx_fsm0_next_state <= liteethetherbonepackettx_fsm0_state;
	case (liteethetherbonepackettx_fsm0_state)
		1'd1: begin
			benchsoc_etherbone_tx_packetizer_source_valid <= 1'd1;
			benchsoc_etherbone_tx_packetizer_source_last_a <= 1'd0;
			benchsoc_etherbone_tx_packetizer_source_payload_data <= benchsoc_etherbone_tx_packetizer_sr[63:32];
			if ((benchsoc_etherbone_tx_packetizer_source_valid & benchsoc_etherbone_tx_packetizer_source_ready)) begin
				benchsoc_etherbone_tx_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_etherbone_tx_packetizer_count == 1'd1)) begin
					benchsoc_etherbone_tx_packetizer_sr_shift <= 1'd0;
					liteethetherbonepackettx_fsm0_next_state <= 2'd2;
					benchsoc_etherbone_tx_packetizer_count_fsm0_next_value4 <= (benchsoc_etherbone_tx_packetizer_count + 1'd1);
					benchsoc_etherbone_tx_packetizer_count_fsm0_next_value_ce4 <= 1'd1;
				end else begin
					benchsoc_etherbone_tx_packetizer_count_fsm0_next_value4 <= (benchsoc_etherbone_tx_packetizer_count + 1'd1);
					benchsoc_etherbone_tx_packetizer_count_fsm0_next_value_ce4 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_tx_packetizer_source_valid <= benchsoc_etherbone_tx_packetizer_sink_valid;
			benchsoc_etherbone_tx_packetizer_source_last_a <= benchsoc_etherbone_tx_packetizer_sink_last;
			benchsoc_etherbone_tx_packetizer_source_payload_data <= benchsoc_etherbone_tx_packetizer_sink_payload_data;
			if ((benchsoc_etherbone_tx_packetizer_source_valid & benchsoc_etherbone_tx_packetizer_source_ready)) begin
				benchsoc_etherbone_tx_packetizer_sink_ready <= 1'd1;
				if (benchsoc_etherbone_tx_packetizer_source_last) begin
					liteethetherbonepackettx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_etherbone_tx_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_etherbone_tx_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_etherbone_tx_packetizer_sink_ready <= 1'd1;
			benchsoc_etherbone_tx_packetizer_count_fsm0_next_value4 <= 1'd1;
			benchsoc_etherbone_tx_packetizer_count_fsm0_next_value_ce4 <= 1'd1;
			if (benchsoc_etherbone_tx_packetizer_sink_valid) begin
				benchsoc_etherbone_tx_packetizer_sink_ready <= 1'd0;
				benchsoc_etherbone_tx_packetizer_source_valid <= 1'd1;
				benchsoc_etherbone_tx_packetizer_source_last_a <= 1'd0;
				benchsoc_etherbone_tx_packetizer_source_payload_data <= benchsoc_etherbone_tx_packetizer_header[31:0];
				if ((benchsoc_etherbone_tx_packetizer_source_valid & benchsoc_etherbone_tx_packetizer_source_ready)) begin
					benchsoc_etherbone_tx_packetizer_sr_load <= 1'd1;
					benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value5 <= 1'd1;
					benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value_ce5 <= 1'd1;
					if (1'd0) begin
						liteethetherbonepackettx_fsm0_next_state <= 2'd2;
					end else begin
						liteethetherbonepackettx_fsm0_next_state <= 1'd1;
					end
				end
			end
			benchsoc_etherbone_tx_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	liteethetherbonepackettx_fsm1_next_state <= liteethetherbonepackettx_fsm1_state;
	case (liteethetherbonepackettx_fsm1_state)
		1'd1: begin
			benchsoc_etherbone_tx_packetizer_source_last_b <= 1'd1;
			benchsoc_etherbone_tx_packetizer_source_last_s <= 1'd1;
			benchsoc_etherbone_tx_packetizer_source_payload_last_be <= benchsoc_etherbone_tx_packetizer_delayed_last_be;
			benchsoc_etherbone_tx_packetizer_sink_ready <= 1'd0;
			if (benchsoc_etherbone_tx_packetizer_source_ready) begin
				liteethetherbonepackettx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_etherbone_tx_packetizer_in_data_copy & benchsoc_etherbone_tx_packetizer_sink_last) & (benchsoc_etherbone_tx_packetizer_sink_payload_last_be > benchsoc_etherbone_tx_packetizer_new_last_be))) begin
				benchsoc_etherbone_tx_packetizer_source_last_b <= 1'd0;
				benchsoc_etherbone_tx_packetizer_source_last_s <= 1'd1;
				benchsoc_etherbone_tx_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_etherbone_tx_packetizer_source_ready & benchsoc_etherbone_tx_packetizer_source_valid)) begin
					benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value2 <= benchsoc_etherbone_tx_packetizer_new_last_be;
					benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value_ce2 <= 1'd1;
					liteethetherbonepackettx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_etherbone_tx_packetizer_in_data_copy) begin
					benchsoc_etherbone_tx_packetizer_source_last_b <= benchsoc_etherbone_tx_packetizer_sink_last;
					benchsoc_etherbone_tx_packetizer_source_last_s <= 1'd1;
					benchsoc_etherbone_tx_packetizer_source_payload_last_be <= benchsoc_etherbone_tx_packetizer_new_last_be;
				end
			end
			if (benchsoc_etherbone_tx_packetizer_in_data_copy) begin
				benchsoc_etherbone_tx_packetizer_sink_ready <= benchsoc_etherbone_tx_packetizer_source_ready;
			end else begin
				if (benchsoc_etherbone_tx_packetizer_is_ongoing2) begin
					benchsoc_etherbone_tx_packetizer_sink_ready <= (~benchsoc_etherbone_tx_packetizer_sink_valid);
				end
			end
		end
	endcase
end
always @(*) begin
	liteethetherbonepackettx_next_state <= 1'd0;
	benchsoc_etherbone_tx_source_source_payload_data <= 32'd0;
	benchsoc_etherbone_tx_source_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_tx_source_source_payload_error <= 4'd0;
	benchsoc_etherbone_tx_source_source_param_src_port <= 16'd0;
	benchsoc_etherbone_tx_source_source_param_dst_port <= 16'd0;
	benchsoc_etherbone_tx_source_source_param_ip_address <= 32'd0;
	benchsoc_etherbone_tx_packetizer_source_ready <= 1'd0;
	benchsoc_etherbone_tx_source_source_param_length <= 16'd0;
	benchsoc_etherbone_tx_source_source_valid <= 1'd0;
	benchsoc_etherbone_tx_source_source_first <= 1'd0;
	benchsoc_etherbone_tx_source_source_last <= 1'd0;
	liteethetherbonepackettx_next_state <= liteethetherbonepackettx_state;
	case (liteethetherbonepackettx_state)
		1'd1: begin
			benchsoc_etherbone_tx_source_source_valid <= benchsoc_etherbone_tx_packetizer_source_valid;
			benchsoc_etherbone_tx_packetizer_source_ready <= benchsoc_etherbone_tx_source_source_ready;
			benchsoc_etherbone_tx_source_source_first <= benchsoc_etherbone_tx_packetizer_source_first;
			benchsoc_etherbone_tx_source_source_last <= benchsoc_etherbone_tx_packetizer_source_last;
			benchsoc_etherbone_tx_source_source_payload_data <= benchsoc_etherbone_tx_packetizer_source_payload_data;
			benchsoc_etherbone_tx_source_source_payload_last_be <= benchsoc_etherbone_tx_packetizer_source_payload_last_be;
			benchsoc_etherbone_tx_source_source_payload_error <= benchsoc_etherbone_tx_packetizer_source_payload_error;
			benchsoc_etherbone_tx_source_source_param_src_port <= benchsoc_etherbone_tx_packetizer_source_param_src_port;
			benchsoc_etherbone_tx_source_source_param_dst_port <= benchsoc_etherbone_tx_packetizer_source_param_dst_port;
			benchsoc_etherbone_tx_source_source_param_ip_address <= benchsoc_etherbone_tx_packetizer_source_param_ip_address;
			benchsoc_etherbone_tx_source_source_param_length <= benchsoc_etherbone_tx_packetizer_source_param_length;
			benchsoc_etherbone_tx_source_source_param_src_port <= 11'd1234;
			benchsoc_etherbone_tx_source_source_param_dst_port <= 11'd1234;
			benchsoc_etherbone_tx_source_source_param_ip_address <= benchsoc_etherbone_tx_sink_sink_param_ip_address;
			benchsoc_etherbone_tx_source_source_param_length <= (benchsoc_etherbone_tx_sink_sink_param_length + 4'd8);
			if (((benchsoc_etherbone_tx_source_source_valid & benchsoc_etherbone_tx_source_source_last) & benchsoc_etherbone_tx_source_source_ready)) begin
				liteethetherbonepackettx_next_state <= 1'd0;
			end
		end
		default: begin
			if (benchsoc_etherbone_tx_packetizer_source_valid) begin
				liteethetherbonepackettx_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_etherbone_rx_depacketizer_sink_valid = benchsoc_etherbone_rx_sink_sink_valid;
assign benchsoc_etherbone_rx_sink_sink_ready = benchsoc_etherbone_rx_depacketizer_sink_ready;
assign benchsoc_etherbone_rx_depacketizer_sink_first = benchsoc_etherbone_rx_sink_sink_first;
assign benchsoc_etherbone_rx_depacketizer_sink_last = benchsoc_etherbone_rx_sink_sink_last;
assign benchsoc_etherbone_rx_depacketizer_sink_payload_data = benchsoc_etherbone_rx_sink_sink_payload_data;
assign benchsoc_etherbone_rx_depacketizer_sink_payload_last_be = benchsoc_etherbone_rx_sink_sink_payload_last_be;
assign benchsoc_etherbone_rx_depacketizer_sink_payload_error = benchsoc_etherbone_rx_sink_sink_payload_error;
assign benchsoc_etherbone_rx_depacketizer_sink_param_src_port = benchsoc_etherbone_rx_sink_sink_param_src_port;
assign benchsoc_etherbone_rx_depacketizer_sink_param_dst_port = benchsoc_etherbone_rx_sink_sink_param_dst_port;
assign benchsoc_etherbone_rx_depacketizer_sink_param_ip_address = benchsoc_etherbone_rx_sink_sink_param_ip_address;
assign benchsoc_etherbone_rx_depacketizer_sink_param_length = benchsoc_etherbone_rx_sink_sink_param_length;
assign benchsoc_etherbone_rx_source_source_last = benchsoc_etherbone_rx_depacketizer_source_last;
assign benchsoc_etherbone_rx_source_source_payload_data = benchsoc_etherbone_rx_depacketizer_source_payload_data;
assign benchsoc_etherbone_rx_source_source_payload_last_be = benchsoc_etherbone_rx_depacketizer_source_payload_last_be;
assign benchsoc_etherbone_rx_source_source_param_nr = benchsoc_etherbone_rx_depacketizer_source_param_nr;
assign benchsoc_etherbone_rx_source_source_param_pf = benchsoc_etherbone_rx_depacketizer_source_param_pf;
assign benchsoc_etherbone_rx_source_source_param_pr = benchsoc_etherbone_rx_depacketizer_source_param_pr;
assign benchsoc_etherbone_rx_source_source_param_src_port = benchsoc_etherbone_rx_sink_sink_param_src_port;
assign benchsoc_etherbone_rx_source_source_param_dst_port = benchsoc_etherbone_rx_sink_sink_param_dst_port;
assign benchsoc_etherbone_rx_source_source_param_ip_address = benchsoc_etherbone_rx_sink_sink_param_ip_address;
assign benchsoc_etherbone_rx_source_source_param_length = (benchsoc_etherbone_rx_sink_sink_param_length - 4'd8);
assign benchsoc_etherbone_rx_depacketizer_header = benchsoc_etherbone_rx_depacketizer_sr;
assign benchsoc_etherbone_rx_depacketizer_source_param_addr_size = {rhs_slice_proxy76[3:0]};
assign benchsoc_etherbone_rx_depacketizer_source_param_magic = {rhs_slice_proxy78[7:0], rhs_slice_proxy77[15:8]};
assign benchsoc_etherbone_rx_depacketizer_source_param_nr = {rhs_slice_proxy79};
assign benchsoc_etherbone_rx_depacketizer_source_param_pf = {rhs_slice_proxy80};
assign benchsoc_etherbone_rx_depacketizer_source_param_port_size = {rhs_slice_proxy81[3:0]};
assign benchsoc_etherbone_rx_depacketizer_source_param_pr = {rhs_slice_proxy82};
assign benchsoc_etherbone_rx_depacketizer_source_param_version = {rhs_slice_proxy83[3:0]};
assign benchsoc_etherbone_rx_depacketizer_source_payload_error = benchsoc_etherbone_rx_depacketizer_sink_payload_error;
assign benchsoc_etherbone_rx_depacketizer_new_last_be = {benchsoc_etherbone_rx_depacketizer_sink_payload_last_be[3], benchsoc_etherbone_rx_depacketizer_sink_payload_last_be[2], benchsoc_etherbone_rx_depacketizer_sink_payload_last_be[1], benchsoc_etherbone_rx_depacketizer_sink_payload_last_be[0]};
assign benchsoc_etherbone_rx_depacketizer_is_in_copy = (benchsoc_etherbone_rx_depacketizer_is_ongoing0 | benchsoc_etherbone_rx_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_etherbone_rx_depacketizer_source_last <= 1'd0;
	if (benchsoc_etherbone_rx_depacketizer_source_last_s) begin
		benchsoc_etherbone_rx_depacketizer_source_last <= benchsoc_etherbone_rx_depacketizer_source_last_b;
	end else begin
		benchsoc_etherbone_rx_depacketizer_source_last <= benchsoc_etherbone_rx_depacketizer_source_last_a;
	end
end
always @(*) begin
	benchsoc_etherbone_rx_depacketizer_is_ongoing0 <= 1'd0;
	liteethetherbonepacketrx_fsm1_next_state <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_is_ongoing1 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_source_valid <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value3 <= 4'd0;
	benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value_ce3 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_source_payload_data <= 32'd0;
	benchsoc_etherbone_rx_depacketizer_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_rx_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_is_ongoing3 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_source_last_a <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_source_last_b <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_source_last_s <= 1'd0;
	liteethetherbonepacketrx_fsm0_next_state <= 2'd0;
	benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value6 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value_ce6 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_sr_shift <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value7 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce7 <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_sink_ready <= 1'd0;
	liteethetherbonepacketrx_fsm0_next_state <= liteethetherbonepacketrx_fsm0_state;
	case (liteethetherbonepacketrx_fsm0_state)
		1'd1: begin
			benchsoc_etherbone_rx_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_etherbone_rx_depacketizer_sink_valid) begin
				benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value6 <= (benchsoc_etherbone_rx_depacketizer_count + 1'd1);
				benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value_ce6 <= 1'd1;
				benchsoc_etherbone_rx_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_etherbone_rx_depacketizer_count == 1'd1)) begin
					liteethetherbonepacketrx_fsm0_next_state <= 2'd2;
					benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value6 <= (benchsoc_etherbone_rx_depacketizer_count + 1'd1);
					benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value_ce6 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_rx_depacketizer_source_valid <= (benchsoc_etherbone_rx_depacketizer_sink_valid | benchsoc_etherbone_rx_depacketizer_sink_d_last);
			benchsoc_etherbone_rx_depacketizer_source_last_a <= (benchsoc_etherbone_rx_depacketizer_sink_last | benchsoc_etherbone_rx_depacketizer_sink_d_last);
			benchsoc_etherbone_rx_depacketizer_sink_ready <= benchsoc_etherbone_rx_depacketizer_source_ready;
			benchsoc_etherbone_rx_depacketizer_source_payload_data <= benchsoc_etherbone_rx_depacketizer_sink_payload_data;
			if ((benchsoc_etherbone_rx_depacketizer_source_valid & benchsoc_etherbone_rx_depacketizer_source_ready)) begin
				if (benchsoc_etherbone_rx_depacketizer_source_last) begin
					liteethetherbonepacketrx_fsm0_next_state <= 1'd0;
				end
			end
			benchsoc_etherbone_rx_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_etherbone_rx_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_etherbone_rx_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_etherbone_rx_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_etherbone_rx_depacketizer_sink_ready <= 1'd1;
			benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value6 <= 1'd1;
			benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value_ce6 <= 1'd1;
			if (benchsoc_etherbone_rx_depacketizer_sink_valid) begin
				benchsoc_etherbone_rx_depacketizer_sr_shift <= 1'd1;
				benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value7 <= 1'd1;
				benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce7 <= 1'd1;
				if (1'd0) begin
					liteethetherbonepacketrx_fsm0_next_state <= 2'd2;
				end else begin
					liteethetherbonepacketrx_fsm0_next_state <= 1'd1;
				end
			end
		end
	endcase
	liteethetherbonepacketrx_fsm1_next_state <= liteethetherbonepacketrx_fsm1_state;
	case (liteethetherbonepacketrx_fsm1_state)
		1'd1: begin
			benchsoc_etherbone_rx_depacketizer_source_last_b <= 1'd1;
			benchsoc_etherbone_rx_depacketizer_source_last_s <= 1'd1;
			benchsoc_etherbone_rx_depacketizer_source_payload_last_be <= benchsoc_etherbone_rx_depacketizer_delayed_last_be;
			benchsoc_etherbone_rx_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_etherbone_rx_depacketizer_source_ready & benchsoc_etherbone_rx_depacketizer_source_valid)) begin
				liteethetherbonepacketrx_fsm1_next_state <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_etherbone_rx_depacketizer_sink_valid & benchsoc_etherbone_rx_depacketizer_sink_last) & (benchsoc_etherbone_rx_depacketizer_sink_payload_last_be > benchsoc_etherbone_rx_depacketizer_new_last_be))) begin
				benchsoc_etherbone_rx_depacketizer_source_last_b <= 1'd0;
				benchsoc_etherbone_rx_depacketizer_source_last_s <= 1'd1;
				benchsoc_etherbone_rx_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_etherbone_rx_depacketizer_source_ready & benchsoc_etherbone_rx_depacketizer_source_valid) | ((~benchsoc_etherbone_rx_depacketizer_was_in_copy) & benchsoc_etherbone_rx_depacketizer_is_in_copy))) begin
					benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value3 <= benchsoc_etherbone_rx_depacketizer_new_last_be;
					benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value_ce3 <= 1'd1;
					liteethetherbonepacketrx_fsm1_next_state <= 1'd1;
				end
			end else begin
				if (benchsoc_etherbone_rx_depacketizer_sink_last) begin
					benchsoc_etherbone_rx_depacketizer_source_last_b <= 1'd1;
					benchsoc_etherbone_rx_depacketizer_source_last_s <= 1'd1;
					benchsoc_etherbone_rx_depacketizer_source_payload_last_be <= benchsoc_etherbone_rx_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_etherbone_rx_depacketizer_is_ongoing2 | (benchsoc_etherbone_rx_depacketizer_is_ongoing3 & (~benchsoc_etherbone_rx_depacketizer_fsm_from_idle)))) begin
				benchsoc_etherbone_rx_depacketizer_sink_ready <= benchsoc_etherbone_rx_depacketizer_source_ready;
			end else begin
				benchsoc_etherbone_rx_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	liteethetherbonepacketrx_next_state <= 2'd0;
	benchsoc_etherbone_rx_source_source_valid <= 1'd0;
	benchsoc_etherbone_rx_depacketizer_source_ready <= 1'd0;
	liteethetherbonepacketrx_next_state <= liteethetherbonepacketrx_state;
	case (liteethetherbonepacketrx_state)
		1'd1: begin
			benchsoc_etherbone_rx_source_source_valid <= benchsoc_etherbone_rx_depacketizer_source_valid;
			benchsoc_etherbone_rx_depacketizer_source_ready <= benchsoc_etherbone_rx_source_source_ready;
			if ((benchsoc_etherbone_rx_source_source_valid & benchsoc_etherbone_rx_source_source_ready)) begin
				if (benchsoc_etherbone_rx_source_source_last) begin
					liteethetherbonepacketrx_next_state <= 1'd0;
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_rx_depacketizer_source_ready <= 1'd1;
			if (((benchsoc_etherbone_rx_depacketizer_source_valid & benchsoc_etherbone_rx_depacketizer_source_last) & benchsoc_etherbone_rx_depacketizer_source_ready)) begin
				liteethetherbonepacketrx_next_state <= 1'd0;
			end
		end
		default: begin
			if (benchsoc_etherbone_rx_depacketizer_source_valid) begin
				liteethetherbonepacketrx_next_state <= 2'd2;
				if ((benchsoc_etherbone_rx_depacketizer_source_param_magic == 15'd20079)) begin
					liteethetherbonepacketrx_next_state <= 1'd1;
				end
			end
		end
	endcase
end
assign benchsoc_etherbone_probe_sink_sink_valid = benchsoc_etherbone_probe_sink_valid;
assign benchsoc_etherbone_probe_sink_ready = benchsoc_etherbone_probe_sink_sink_ready;
assign benchsoc_etherbone_probe_sink_sink_first = benchsoc_etherbone_probe_sink_first;
assign benchsoc_etherbone_probe_sink_sink_last = benchsoc_etherbone_probe_sink_last;
assign benchsoc_etherbone_probe_sink_sink_payload_data = benchsoc_etherbone_probe_sink_payload_data;
assign benchsoc_etherbone_probe_sink_sink_payload_last_be = benchsoc_etherbone_probe_sink_payload_last_be;
assign benchsoc_etherbone_probe_sink_sink_payload_error = benchsoc_etherbone_probe_sink_payload_error;
assign benchsoc_etherbone_probe_sink_sink_param_addr_size = benchsoc_etherbone_probe_sink_param_addr_size;
assign benchsoc_etherbone_probe_sink_sink_param_nr = benchsoc_etherbone_probe_sink_param_nr;
assign benchsoc_etherbone_probe_sink_sink_param_pf = benchsoc_etherbone_probe_sink_param_pf;
assign benchsoc_etherbone_probe_sink_sink_param_port_size = benchsoc_etherbone_probe_sink_param_port_size;
assign benchsoc_etherbone_probe_sink_sink_param_pr = benchsoc_etherbone_probe_sink_param_pr;
assign benchsoc_etherbone_probe_sink_sink_param_src_port = benchsoc_etherbone_probe_sink_param_src_port;
assign benchsoc_etherbone_probe_sink_sink_param_dst_port = benchsoc_etherbone_probe_sink_param_dst_port;
assign benchsoc_etherbone_probe_sink_sink_param_ip_address = benchsoc_etherbone_probe_sink_param_ip_address;
assign benchsoc_etherbone_probe_sink_sink_param_length = benchsoc_etherbone_probe_sink_param_length;
assign benchsoc_etherbone_probe_param_fifo_sink_param_addr_size = benchsoc_etherbone_probe_sink_sink_param_addr_size;
assign benchsoc_etherbone_probe_param_fifo_sink_param_nr = benchsoc_etherbone_probe_sink_sink_param_nr;
assign benchsoc_etherbone_probe_param_fifo_sink_param_pf = benchsoc_etherbone_probe_sink_sink_param_pf;
assign benchsoc_etherbone_probe_param_fifo_sink_param_port_size = benchsoc_etherbone_probe_sink_sink_param_port_size;
assign benchsoc_etherbone_probe_param_fifo_sink_param_pr = benchsoc_etherbone_probe_sink_sink_param_pr;
assign benchsoc_etherbone_probe_param_fifo_sink_param_src_port = benchsoc_etherbone_probe_sink_sink_param_src_port;
assign benchsoc_etherbone_probe_param_fifo_sink_param_dst_port = benchsoc_etherbone_probe_sink_sink_param_dst_port;
assign benchsoc_etherbone_probe_param_fifo_sink_param_ip_address = benchsoc_etherbone_probe_sink_sink_param_ip_address;
assign benchsoc_etherbone_probe_param_fifo_sink_param_length = benchsoc_etherbone_probe_sink_sink_param_length;
assign benchsoc_etherbone_probe_payload_fifo_sink_last = benchsoc_etherbone_probe_sink_sink_last;
assign benchsoc_etherbone_probe_payload_fifo_sink_payload_data = benchsoc_etherbone_probe_sink_sink_payload_data;
assign benchsoc_etherbone_probe_payload_fifo_sink_payload_last_be = benchsoc_etherbone_probe_sink_sink_payload_last_be;
assign benchsoc_etherbone_probe_payload_fifo_sink_payload_error = benchsoc_etherbone_probe_sink_sink_payload_error;
assign benchsoc_etherbone_probe_param_fifo_sink_valid = (benchsoc_etherbone_probe_sink_sink_valid & benchsoc_etherbone_probe_sink_sink_last);
assign benchsoc_etherbone_probe_payload_fifo_sink_valid = (benchsoc_etherbone_probe_sink_sink_valid & benchsoc_etherbone_probe_payload_fifo_sink_ready);
assign benchsoc_etherbone_probe_sink_sink_ready = (benchsoc_etherbone_probe_param_fifo_sink_ready & benchsoc_etherbone_probe_payload_fifo_sink_ready);
assign benchsoc_etherbone_probe_source_source_valid = benchsoc_etherbone_probe_param_fifo_source_valid;
assign benchsoc_etherbone_probe_source_source_param_addr_size = benchsoc_etherbone_probe_param_fifo_source_param_addr_size;
assign benchsoc_etherbone_probe_source_source_param_nr = benchsoc_etherbone_probe_param_fifo_source_param_nr;
assign benchsoc_etherbone_probe_source_source_param_pf = benchsoc_etherbone_probe_param_fifo_source_param_pf;
assign benchsoc_etherbone_probe_source_source_param_port_size = benchsoc_etherbone_probe_param_fifo_source_param_port_size;
assign benchsoc_etherbone_probe_source_source_param_pr = benchsoc_etherbone_probe_param_fifo_source_param_pr;
assign benchsoc_etherbone_probe_source_source_param_src_port = benchsoc_etherbone_probe_param_fifo_source_param_src_port;
assign benchsoc_etherbone_probe_source_source_param_dst_port = benchsoc_etherbone_probe_param_fifo_source_param_dst_port;
assign benchsoc_etherbone_probe_source_source_param_ip_address = benchsoc_etherbone_probe_param_fifo_source_param_ip_address;
assign benchsoc_etherbone_probe_source_source_param_length = benchsoc_etherbone_probe_param_fifo_source_param_length;
always @(*) begin
	benchsoc_etherbone_probe_source_source_first <= 1'd0;
	benchsoc_etherbone_probe_source_source_first <= benchsoc_etherbone_probe_param_fifo_source_first;
	benchsoc_etherbone_probe_source_source_first <= benchsoc_etherbone_probe_payload_fifo_source_first;
end
assign benchsoc_etherbone_probe_source_source_last = benchsoc_etherbone_probe_payload_fifo_source_last;
assign benchsoc_etherbone_probe_source_source_payload_data = benchsoc_etherbone_probe_payload_fifo_source_payload_data;
assign benchsoc_etherbone_probe_source_source_payload_last_be = benchsoc_etherbone_probe_payload_fifo_source_payload_last_be;
assign benchsoc_etherbone_probe_source_source_payload_error = benchsoc_etherbone_probe_payload_fifo_source_payload_error;
assign benchsoc_etherbone_probe_param_fifo_source_ready = ((benchsoc_etherbone_probe_source_source_valid & benchsoc_etherbone_probe_source_source_last) & benchsoc_etherbone_probe_source_source_ready);
assign benchsoc_etherbone_probe_payload_fifo_source_ready = (benchsoc_etherbone_probe_source_source_valid & benchsoc_etherbone_probe_source_source_ready);
assign benchsoc_etherbone_probe_payload_fifo_sink_ready = ((~benchsoc_etherbone_probe_payload_fifo_source_valid) | benchsoc_etherbone_probe_payload_fifo_source_ready);
assign benchsoc_etherbone_probe_param_fifo_sink_ready = ((~benchsoc_etherbone_probe_param_fifo_source_valid) | benchsoc_etherbone_probe_param_fifo_source_ready);
always @(*) begin
	benchsoc_etherbone_probe_source_valid <= 1'd0;
	benchsoc_etherbone_probe_source_source_ready <= 1'd0;
	benchsoc_etherbone_probe_source_first <= 1'd0;
	benchsoc_etherbone_probe_source_last <= 1'd0;
	benchsoc_etherbone_probe_source_payload_data <= 32'd0;
	benchsoc_etherbone_probe_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_probe_source_payload_error <= 4'd0;
	benchsoc_etherbone_probe_source_param_addr_size <= 4'd0;
	benchsoc_etherbone_probe_source_param_nr <= 1'd0;
	benchsoc_etherbone_probe_source_param_pf <= 1'd0;
	benchsoc_etherbone_probe_source_param_port_size <= 4'd0;
	benchsoc_etherbone_probe_source_param_pr <= 1'd0;
	benchsoc_etherbone_probe_source_param_src_port <= 16'd0;
	benchsoc_etherbone_probe_source_param_dst_port <= 16'd0;
	benchsoc_etherbone_probe_source_param_ip_address <= 32'd0;
	benchsoc_etherbone_probe_source_param_length <= 16'd0;
	liteethetherboneprobe_next_state <= 1'd0;
	liteethetherboneprobe_next_state <= liteethetherboneprobe_state;
	case (liteethetherboneprobe_state)
		1'd1: begin
			benchsoc_etherbone_probe_source_valid <= benchsoc_etherbone_probe_source_source_valid;
			benchsoc_etherbone_probe_source_source_ready <= benchsoc_etherbone_probe_source_ready;
			benchsoc_etherbone_probe_source_first <= benchsoc_etherbone_probe_source_source_first;
			benchsoc_etherbone_probe_source_last <= benchsoc_etherbone_probe_source_source_last;
			benchsoc_etherbone_probe_source_payload_data <= benchsoc_etherbone_probe_source_source_payload_data;
			benchsoc_etherbone_probe_source_payload_last_be <= benchsoc_etherbone_probe_source_source_payload_last_be;
			benchsoc_etherbone_probe_source_payload_error <= benchsoc_etherbone_probe_source_source_payload_error;
			benchsoc_etherbone_probe_source_param_addr_size <= benchsoc_etherbone_probe_source_source_param_addr_size;
			benchsoc_etherbone_probe_source_param_nr <= benchsoc_etherbone_probe_source_source_param_nr;
			benchsoc_etherbone_probe_source_param_pf <= benchsoc_etherbone_probe_source_source_param_pf;
			benchsoc_etherbone_probe_source_param_port_size <= benchsoc_etherbone_probe_source_source_param_port_size;
			benchsoc_etherbone_probe_source_param_pr <= benchsoc_etherbone_probe_source_source_param_pr;
			benchsoc_etherbone_probe_source_param_src_port <= benchsoc_etherbone_probe_source_source_param_src_port;
			benchsoc_etherbone_probe_source_param_dst_port <= benchsoc_etherbone_probe_source_source_param_dst_port;
			benchsoc_etherbone_probe_source_param_ip_address <= benchsoc_etherbone_probe_source_source_param_ip_address;
			benchsoc_etherbone_probe_source_param_length <= benchsoc_etherbone_probe_source_source_param_length;
			benchsoc_etherbone_probe_source_param_pf <= 1'd0;
			benchsoc_etherbone_probe_source_param_pr <= 1'd1;
			if ((benchsoc_etherbone_probe_source_valid & benchsoc_etherbone_probe_source_ready)) begin
				if (benchsoc_etherbone_probe_source_last) begin
					liteethetherboneprobe_next_state <= 1'd0;
				end
			end
		end
		default: begin
			if (benchsoc_etherbone_probe_source_source_valid) begin
				liteethetherboneprobe_next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_etherbone_record_depacketizer_sink_valid = benchsoc_etherbone_record_sink_sink_valid;
assign benchsoc_etherbone_record_sink_sink_ready = benchsoc_etherbone_record_depacketizer_sink_ready;
assign benchsoc_etherbone_record_depacketizer_sink_first = benchsoc_etherbone_record_sink_sink_first;
assign benchsoc_etherbone_record_depacketizer_sink_last = benchsoc_etherbone_record_sink_sink_last;
assign benchsoc_etherbone_record_depacketizer_sink_payload_data = benchsoc_etherbone_record_sink_sink_payload_data;
assign benchsoc_etherbone_record_depacketizer_sink_payload_last_be = benchsoc_etherbone_record_sink_sink_payload_last_be;
assign benchsoc_etherbone_record_depacketizer_sink_payload_error = benchsoc_etherbone_record_sink_sink_payload_error;
assign benchsoc_etherbone_record_depacketizer_sink_param_addr_size = benchsoc_etherbone_record_sink_sink_param_addr_size;
assign benchsoc_etherbone_record_depacketizer_sink_param_nr = benchsoc_etherbone_record_sink_sink_param_nr;
assign benchsoc_etherbone_record_depacketizer_sink_param_pf = benchsoc_etherbone_record_sink_sink_param_pf;
assign benchsoc_etherbone_record_depacketizer_sink_param_port_size = benchsoc_etherbone_record_sink_sink_param_port_size;
assign benchsoc_etherbone_record_depacketizer_sink_param_pr = benchsoc_etherbone_record_sink_sink_param_pr;
assign benchsoc_etherbone_record_depacketizer_sink_param_src_port = benchsoc_etherbone_record_sink_sink_param_src_port;
assign benchsoc_etherbone_record_depacketizer_sink_param_dst_port = benchsoc_etherbone_record_sink_sink_param_dst_port;
assign benchsoc_etherbone_record_depacketizer_sink_param_ip_address = benchsoc_etherbone_record_sink_sink_param_ip_address;
assign benchsoc_etherbone_record_depacketizer_sink_param_length = benchsoc_etherbone_record_sink_sink_param_length;
assign benchsoc_etherbone_record_receiver_sink_valid = benchsoc_etherbone_record_depacketizer_source_valid;
assign benchsoc_etherbone_record_depacketizer_source_ready = benchsoc_etherbone_record_receiver_sink_ready;
assign benchsoc_etherbone_record_receiver_sink_first = benchsoc_etherbone_record_depacketizer_source_first;
assign benchsoc_etherbone_record_receiver_sink_last = benchsoc_etherbone_record_depacketizer_source_last;
assign benchsoc_etherbone_record_receiver_sink_payload_last_be = benchsoc_etherbone_record_depacketizer_source_payload_last_be;
assign benchsoc_etherbone_record_receiver_sink_payload_error = benchsoc_etherbone_record_depacketizer_source_payload_error;
assign benchsoc_etherbone_record_receiver_sink_param_bca = benchsoc_etherbone_record_depacketizer_source_param_bca;
assign benchsoc_etherbone_record_receiver_sink_param_byte_enable = benchsoc_etherbone_record_depacketizer_source_param_byte_enable;
assign benchsoc_etherbone_record_receiver_sink_param_cyc = benchsoc_etherbone_record_depacketizer_source_param_cyc;
assign benchsoc_etherbone_record_receiver_sink_param_rca = benchsoc_etherbone_record_depacketizer_source_param_rca;
assign benchsoc_etherbone_record_receiver_sink_param_rcount = benchsoc_etherbone_record_depacketizer_source_param_rcount;
assign benchsoc_etherbone_record_receiver_sink_param_rff = benchsoc_etherbone_record_depacketizer_source_param_rff;
assign benchsoc_etherbone_record_receiver_sink_param_wca = benchsoc_etherbone_record_depacketizer_source_param_wca;
assign benchsoc_etherbone_record_receiver_sink_param_wcount = benchsoc_etherbone_record_depacketizer_source_param_wcount;
assign benchsoc_etherbone_record_receiver_sink_param_wff = benchsoc_etherbone_record_depacketizer_source_param_wff;
always @(*) begin
	benchsoc_etherbone_record_receiver_sink_payload_data <= 32'd0;
	benchsoc_etherbone_record_receiver_sink_payload_data <= benchsoc_etherbone_record_depacketizer_source_payload_data;
	benchsoc_etherbone_record_receiver_sink_payload_data <= {benchsoc_etherbone_record_depacketizer_source_payload_data[7:0], benchsoc_etherbone_record_depacketizer_source_payload_data[15:8], benchsoc_etherbone_record_depacketizer_source_payload_data[23:16], benchsoc_etherbone_record_depacketizer_source_payload_data[31:24]};
end
assign benchsoc_etherbone_record_packetizer_sink_valid = benchsoc_etherbone_record_sender_source_valid;
assign benchsoc_etherbone_record_sender_source_ready = benchsoc_etherbone_record_packetizer_sink_ready;
assign benchsoc_etherbone_record_packetizer_sink_first = benchsoc_etherbone_record_sender_source_first;
assign benchsoc_etherbone_record_packetizer_sink_last = benchsoc_etherbone_record_sender_source_last;
assign benchsoc_etherbone_record_packetizer_sink_payload_last_be = benchsoc_etherbone_record_sender_source_payload_last_be;
assign benchsoc_etherbone_record_packetizer_sink_payload_error = benchsoc_etherbone_record_sender_source_payload_error;
assign benchsoc_etherbone_record_packetizer_sink_param_bca = benchsoc_etherbone_record_sender_source_param_bca;
assign benchsoc_etherbone_record_packetizer_sink_param_byte_enable = benchsoc_etherbone_record_sender_source_param_byte_enable;
assign benchsoc_etherbone_record_packetizer_sink_param_cyc = benchsoc_etherbone_record_sender_source_param_cyc;
assign benchsoc_etherbone_record_packetizer_sink_param_rca = benchsoc_etherbone_record_sender_source_param_rca;
assign benchsoc_etherbone_record_packetizer_sink_param_rcount = benchsoc_etherbone_record_sender_source_param_rcount;
assign benchsoc_etherbone_record_packetizer_sink_param_rff = benchsoc_etherbone_record_sender_source_param_rff;
assign benchsoc_etherbone_record_packetizer_sink_param_wca = benchsoc_etherbone_record_sender_source_param_wca;
assign benchsoc_etherbone_record_packetizer_sink_param_wcount = benchsoc_etherbone_record_sender_source_param_wcount;
assign benchsoc_etherbone_record_packetizer_sink_param_wff = benchsoc_etherbone_record_sender_source_param_wff;
assign benchsoc_etherbone_record_source_source_valid = benchsoc_etherbone_record_packetizer_source_valid;
assign benchsoc_etherbone_record_packetizer_source_ready = benchsoc_etherbone_record_source_source_ready;
assign benchsoc_etherbone_record_source_source_first = benchsoc_etherbone_record_packetizer_source_first;
assign benchsoc_etherbone_record_source_source_last = benchsoc_etherbone_record_packetizer_source_last;
assign benchsoc_etherbone_record_source_source_payload_data = benchsoc_etherbone_record_packetizer_source_payload_data;
assign benchsoc_etherbone_record_source_source_payload_last_be = benchsoc_etherbone_record_packetizer_source_payload_last_be;
assign benchsoc_etherbone_record_source_source_payload_error = benchsoc_etherbone_record_packetizer_source_payload_error;
assign benchsoc_etherbone_record_source_source_param_addr_size = benchsoc_etherbone_record_packetizer_source_param_addr_size;
assign benchsoc_etherbone_record_source_source_param_nr = benchsoc_etherbone_record_packetizer_source_param_nr;
assign benchsoc_etherbone_record_source_source_param_pf = benchsoc_etherbone_record_packetizer_source_param_pf;
assign benchsoc_etherbone_record_source_source_param_port_size = benchsoc_etherbone_record_packetizer_source_param_port_size;
assign benchsoc_etherbone_record_source_source_param_pr = benchsoc_etherbone_record_packetizer_source_param_pr;
assign benchsoc_etherbone_record_source_source_param_src_port = benchsoc_etherbone_record_packetizer_source_param_src_port;
assign benchsoc_etherbone_record_source_source_param_dst_port = benchsoc_etherbone_record_packetizer_source_param_dst_port;
always @(*) begin
	benchsoc_etherbone_record_source_source_param_length <= 16'd0;
	benchsoc_etherbone_record_source_source_param_length <= benchsoc_etherbone_record_packetizer_source_param_length;
	benchsoc_etherbone_record_source_source_param_length <= ((((3'd4 + ((benchsoc_etherbone_record_sender_source_param_wcount != 1'd0) * 3'd4)) + (benchsoc_etherbone_record_sender_source_param_wcount * 3'd4)) + ((benchsoc_etherbone_record_sender_source_param_rcount != 1'd0) * 3'd4)) + (benchsoc_etherbone_record_sender_source_param_rcount * 3'd4));
end
always @(*) begin
	benchsoc_etherbone_record_source_source_param_ip_address <= 32'd0;
	benchsoc_etherbone_record_source_source_param_ip_address <= benchsoc_etherbone_record_packetizer_source_param_ip_address;
	benchsoc_etherbone_record_source_source_param_ip_address <= benchsoc_etherbone_record_last_ip_address;
end
always @(*) begin
	benchsoc_etherbone_record_packetizer_sink_payload_data <= 32'd0;
	benchsoc_etherbone_record_packetizer_sink_payload_data <= benchsoc_etherbone_record_sender_source_payload_data;
	benchsoc_etherbone_record_packetizer_sink_payload_data <= {benchsoc_etherbone_record_sender_source_payload_data[7:0], benchsoc_etherbone_record_sender_source_payload_data[15:8], benchsoc_etherbone_record_sender_source_payload_data[23:16], benchsoc_etherbone_record_sender_source_payload_data[31:24]};
end
assign benchsoc_etherbone_record_depacketizer_header = benchsoc_etherbone_record_depacketizer_sr;
assign benchsoc_etherbone_record_depacketizer_source_param_bca = {rhs_slice_proxy84};
assign benchsoc_etherbone_record_depacketizer_source_param_byte_enable = {rhs_slice_proxy85[7:0]};
assign benchsoc_etherbone_record_depacketizer_source_param_cyc = {rhs_slice_proxy86};
assign benchsoc_etherbone_record_depacketizer_source_param_rca = {rhs_slice_proxy87};
assign benchsoc_etherbone_record_depacketizer_source_param_rcount = {rhs_slice_proxy88[7:0]};
assign benchsoc_etherbone_record_depacketizer_source_param_rff = {rhs_slice_proxy89};
assign benchsoc_etherbone_record_depacketizer_source_param_wca = {rhs_slice_proxy90};
assign benchsoc_etherbone_record_depacketizer_source_param_wcount = {rhs_slice_proxy91[7:0]};
assign benchsoc_etherbone_record_depacketizer_source_param_wff = {rhs_slice_proxy92};
assign benchsoc_etherbone_record_depacketizer_source_payload_error = benchsoc_etherbone_record_depacketizer_sink_payload_error;
assign benchsoc_etherbone_record_depacketizer_new_last_be = {benchsoc_etherbone_record_depacketizer_sink_payload_last_be[3], benchsoc_etherbone_record_depacketizer_sink_payload_last_be[2], benchsoc_etherbone_record_depacketizer_sink_payload_last_be[1], benchsoc_etherbone_record_depacketizer_sink_payload_last_be[0]};
assign benchsoc_etherbone_record_depacketizer_is_in_copy = (benchsoc_etherbone_record_depacketizer_is_ongoing0 | benchsoc_etherbone_record_depacketizer_is_ongoing1);
always @(*) begin
	benchsoc_etherbone_record_depacketizer_source_last <= 1'd0;
	if (benchsoc_etherbone_record_depacketizer_source_last_s) begin
		benchsoc_etherbone_record_depacketizer_source_last <= benchsoc_etherbone_record_depacketizer_source_last_b;
	end else begin
		benchsoc_etherbone_record_depacketizer_source_last <= benchsoc_etherbone_record_depacketizer_source_last_a;
	end
end
always @(*) begin
	benchsoc_etherbone_record_depacketizer_is_ongoing1 <= 1'd0;
	fsm0_next_state0 <= 2'd0;
	benchsoc_etherbone_record_depacketizer_count_fsm0_next_value8 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_count_fsm0_next_value_ce8 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value9 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_is_ongoing2 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value_ce9 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_is_ongoing3 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_sink_ready <= 1'd0;
	benchsoc_etherbone_record_depacketizer_sr_shift <= 1'd0;
	benchsoc_etherbone_record_depacketizer_source_last_a <= 1'd0;
	benchsoc_etherbone_record_depacketizer_source_last_b <= 1'd0;
	benchsoc_etherbone_record_depacketizer_source_last_s <= 1'd0;
	benchsoc_etherbone_record_depacketizer_source_payload_data <= 32'd0;
	fsm1_next_state0 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value4 <= 4'd0;
	benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value_ce4 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_source_valid <= 1'd0;
	benchsoc_etherbone_record_depacketizer_is_ongoing0 <= 1'd0;
	benchsoc_etherbone_record_depacketizer_source_payload_last_be <= 4'd0;
	fsm0_next_state0 <= fsm0_state0;
	case (fsm0_state0)
		1'd1: begin
			benchsoc_etherbone_record_depacketizer_sink_ready <= 1'd1;
			if (benchsoc_etherbone_record_depacketizer_sink_valid) begin
				benchsoc_etherbone_record_depacketizer_count_fsm0_next_value8 <= (benchsoc_etherbone_record_depacketizer_count + 1'd1);
				benchsoc_etherbone_record_depacketizer_count_fsm0_next_value_ce8 <= 1'd1;
				benchsoc_etherbone_record_depacketizer_sr_shift <= 1'd1;
				if ((benchsoc_etherbone_record_depacketizer_count == 1'd0)) begin
					fsm0_next_state0 <= 2'd2;
					benchsoc_etherbone_record_depacketizer_count_fsm0_next_value8 <= (benchsoc_etherbone_record_depacketizer_count + 1'd1);
					benchsoc_etherbone_record_depacketizer_count_fsm0_next_value_ce8 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_record_depacketizer_source_valid <= (benchsoc_etherbone_record_depacketizer_sink_valid | benchsoc_etherbone_record_depacketizer_sink_d_last);
			benchsoc_etherbone_record_depacketizer_source_last_a <= (benchsoc_etherbone_record_depacketizer_sink_last | benchsoc_etherbone_record_depacketizer_sink_d_last);
			benchsoc_etherbone_record_depacketizer_sink_ready <= benchsoc_etherbone_record_depacketizer_source_ready;
			benchsoc_etherbone_record_depacketizer_source_payload_data <= benchsoc_etherbone_record_depacketizer_sink_payload_data;
			if ((benchsoc_etherbone_record_depacketizer_source_valid & benchsoc_etherbone_record_depacketizer_source_ready)) begin
				if (benchsoc_etherbone_record_depacketizer_source_last) begin
					fsm0_next_state0 <= 1'd0;
				end
			end
			benchsoc_etherbone_record_depacketizer_is_ongoing0 <= 1'd1;
			benchsoc_etherbone_record_depacketizer_is_ongoing2 <= 1'd1;
		end
		2'd3: begin
			benchsoc_etherbone_record_depacketizer_is_ongoing1 <= 1'd1;
			benchsoc_etherbone_record_depacketizer_is_ongoing3 <= 1'd1;
		end
		default: begin
			benchsoc_etherbone_record_depacketizer_sink_ready <= 1'd1;
			benchsoc_etherbone_record_depacketizer_count_fsm0_next_value8 <= 1'd1;
			benchsoc_etherbone_record_depacketizer_count_fsm0_next_value_ce8 <= 1'd1;
			if (benchsoc_etherbone_record_depacketizer_sink_valid) begin
				benchsoc_etherbone_record_depacketizer_sr_shift <= 1'd1;
				benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value9 <= 1'd1;
				benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value_ce9 <= 1'd1;
				if (1'd1) begin
					fsm0_next_state0 <= 2'd2;
				end else begin
					fsm0_next_state0 <= 1'd1;
				end
			end
		end
	endcase
	fsm1_next_state0 <= fsm1_state0;
	case (fsm1_state0)
		1'd1: begin
			benchsoc_etherbone_record_depacketizer_source_last_b <= 1'd1;
			benchsoc_etherbone_record_depacketizer_source_last_s <= 1'd1;
			benchsoc_etherbone_record_depacketizer_source_payload_last_be <= benchsoc_etherbone_record_depacketizer_delayed_last_be;
			benchsoc_etherbone_record_depacketizer_sink_ready <= 1'd0;
			if ((benchsoc_etherbone_record_depacketizer_source_ready & benchsoc_etherbone_record_depacketizer_source_valid)) begin
				fsm1_next_state0 <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_etherbone_record_depacketizer_sink_valid & benchsoc_etherbone_record_depacketizer_sink_last) & (benchsoc_etherbone_record_depacketizer_sink_payload_last_be > benchsoc_etherbone_record_depacketizer_new_last_be))) begin
				benchsoc_etherbone_record_depacketizer_source_last_b <= 1'd0;
				benchsoc_etherbone_record_depacketizer_source_last_s <= 1'd1;
				benchsoc_etherbone_record_depacketizer_source_payload_last_be <= 1'd0;
				if (((benchsoc_etherbone_record_depacketizer_source_ready & benchsoc_etherbone_record_depacketizer_source_valid) | ((~benchsoc_etherbone_record_depacketizer_was_in_copy) & benchsoc_etherbone_record_depacketizer_is_in_copy))) begin
					benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value4 <= benchsoc_etherbone_record_depacketizer_new_last_be;
					benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value_ce4 <= 1'd1;
					fsm1_next_state0 <= 1'd1;
				end
			end else begin
				if (benchsoc_etherbone_record_depacketizer_sink_last) begin
					benchsoc_etherbone_record_depacketizer_source_last_b <= 1'd1;
					benchsoc_etherbone_record_depacketizer_source_last_s <= 1'd1;
					benchsoc_etherbone_record_depacketizer_source_payload_last_be <= benchsoc_etherbone_record_depacketizer_new_last_be;
				end
			end
			if ((benchsoc_etherbone_record_depacketizer_is_ongoing2 | (benchsoc_etherbone_record_depacketizer_is_ongoing3 & (~benchsoc_etherbone_record_depacketizer_fsm_from_idle)))) begin
				benchsoc_etherbone_record_depacketizer_sink_ready <= benchsoc_etherbone_record_depacketizer_source_ready;
			end else begin
				benchsoc_etherbone_record_depacketizer_sink_ready <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_etherbone_record_receiver_sink_sink_valid = benchsoc_etherbone_record_receiver_sink_valid;
assign benchsoc_etherbone_record_receiver_sink_ready = benchsoc_etherbone_record_receiver_sink_sink_ready;
assign benchsoc_etherbone_record_receiver_sink_sink_first = benchsoc_etherbone_record_receiver_sink_first;
assign benchsoc_etherbone_record_receiver_sink_sink_last = benchsoc_etherbone_record_receiver_sink_last;
assign benchsoc_etherbone_record_receiver_sink_sink_payload_data = benchsoc_etherbone_record_receiver_sink_payload_data;
assign benchsoc_etherbone_record_receiver_sink_sink_payload_last_be = benchsoc_etherbone_record_receiver_sink_payload_last_be;
assign benchsoc_etherbone_record_receiver_sink_sink_payload_error = benchsoc_etherbone_record_receiver_sink_payload_error;
assign benchsoc_etherbone_record_receiver_sink_sink_param_bca = benchsoc_etherbone_record_receiver_sink_param_bca;
assign benchsoc_etherbone_record_receiver_sink_sink_param_byte_enable = benchsoc_etherbone_record_receiver_sink_param_byte_enable;
assign benchsoc_etherbone_record_receiver_sink_sink_param_cyc = benchsoc_etherbone_record_receiver_sink_param_cyc;
assign benchsoc_etherbone_record_receiver_sink_sink_param_rca = benchsoc_etherbone_record_receiver_sink_param_rca;
assign benchsoc_etherbone_record_receiver_sink_sink_param_rcount = benchsoc_etherbone_record_receiver_sink_param_rcount;
assign benchsoc_etherbone_record_receiver_sink_sink_param_rff = benchsoc_etherbone_record_receiver_sink_param_rff;
assign benchsoc_etherbone_record_receiver_sink_sink_param_wca = benchsoc_etherbone_record_receiver_sink_param_wca;
assign benchsoc_etherbone_record_receiver_sink_sink_param_wcount = benchsoc_etherbone_record_receiver_sink_param_wcount;
assign benchsoc_etherbone_record_receiver_sink_sink_param_wff = benchsoc_etherbone_record_receiver_sink_param_wff;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_bca = benchsoc_etherbone_record_receiver_sink_sink_param_bca;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_byte_enable = benchsoc_etherbone_record_receiver_sink_sink_param_byte_enable;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_cyc = benchsoc_etherbone_record_receiver_sink_sink_param_cyc;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_rca = benchsoc_etherbone_record_receiver_sink_sink_param_rca;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_rcount = benchsoc_etherbone_record_receiver_sink_sink_param_rcount;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_rff = benchsoc_etherbone_record_receiver_sink_sink_param_rff;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_wca = benchsoc_etherbone_record_receiver_sink_sink_param_wca;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_wcount = benchsoc_etherbone_record_receiver_sink_sink_param_wcount;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_param_wff = benchsoc_etherbone_record_receiver_sink_sink_param_wff;
assign benchsoc_etherbone_record_receiver_payload_fifo_sink_last = benchsoc_etherbone_record_receiver_sink_sink_last;
assign benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_data = benchsoc_etherbone_record_receiver_sink_sink_payload_data;
assign benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_last_be = benchsoc_etherbone_record_receiver_sink_sink_payload_last_be;
assign benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_error = benchsoc_etherbone_record_receiver_sink_sink_payload_error;
assign benchsoc_etherbone_record_receiver_param_fifo_sink_valid = (benchsoc_etherbone_record_receiver_sink_sink_valid & benchsoc_etherbone_record_receiver_sink_sink_last);
assign benchsoc_etherbone_record_receiver_payload_fifo_sink_valid = (benchsoc_etherbone_record_receiver_sink_sink_valid & benchsoc_etherbone_record_receiver_payload_fifo_sink_ready);
assign benchsoc_etherbone_record_receiver_sink_sink_ready = (benchsoc_etherbone_record_receiver_param_fifo_sink_ready & benchsoc_etherbone_record_receiver_payload_fifo_sink_ready);
assign benchsoc_etherbone_record_receiver_source_source_valid = benchsoc_etherbone_record_receiver_param_fifo_source_valid;
assign benchsoc_etherbone_record_receiver_source_source_param_bca = benchsoc_etherbone_record_receiver_param_fifo_source_param_bca;
assign benchsoc_etherbone_record_receiver_source_source_param_byte_enable = benchsoc_etherbone_record_receiver_param_fifo_source_param_byte_enable;
assign benchsoc_etherbone_record_receiver_source_source_param_cyc = benchsoc_etherbone_record_receiver_param_fifo_source_param_cyc;
assign benchsoc_etherbone_record_receiver_source_source_param_rca = benchsoc_etherbone_record_receiver_param_fifo_source_param_rca;
assign benchsoc_etherbone_record_receiver_source_source_param_rcount = benchsoc_etherbone_record_receiver_param_fifo_source_param_rcount;
assign benchsoc_etherbone_record_receiver_source_source_param_rff = benchsoc_etherbone_record_receiver_param_fifo_source_param_rff;
assign benchsoc_etherbone_record_receiver_source_source_param_wca = benchsoc_etherbone_record_receiver_param_fifo_source_param_wca;
assign benchsoc_etherbone_record_receiver_source_source_param_wcount = benchsoc_etherbone_record_receiver_param_fifo_source_param_wcount;
assign benchsoc_etherbone_record_receiver_source_source_param_wff = benchsoc_etherbone_record_receiver_param_fifo_source_param_wff;
always @(*) begin
	benchsoc_etherbone_record_receiver_source_source_first <= 1'd0;
	benchsoc_etherbone_record_receiver_source_source_first <= benchsoc_etherbone_record_receiver_param_fifo_source_first;
	benchsoc_etherbone_record_receiver_source_source_first <= benchsoc_etherbone_record_receiver_payload_fifo_source_first;
end
assign benchsoc_etherbone_record_receiver_source_source_last = benchsoc_etherbone_record_receiver_payload_fifo_source_last;
assign benchsoc_etherbone_record_receiver_source_source_payload_data = benchsoc_etherbone_record_receiver_payload_fifo_source_payload_data;
assign benchsoc_etherbone_record_receiver_source_source_payload_last_be = benchsoc_etherbone_record_receiver_payload_fifo_source_payload_last_be;
assign benchsoc_etherbone_record_receiver_source_source_payload_error = benchsoc_etherbone_record_receiver_payload_fifo_source_payload_error;
assign benchsoc_etherbone_record_receiver_param_fifo_source_ready = ((benchsoc_etherbone_record_receiver_source_source_valid & benchsoc_etherbone_record_receiver_source_source_last) & benchsoc_etherbone_record_receiver_source_source_ready);
assign benchsoc_etherbone_record_receiver_payload_fifo_source_ready = (benchsoc_etherbone_record_receiver_source_source_valid & benchsoc_etherbone_record_receiver_source_source_ready);
assign benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_din = {benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_last, benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_first, benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_error, benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_last_be, benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_data};
assign {benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_last, benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_first, benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_error, benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_last_be, benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_data} = benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_dout;
assign benchsoc_etherbone_record_receiver_payload_fifo_sink_ready = benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_writable;
assign benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_we = benchsoc_etherbone_record_receiver_payload_fifo_sink_valid;
assign benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_first = benchsoc_etherbone_record_receiver_payload_fifo_sink_first;
assign benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_last = benchsoc_etherbone_record_receiver_payload_fifo_sink_last;
assign benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_data = benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_data;
assign benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_last_be = benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_last_be;
assign benchsoc_etherbone_record_receiver_payload_fifo_fifo_in_payload_error = benchsoc_etherbone_record_receiver_payload_fifo_sink_payload_error;
assign benchsoc_etherbone_record_receiver_payload_fifo_source_valid = benchsoc_etherbone_record_receiver_payload_fifo_readable;
assign benchsoc_etherbone_record_receiver_payload_fifo_source_first = benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_first;
assign benchsoc_etherbone_record_receiver_payload_fifo_source_last = benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_last;
assign benchsoc_etherbone_record_receiver_payload_fifo_source_payload_data = benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_data;
assign benchsoc_etherbone_record_receiver_payload_fifo_source_payload_last_be = benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_last_be;
assign benchsoc_etherbone_record_receiver_payload_fifo_source_payload_error = benchsoc_etherbone_record_receiver_payload_fifo_fifo_out_payload_error;
assign benchsoc_etherbone_record_receiver_payload_fifo_re = benchsoc_etherbone_record_receiver_payload_fifo_source_ready;
assign benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_re = (benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_readable & ((~benchsoc_etherbone_record_receiver_payload_fifo_readable) | benchsoc_etherbone_record_receiver_payload_fifo_re));
assign benchsoc_etherbone_record_receiver_payload_fifo_level1 = (benchsoc_etherbone_record_receiver_payload_fifo_level0 + benchsoc_etherbone_record_receiver_payload_fifo_readable);
always @(*) begin
	benchsoc_etherbone_record_receiver_payload_fifo_wrport_adr <= 11'd0;
	if (benchsoc_etherbone_record_receiver_payload_fifo_replace) begin
		benchsoc_etherbone_record_receiver_payload_fifo_wrport_adr <= (benchsoc_etherbone_record_receiver_payload_fifo_produce - 1'd1);
	end else begin
		benchsoc_etherbone_record_receiver_payload_fifo_wrport_adr <= benchsoc_etherbone_record_receiver_payload_fifo_produce;
	end
end
assign benchsoc_etherbone_record_receiver_payload_fifo_wrport_dat_w = benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_din;
assign benchsoc_etherbone_record_receiver_payload_fifo_wrport_we = (benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_we & (benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_writable | benchsoc_etherbone_record_receiver_payload_fifo_replace));
assign benchsoc_etherbone_record_receiver_payload_fifo_do_read = (benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_readable & benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_re);
assign benchsoc_etherbone_record_receiver_payload_fifo_rdport_adr = benchsoc_etherbone_record_receiver_payload_fifo_consume;
assign benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_dout = benchsoc_etherbone_record_receiver_payload_fifo_rdport_dat_r;
assign benchsoc_etherbone_record_receiver_payload_fifo_rdport_re = benchsoc_etherbone_record_receiver_payload_fifo_do_read;
assign benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_writable = (benchsoc_etherbone_record_receiver_payload_fifo_level0 != 11'd1060);
assign benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_readable = (benchsoc_etherbone_record_receiver_payload_fifo_level0 != 1'd0);
assign benchsoc_etherbone_record_receiver_param_fifo_sink_ready = ((~benchsoc_etherbone_record_receiver_param_fifo_source_valid) | benchsoc_etherbone_record_receiver_param_fifo_source_ready);
always @(*) begin
	benchsoc_etherbone_record_receiver_base_addr_update <= 1'd0;
	liteethetherbonerecordreceiver_next_state <= 2'd0;
	benchsoc_etherbone_record_receiver_source_last <= 1'd0;
	benchsoc_etherbone_record_receiver_count_next_value <= 9'd0;
	benchsoc_etherbone_record_receiver_source_payload_addr <= 32'd0;
	benchsoc_etherbone_record_receiver_count_next_value_ce <= 1'd0;
	benchsoc_etherbone_record_receiver_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_record_receiver_source_payload_data <= 32'd0;
	benchsoc_etherbone_record_receiver_source_param_we <= 1'd0;
	benchsoc_etherbone_record_receiver_source_param_count <= 8'd0;
	benchsoc_etherbone_record_receiver_source_param_base_addr <= 32'd0;
	benchsoc_etherbone_record_receiver_source_param_be <= 4'd0;
	benchsoc_etherbone_record_receiver_source_source_ready <= 1'd0;
	benchsoc_etherbone_record_receiver_source_valid <= 1'd0;
	liteethetherbonerecordreceiver_next_state <= liteethetherbonerecordreceiver_state;
	case (liteethetherbonerecordreceiver_state)
		1'd1: begin
			benchsoc_etherbone_record_receiver_source_valid <= benchsoc_etherbone_record_receiver_source_source_valid;
			benchsoc_etherbone_record_receiver_source_last <= (benchsoc_etherbone_record_receiver_count == (benchsoc_etherbone_record_receiver_source_source_param_wcount - 1'd1));
			benchsoc_etherbone_record_receiver_source_payload_last_be <= (benchsoc_etherbone_record_receiver_source_last <<< 2'd3);
			benchsoc_etherbone_record_receiver_source_param_count <= benchsoc_etherbone_record_receiver_source_source_param_wcount;
			benchsoc_etherbone_record_receiver_source_param_be <= benchsoc_etherbone_record_receiver_source_source_param_byte_enable;
			benchsoc_etherbone_record_receiver_source_payload_addr <= (benchsoc_etherbone_record_receiver_base_addr[31:2] + benchsoc_etherbone_record_receiver_count);
			benchsoc_etherbone_record_receiver_source_param_we <= 1'd1;
			benchsoc_etherbone_record_receiver_source_payload_data <= benchsoc_etherbone_record_receiver_source_source_payload_data;
			benchsoc_etherbone_record_receiver_source_source_ready <= benchsoc_etherbone_record_receiver_source_ready;
			if ((benchsoc_etherbone_record_receiver_source_valid & benchsoc_etherbone_record_receiver_source_ready)) begin
				benchsoc_etherbone_record_receiver_count_next_value <= (benchsoc_etherbone_record_receiver_count + 1'd1);
				benchsoc_etherbone_record_receiver_count_next_value_ce <= 1'd1;
				if (benchsoc_etherbone_record_receiver_source_last) begin
					if (benchsoc_etherbone_record_receiver_source_source_param_rcount) begin
						liteethetherbonerecordreceiver_next_state <= 2'd2;
					end else begin
						liteethetherbonerecordreceiver_next_state <= 1'd0;
					end
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_record_receiver_count_next_value <= 1'd0;
			benchsoc_etherbone_record_receiver_count_next_value_ce <= 1'd1;
			if (benchsoc_etherbone_record_receiver_source_source_valid) begin
				benchsoc_etherbone_record_receiver_base_addr_update <= 1'd1;
				liteethetherbonerecordreceiver_next_state <= 2'd3;
			end
		end
		2'd3: begin
			benchsoc_etherbone_record_receiver_source_valid <= benchsoc_etherbone_record_receiver_source_source_valid;
			benchsoc_etherbone_record_receiver_source_last <= (benchsoc_etherbone_record_receiver_count == (benchsoc_etherbone_record_receiver_source_source_param_rcount - 1'd1));
			benchsoc_etherbone_record_receiver_source_payload_last_be <= (benchsoc_etherbone_record_receiver_source_last <<< 2'd3);
			benchsoc_etherbone_record_receiver_source_param_count <= benchsoc_etherbone_record_receiver_source_source_param_rcount;
			benchsoc_etherbone_record_receiver_source_param_base_addr <= benchsoc_etherbone_record_receiver_base_addr;
			benchsoc_etherbone_record_receiver_source_payload_addr <= benchsoc_etherbone_record_receiver_source_source_payload_data[31:2];
			benchsoc_etherbone_record_receiver_source_source_ready <= benchsoc_etherbone_record_receiver_source_ready;
			if ((benchsoc_etherbone_record_receiver_source_valid & benchsoc_etherbone_record_receiver_source_ready)) begin
				benchsoc_etherbone_record_receiver_count_next_value <= (benchsoc_etherbone_record_receiver_count + 1'd1);
				benchsoc_etherbone_record_receiver_count_next_value_ce <= 1'd1;
				if (benchsoc_etherbone_record_receiver_source_last) begin
					liteethetherbonerecordreceiver_next_state <= 1'd0;
				end
			end
		end
		default: begin
			benchsoc_etherbone_record_receiver_source_source_ready <= 1'd1;
			benchsoc_etherbone_record_receiver_count_next_value <= 1'd0;
			benchsoc_etherbone_record_receiver_count_next_value_ce <= 1'd1;
			if (benchsoc_etherbone_record_receiver_source_source_valid) begin
				benchsoc_etherbone_record_receiver_base_addr_update <= 1'd1;
				if (benchsoc_etherbone_record_receiver_source_source_param_wcount) begin
					liteethetherbonerecordreceiver_next_state <= 1'd1;
				end else begin
					if (benchsoc_etherbone_record_receiver_source_source_param_rcount) begin
						liteethetherbonerecordreceiver_next_state <= 2'd3;
					end
				end
			end
		end
	endcase
end
assign benchsoc_etherbone_record_sender_sink_sink_valid = benchsoc_etherbone_record_sender_sink_valid;
assign benchsoc_etherbone_record_sender_sink_ready = benchsoc_etherbone_record_sender_sink_sink_ready;
assign benchsoc_etherbone_record_sender_sink_sink_first = benchsoc_etherbone_record_sender_sink_first;
assign benchsoc_etherbone_record_sender_sink_sink_last = benchsoc_etherbone_record_sender_sink_last;
assign benchsoc_etherbone_record_sender_sink_sink_payload_addr = benchsoc_etherbone_record_sender_sink_payload_addr;
assign benchsoc_etherbone_record_sender_sink_sink_payload_last_be = benchsoc_etherbone_record_sender_sink_payload_last_be;
assign benchsoc_etherbone_record_sender_sink_sink_payload_data = benchsoc_etherbone_record_sender_sink_payload_data;
assign benchsoc_etherbone_record_sender_sink_sink_param_we = benchsoc_etherbone_record_sender_sink_param_we;
assign benchsoc_etherbone_record_sender_sink_sink_param_count = benchsoc_etherbone_record_sender_sink_param_count;
assign benchsoc_etherbone_record_sender_sink_sink_param_base_addr = benchsoc_etherbone_record_sender_sink_param_base_addr;
assign benchsoc_etherbone_record_sender_sink_sink_param_be = benchsoc_etherbone_record_sender_sink_param_be;
assign benchsoc_etherbone_record_sender_source_param_byte_enable = benchsoc_etherbone_record_sender_source_source_param_be;
always @(*) begin
	benchsoc_etherbone_record_sender_source_param_wcount <= 8'd0;
	benchsoc_etherbone_record_sender_source_param_rcount <= 8'd0;
	if (benchsoc_etherbone_record_sender_source_source_param_we) begin
		benchsoc_etherbone_record_sender_source_param_wcount <= benchsoc_etherbone_record_sender_source_source_param_count;
	end else begin
		benchsoc_etherbone_record_sender_source_param_rcount <= benchsoc_etherbone_record_sender_source_source_param_count;
	end
end
assign benchsoc_etherbone_record_sender_param_fifo_sink_param_we = benchsoc_etherbone_record_sender_sink_sink_param_we;
assign benchsoc_etherbone_record_sender_param_fifo_sink_param_count = benchsoc_etherbone_record_sender_sink_sink_param_count;
assign benchsoc_etherbone_record_sender_param_fifo_sink_param_base_addr = benchsoc_etherbone_record_sender_sink_sink_param_base_addr;
assign benchsoc_etherbone_record_sender_param_fifo_sink_param_be = benchsoc_etherbone_record_sender_sink_sink_param_be;
assign benchsoc_etherbone_record_sender_payload_fifo_sink_last = benchsoc_etherbone_record_sender_sink_sink_last;
assign benchsoc_etherbone_record_sender_payload_fifo_sink_payload_addr = benchsoc_etherbone_record_sender_sink_sink_payload_addr;
assign benchsoc_etherbone_record_sender_payload_fifo_sink_payload_last_be = benchsoc_etherbone_record_sender_sink_sink_payload_last_be;
assign benchsoc_etherbone_record_sender_payload_fifo_sink_payload_data = benchsoc_etherbone_record_sender_sink_sink_payload_data;
assign benchsoc_etherbone_record_sender_param_fifo_sink_valid = (benchsoc_etherbone_record_sender_sink_sink_valid & benchsoc_etherbone_record_sender_sink_sink_last);
assign benchsoc_etherbone_record_sender_payload_fifo_sink_valid = (benchsoc_etherbone_record_sender_sink_sink_valid & benchsoc_etherbone_record_sender_payload_fifo_sink_ready);
assign benchsoc_etherbone_record_sender_sink_sink_ready = (benchsoc_etherbone_record_sender_param_fifo_sink_ready & benchsoc_etherbone_record_sender_payload_fifo_sink_ready);
assign benchsoc_etherbone_record_sender_source_source_valid = benchsoc_etherbone_record_sender_param_fifo_source_valid;
assign benchsoc_etherbone_record_sender_source_source_param_we = benchsoc_etherbone_record_sender_param_fifo_source_param_we;
assign benchsoc_etherbone_record_sender_source_source_param_count = benchsoc_etherbone_record_sender_param_fifo_source_param_count;
assign benchsoc_etherbone_record_sender_source_source_param_base_addr = benchsoc_etherbone_record_sender_param_fifo_source_param_base_addr;
assign benchsoc_etherbone_record_sender_source_source_param_be = benchsoc_etherbone_record_sender_param_fifo_source_param_be;
always @(*) begin
	benchsoc_etherbone_record_sender_source_source_first <= 1'd0;
	benchsoc_etherbone_record_sender_source_source_first <= benchsoc_etherbone_record_sender_param_fifo_source_first;
	benchsoc_etherbone_record_sender_source_source_first <= benchsoc_etherbone_record_sender_payload_fifo_source_first;
end
assign benchsoc_etherbone_record_sender_source_source_last = benchsoc_etherbone_record_sender_payload_fifo_source_last;
assign benchsoc_etherbone_record_sender_source_source_payload_addr = benchsoc_etherbone_record_sender_payload_fifo_source_payload_addr;
assign benchsoc_etherbone_record_sender_source_source_payload_last_be = benchsoc_etherbone_record_sender_payload_fifo_source_payload_last_be;
assign benchsoc_etherbone_record_sender_source_source_payload_data = benchsoc_etherbone_record_sender_payload_fifo_source_payload_data;
assign benchsoc_etherbone_record_sender_param_fifo_source_ready = ((benchsoc_etherbone_record_sender_source_source_valid & benchsoc_etherbone_record_sender_source_source_last) & benchsoc_etherbone_record_sender_source_source_ready);
assign benchsoc_etherbone_record_sender_payload_fifo_source_ready = (benchsoc_etherbone_record_sender_source_source_valid & benchsoc_etherbone_record_sender_source_source_ready);
assign benchsoc_etherbone_record_sender_payload_fifo_syncfifo_din = {benchsoc_etherbone_record_sender_payload_fifo_fifo_in_last, benchsoc_etherbone_record_sender_payload_fifo_fifo_in_first, benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_data, benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_last_be, benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_addr};
assign {benchsoc_etherbone_record_sender_payload_fifo_fifo_out_last, benchsoc_etherbone_record_sender_payload_fifo_fifo_out_first, benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_data, benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_last_be, benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_addr} = benchsoc_etherbone_record_sender_payload_fifo_syncfifo_dout;
assign benchsoc_etherbone_record_sender_payload_fifo_sink_ready = benchsoc_etherbone_record_sender_payload_fifo_syncfifo_writable;
assign benchsoc_etherbone_record_sender_payload_fifo_syncfifo_we = benchsoc_etherbone_record_sender_payload_fifo_sink_valid;
assign benchsoc_etherbone_record_sender_payload_fifo_fifo_in_first = benchsoc_etherbone_record_sender_payload_fifo_sink_first;
assign benchsoc_etherbone_record_sender_payload_fifo_fifo_in_last = benchsoc_etherbone_record_sender_payload_fifo_sink_last;
assign benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_addr = benchsoc_etherbone_record_sender_payload_fifo_sink_payload_addr;
assign benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_last_be = benchsoc_etherbone_record_sender_payload_fifo_sink_payload_last_be;
assign benchsoc_etherbone_record_sender_payload_fifo_fifo_in_payload_data = benchsoc_etherbone_record_sender_payload_fifo_sink_payload_data;
assign benchsoc_etherbone_record_sender_payload_fifo_source_valid = benchsoc_etherbone_record_sender_payload_fifo_readable;
assign benchsoc_etherbone_record_sender_payload_fifo_source_first = benchsoc_etherbone_record_sender_payload_fifo_fifo_out_first;
assign benchsoc_etherbone_record_sender_payload_fifo_source_last = benchsoc_etherbone_record_sender_payload_fifo_fifo_out_last;
assign benchsoc_etherbone_record_sender_payload_fifo_source_payload_addr = benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_addr;
assign benchsoc_etherbone_record_sender_payload_fifo_source_payload_last_be = benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_last_be;
assign benchsoc_etherbone_record_sender_payload_fifo_source_payload_data = benchsoc_etherbone_record_sender_payload_fifo_fifo_out_payload_data;
assign benchsoc_etherbone_record_sender_payload_fifo_re = benchsoc_etherbone_record_sender_payload_fifo_source_ready;
assign benchsoc_etherbone_record_sender_payload_fifo_syncfifo_re = (benchsoc_etherbone_record_sender_payload_fifo_syncfifo_readable & ((~benchsoc_etherbone_record_sender_payload_fifo_readable) | benchsoc_etherbone_record_sender_payload_fifo_re));
assign benchsoc_etherbone_record_sender_payload_fifo_level1 = (benchsoc_etherbone_record_sender_payload_fifo_level0 + benchsoc_etherbone_record_sender_payload_fifo_readable);
always @(*) begin
	benchsoc_etherbone_record_sender_payload_fifo_wrport_adr <= 11'd0;
	if (benchsoc_etherbone_record_sender_payload_fifo_replace) begin
		benchsoc_etherbone_record_sender_payload_fifo_wrport_adr <= (benchsoc_etherbone_record_sender_payload_fifo_produce - 1'd1);
	end else begin
		benchsoc_etherbone_record_sender_payload_fifo_wrport_adr <= benchsoc_etherbone_record_sender_payload_fifo_produce;
	end
end
assign benchsoc_etherbone_record_sender_payload_fifo_wrport_dat_w = benchsoc_etherbone_record_sender_payload_fifo_syncfifo_din;
assign benchsoc_etherbone_record_sender_payload_fifo_wrport_we = (benchsoc_etherbone_record_sender_payload_fifo_syncfifo_we & (benchsoc_etherbone_record_sender_payload_fifo_syncfifo_writable | benchsoc_etherbone_record_sender_payload_fifo_replace));
assign benchsoc_etherbone_record_sender_payload_fifo_do_read = (benchsoc_etherbone_record_sender_payload_fifo_syncfifo_readable & benchsoc_etherbone_record_sender_payload_fifo_syncfifo_re);
assign benchsoc_etherbone_record_sender_payload_fifo_rdport_adr = benchsoc_etherbone_record_sender_payload_fifo_consume;
assign benchsoc_etherbone_record_sender_payload_fifo_syncfifo_dout = benchsoc_etherbone_record_sender_payload_fifo_rdport_dat_r;
assign benchsoc_etherbone_record_sender_payload_fifo_rdport_re = benchsoc_etherbone_record_sender_payload_fifo_do_read;
assign benchsoc_etherbone_record_sender_payload_fifo_syncfifo_writable = (benchsoc_etherbone_record_sender_payload_fifo_level0 != 11'd1060);
assign benchsoc_etherbone_record_sender_payload_fifo_syncfifo_readable = (benchsoc_etherbone_record_sender_payload_fifo_level0 != 1'd0);
assign benchsoc_etherbone_record_sender_param_fifo_sink_ready = ((~benchsoc_etherbone_record_sender_param_fifo_source_valid) | benchsoc_etherbone_record_sender_param_fifo_source_ready);
always @(*) begin
	benchsoc_etherbone_record_sender_source_last <= 1'd0;
	benchsoc_etherbone_record_sender_source_payload_data <= 32'd0;
	benchsoc_etherbone_record_sender_source_source_ready <= 1'd0;
	benchsoc_etherbone_record_sender_source_payload_last_be <= 4'd0;
	liteethetherbonerecordsender_next_state <= 2'd0;
	benchsoc_etherbone_record_sender_source_valid <= 1'd0;
	liteethetherbonerecordsender_next_state <= liteethetherbonerecordsender_state;
	case (liteethetherbonerecordsender_state)
		1'd1: begin
			benchsoc_etherbone_record_sender_source_valid <= 1'd1;
			benchsoc_etherbone_record_sender_source_last <= 1'd0;
			benchsoc_etherbone_record_sender_source_payload_data <= benchsoc_etherbone_record_sender_source_source_param_base_addr;
			if (benchsoc_etherbone_record_sender_source_ready) begin
				liteethetherbonerecordsender_next_state <= 2'd2;
			end
		end
		2'd2: begin
			benchsoc_etherbone_record_sender_source_valid <= 1'd1;
			benchsoc_etherbone_record_sender_source_last <= benchsoc_etherbone_record_sender_source_source_last;
			benchsoc_etherbone_record_sender_source_payload_last_be <= benchsoc_etherbone_record_sender_source_source_payload_last_be;
			benchsoc_etherbone_record_sender_source_payload_data <= benchsoc_etherbone_record_sender_source_source_payload_data;
			if ((benchsoc_etherbone_record_sender_source_valid & benchsoc_etherbone_record_sender_source_ready)) begin
				benchsoc_etherbone_record_sender_source_source_ready <= 1'd1;
				if (benchsoc_etherbone_record_sender_source_last) begin
					liteethetherbonerecordsender_next_state <= 1'd0;
				end
			end
		end
		default: begin
			if (benchsoc_etherbone_record_sender_source_source_valid) begin
				liteethetherbonerecordsender_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	benchsoc_etherbone_record_packetizer_header <= 32'd0;
	benchsoc_etherbone_record_packetizer_header[0] <= {benchsoc_etherbone_record_packetizer_sink_param_bca};
	benchsoc_etherbone_record_packetizer_header[15:8] <= {benchsoc_etherbone_record_packetizer_sink_param_byte_enable[7:0]};
	benchsoc_etherbone_record_packetizer_header[4] <= {benchsoc_etherbone_record_packetizer_sink_param_cyc};
	benchsoc_etherbone_record_packetizer_header[1] <= {benchsoc_etherbone_record_packetizer_sink_param_rca};
	benchsoc_etherbone_record_packetizer_header[31:24] <= {benchsoc_etherbone_record_packetizer_sink_param_rcount[7:0]};
	benchsoc_etherbone_record_packetizer_header[2] <= {benchsoc_etherbone_record_packetizer_sink_param_rff};
	benchsoc_etherbone_record_packetizer_header[5] <= {benchsoc_etherbone_record_packetizer_sink_param_wca};
	benchsoc_etherbone_record_packetizer_header[23:16] <= {benchsoc_etherbone_record_packetizer_sink_param_wcount[7:0]};
	benchsoc_etherbone_record_packetizer_header[6] <= {benchsoc_etherbone_record_packetizer_sink_param_wff};
end
assign benchsoc_etherbone_record_packetizer_new_last_be = {benchsoc_etherbone_record_packetizer_sink_payload_last_be[3], benchsoc_etherbone_record_packetizer_sink_payload_last_be[2], benchsoc_etherbone_record_packetizer_sink_payload_last_be[1], benchsoc_etherbone_record_packetizer_sink_payload_last_be[0]};
assign benchsoc_etherbone_record_packetizer_in_data_copy = (benchsoc_etherbone_record_packetizer_is_ongoing0 | benchsoc_etherbone_record_packetizer_is_ongoing1);
always @(*) begin
	benchsoc_etherbone_record_packetizer_source_last <= 1'd0;
	if (benchsoc_etherbone_record_packetizer_source_last_s) begin
		benchsoc_etherbone_record_packetizer_source_last <= benchsoc_etherbone_record_packetizer_source_last_b;
	end else begin
		benchsoc_etherbone_record_packetizer_source_last <= benchsoc_etherbone_record_packetizer_source_last_a;
	end
end
assign benchsoc_etherbone_record_packetizer_source_payload_error = benchsoc_etherbone_record_packetizer_sink_payload_error;
always @(*) begin
	benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value11 <= 1'd0;
	benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value_ce11 <= 1'd0;
	benchsoc_etherbone_record_packetizer_source_valid <= 1'd0;
	benchsoc_etherbone_record_packetizer_source_payload_data <= 32'd0;
	benchsoc_etherbone_record_packetizer_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_record_packetizer_is_ongoing0 <= 1'd0;
	benchsoc_etherbone_record_packetizer_is_ongoing1 <= 1'd0;
	fsm1_next_state1 <= 1'd0;
	benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value5 <= 4'd0;
	benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value_ce5 <= 1'd0;
	benchsoc_etherbone_record_packetizer_is_ongoing2 <= 1'd0;
	benchsoc_etherbone_record_packetizer_sink_ready <= 1'd0;
	benchsoc_etherbone_record_packetizer_sr_load <= 1'd0;
	benchsoc_etherbone_record_packetizer_source_last_a <= 1'd0;
	benchsoc_etherbone_record_packetizer_sr_shift <= 1'd0;
	benchsoc_etherbone_record_packetizer_source_last_b <= 1'd0;
	benchsoc_etherbone_record_packetizer_source_last_s <= 1'd0;
	fsm0_next_state1 <= 2'd0;
	benchsoc_etherbone_record_packetizer_count_fsm0_next_value10 <= 1'd0;
	benchsoc_etherbone_record_packetizer_count_fsm0_next_value_ce10 <= 1'd0;
	fsm0_next_state1 <= fsm0_state1;
	case (fsm0_state1)
		1'd1: begin
			benchsoc_etherbone_record_packetizer_source_valid <= 1'd1;
			benchsoc_etherbone_record_packetizer_source_last_a <= 1'd0;
			benchsoc_etherbone_record_packetizer_source_payload_data <= benchsoc_etherbone_record_packetizer_sr[31];
			if ((benchsoc_etherbone_record_packetizer_source_valid & benchsoc_etherbone_record_packetizer_source_ready)) begin
				benchsoc_etherbone_record_packetizer_sr_shift <= 1'd1;
				if ((benchsoc_etherbone_record_packetizer_count == 1'd0)) begin
					benchsoc_etherbone_record_packetizer_sr_shift <= 1'd0;
					fsm0_next_state1 <= 2'd2;
					benchsoc_etherbone_record_packetizer_count_fsm0_next_value10 <= (benchsoc_etherbone_record_packetizer_count + 1'd1);
					benchsoc_etherbone_record_packetizer_count_fsm0_next_value_ce10 <= 1'd1;
				end else begin
					benchsoc_etherbone_record_packetizer_count_fsm0_next_value10 <= (benchsoc_etherbone_record_packetizer_count + 1'd1);
					benchsoc_etherbone_record_packetizer_count_fsm0_next_value_ce10 <= 1'd1;
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_record_packetizer_source_valid <= benchsoc_etherbone_record_packetizer_sink_valid;
			benchsoc_etherbone_record_packetizer_source_last_a <= benchsoc_etherbone_record_packetizer_sink_last;
			benchsoc_etherbone_record_packetizer_source_payload_data <= benchsoc_etherbone_record_packetizer_sink_payload_data;
			if ((benchsoc_etherbone_record_packetizer_source_valid & benchsoc_etherbone_record_packetizer_source_ready)) begin
				benchsoc_etherbone_record_packetizer_sink_ready <= 1'd1;
				if (benchsoc_etherbone_record_packetizer_source_last) begin
					fsm0_next_state1 <= 1'd0;
				end
			end
			benchsoc_etherbone_record_packetizer_is_ongoing0 <= 1'd1;
		end
		2'd3: begin
			benchsoc_etherbone_record_packetizer_is_ongoing1 <= 1'd1;
		end
		default: begin
			benchsoc_etherbone_record_packetizer_sink_ready <= 1'd1;
			benchsoc_etherbone_record_packetizer_count_fsm0_next_value10 <= 1'd1;
			benchsoc_etherbone_record_packetizer_count_fsm0_next_value_ce10 <= 1'd1;
			if (benchsoc_etherbone_record_packetizer_sink_valid) begin
				benchsoc_etherbone_record_packetizer_sink_ready <= 1'd0;
				benchsoc_etherbone_record_packetizer_source_valid <= 1'd1;
				benchsoc_etherbone_record_packetizer_source_last_a <= 1'd0;
				benchsoc_etherbone_record_packetizer_source_payload_data <= benchsoc_etherbone_record_packetizer_header[31:0];
				if ((benchsoc_etherbone_record_packetizer_source_valid & benchsoc_etherbone_record_packetizer_source_ready)) begin
					benchsoc_etherbone_record_packetizer_sr_load <= 1'd1;
					benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value11 <= 1'd1;
					benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value_ce11 <= 1'd1;
					if (1'd1) begin
						fsm0_next_state1 <= 2'd2;
					end else begin
						fsm0_next_state1 <= 1'd1;
					end
				end
			end
			benchsoc_etherbone_record_packetizer_is_ongoing2 <= 1'd1;
		end
	endcase
	fsm1_next_state1 <= fsm1_state1;
	case (fsm1_state1)
		1'd1: begin
			benchsoc_etherbone_record_packetizer_source_last_b <= 1'd1;
			benchsoc_etherbone_record_packetizer_source_last_s <= 1'd1;
			benchsoc_etherbone_record_packetizer_source_payload_last_be <= benchsoc_etherbone_record_packetizer_delayed_last_be;
			benchsoc_etherbone_record_packetizer_sink_ready <= 1'd0;
			if (benchsoc_etherbone_record_packetizer_source_ready) begin
				fsm1_next_state1 <= 1'd0;
			end
		end
		default: begin
			if (((benchsoc_etherbone_record_packetizer_in_data_copy & benchsoc_etherbone_record_packetizer_sink_last) & (benchsoc_etherbone_record_packetizer_sink_payload_last_be > benchsoc_etherbone_record_packetizer_new_last_be))) begin
				benchsoc_etherbone_record_packetizer_source_last_b <= 1'd0;
				benchsoc_etherbone_record_packetizer_source_last_s <= 1'd1;
				benchsoc_etherbone_record_packetizer_source_payload_last_be <= 1'd0;
				if ((benchsoc_etherbone_record_packetizer_source_ready & benchsoc_etherbone_record_packetizer_source_valid)) begin
					benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value5 <= benchsoc_etherbone_record_packetizer_new_last_be;
					benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value_ce5 <= 1'd1;
					fsm1_next_state1 <= 1'd1;
				end
			end else begin
				if (benchsoc_etherbone_record_packetizer_in_data_copy) begin
					benchsoc_etherbone_record_packetizer_source_last_b <= benchsoc_etherbone_record_packetizer_sink_last;
					benchsoc_etherbone_record_packetizer_source_last_s <= 1'd1;
					benchsoc_etherbone_record_packetizer_source_payload_last_be <= benchsoc_etherbone_record_packetizer_new_last_be;
				end
			end
			if (benchsoc_etherbone_record_packetizer_in_data_copy) begin
				benchsoc_etherbone_record_packetizer_sink_ready <= benchsoc_etherbone_record_packetizer_source_ready;
			end else begin
				if (benchsoc_etherbone_record_packetizer_is_ongoing2) begin
					benchsoc_etherbone_record_packetizer_sink_ready <= (~benchsoc_etherbone_record_packetizer_sink_valid);
				end
			end
		end
	endcase
end
always @(*) begin
	benchsoc_etherbone_dispatcher_sel1 <= 1'd0;
	if (benchsoc_etherbone_dispatcher_first) begin
		benchsoc_etherbone_dispatcher_sel1 <= benchsoc_etherbone_dispatcher_sel0;
	end else begin
		benchsoc_etherbone_dispatcher_sel1 <= benchsoc_etherbone_dispatcher_sel_ongoing;
	end
end
always @(*) begin
	benchsoc_etherbone_probe_sink_param_nr <= 1'd0;
	benchsoc_etherbone_probe_sink_param_pf <= 1'd0;
	benchsoc_etherbone_probe_sink_param_port_size <= 4'd0;
	benchsoc_etherbone_probe_sink_param_pr <= 1'd0;
	benchsoc_etherbone_probe_sink_param_src_port <= 16'd0;
	benchsoc_etherbone_probe_sink_param_dst_port <= 16'd0;
	benchsoc_etherbone_probe_sink_param_ip_address <= 32'd0;
	benchsoc_etherbone_probe_sink_param_length <= 16'd0;
	benchsoc_etherbone_record_sink_sink_valid <= 1'd0;
	benchsoc_etherbone_record_sink_sink_first <= 1'd0;
	benchsoc_etherbone_record_sink_sink_last <= 1'd0;
	benchsoc_etherbone_record_sink_sink_payload_data <= 32'd0;
	benchsoc_etherbone_record_sink_sink_payload_last_be <= 4'd0;
	benchsoc_etherbone_rx_source_source_ready <= 1'd0;
	benchsoc_etherbone_record_sink_sink_payload_error <= 4'd0;
	benchsoc_etherbone_record_sink_sink_param_addr_size <= 4'd0;
	benchsoc_etherbone_record_sink_sink_param_nr <= 1'd0;
	benchsoc_etherbone_record_sink_sink_param_pf <= 1'd0;
	benchsoc_etherbone_record_sink_sink_param_port_size <= 4'd0;
	benchsoc_etherbone_record_sink_sink_param_pr <= 1'd0;
	benchsoc_etherbone_record_sink_sink_param_src_port <= 16'd0;
	benchsoc_etherbone_record_sink_sink_param_dst_port <= 16'd0;
	benchsoc_etherbone_probe_sink_valid <= 1'd0;
	benchsoc_etherbone_record_sink_sink_param_ip_address <= 32'd0;
	benchsoc_etherbone_record_sink_sink_param_length <= 16'd0;
	benchsoc_etherbone_probe_sink_first <= 1'd0;
	benchsoc_etherbone_probe_sink_last <= 1'd0;
	benchsoc_etherbone_probe_sink_payload_data <= 32'd0;
	benchsoc_etherbone_probe_sink_payload_last_be <= 4'd0;
	benchsoc_etherbone_probe_sink_payload_error <= 4'd0;
	benchsoc_etherbone_probe_sink_param_addr_size <= 4'd0;
	case (benchsoc_etherbone_dispatcher_sel1)
		1'd0: begin
			benchsoc_etherbone_probe_sink_valid <= benchsoc_etherbone_rx_source_source_valid;
			benchsoc_etherbone_rx_source_source_ready <= benchsoc_etherbone_probe_sink_ready;
			benchsoc_etherbone_probe_sink_first <= benchsoc_etherbone_rx_source_source_first;
			benchsoc_etherbone_probe_sink_last <= benchsoc_etherbone_rx_source_source_last;
			benchsoc_etherbone_probe_sink_payload_data <= benchsoc_etherbone_rx_source_source_payload_data;
			benchsoc_etherbone_probe_sink_payload_last_be <= benchsoc_etherbone_rx_source_source_payload_last_be;
			benchsoc_etherbone_probe_sink_payload_error <= benchsoc_etherbone_rx_source_source_payload_error;
			benchsoc_etherbone_probe_sink_param_addr_size <= benchsoc_etherbone_rx_source_source_param_addr_size;
			benchsoc_etherbone_probe_sink_param_nr <= benchsoc_etherbone_rx_source_source_param_nr;
			benchsoc_etherbone_probe_sink_param_pf <= benchsoc_etherbone_rx_source_source_param_pf;
			benchsoc_etherbone_probe_sink_param_port_size <= benchsoc_etherbone_rx_source_source_param_port_size;
			benchsoc_etherbone_probe_sink_param_pr <= benchsoc_etherbone_rx_source_source_param_pr;
			benchsoc_etherbone_probe_sink_param_src_port <= benchsoc_etherbone_rx_source_source_param_src_port;
			benchsoc_etherbone_probe_sink_param_dst_port <= benchsoc_etherbone_rx_source_source_param_dst_port;
			benchsoc_etherbone_probe_sink_param_ip_address <= benchsoc_etherbone_rx_source_source_param_ip_address;
			benchsoc_etherbone_probe_sink_param_length <= benchsoc_etherbone_rx_source_source_param_length;
		end
		1'd1: begin
			benchsoc_etherbone_record_sink_sink_valid <= benchsoc_etherbone_rx_source_source_valid;
			benchsoc_etherbone_rx_source_source_ready <= benchsoc_etherbone_record_sink_sink_ready;
			benchsoc_etherbone_record_sink_sink_first <= benchsoc_etherbone_rx_source_source_first;
			benchsoc_etherbone_record_sink_sink_last <= benchsoc_etherbone_rx_source_source_last;
			benchsoc_etherbone_record_sink_sink_payload_data <= benchsoc_etherbone_rx_source_source_payload_data;
			benchsoc_etherbone_record_sink_sink_payload_last_be <= benchsoc_etherbone_rx_source_source_payload_last_be;
			benchsoc_etherbone_record_sink_sink_payload_error <= benchsoc_etherbone_rx_source_source_payload_error;
			benchsoc_etherbone_record_sink_sink_param_addr_size <= benchsoc_etherbone_rx_source_source_param_addr_size;
			benchsoc_etherbone_record_sink_sink_param_nr <= benchsoc_etherbone_rx_source_source_param_nr;
			benchsoc_etherbone_record_sink_sink_param_pf <= benchsoc_etherbone_rx_source_source_param_pf;
			benchsoc_etherbone_record_sink_sink_param_port_size <= benchsoc_etherbone_rx_source_source_param_port_size;
			benchsoc_etherbone_record_sink_sink_param_pr <= benchsoc_etherbone_rx_source_source_param_pr;
			benchsoc_etherbone_record_sink_sink_param_src_port <= benchsoc_etherbone_rx_source_source_param_src_port;
			benchsoc_etherbone_record_sink_sink_param_dst_port <= benchsoc_etherbone_rx_source_source_param_dst_port;
			benchsoc_etherbone_record_sink_sink_param_ip_address <= benchsoc_etherbone_rx_source_source_param_ip_address;
			benchsoc_etherbone_record_sink_sink_param_length <= benchsoc_etherbone_rx_source_source_param_length;
		end
		default: begin
			benchsoc_etherbone_rx_source_source_ready <= 1'd1;
		end
	endcase
end
always @(*) begin
	benchsoc_etherbone_dispatcher_last <= 1'd0;
	if (benchsoc_etherbone_rx_source_source_valid) begin
		benchsoc_etherbone_dispatcher_last <= (benchsoc_etherbone_rx_source_source_last & benchsoc_etherbone_rx_source_source_ready);
	end
end
assign benchsoc_etherbone_dispatcher_ongoing0 = ((benchsoc_etherbone_rx_source_source_valid | benchsoc_etherbone_dispatcher_ongoing1) & (~benchsoc_etherbone_dispatcher_last));
always @(*) begin
	benchsoc_etherbone_request <= 2'd0;
	benchsoc_etherbone_request[0] <= benchsoc_etherbone_status0_ongoing0;
	benchsoc_etherbone_request[1] <= benchsoc_etherbone_status1_ongoing0;
end
always @(*) begin
	benchsoc_etherbone_probe_source_ready <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_param_length <= 16'd0;
	benchsoc_etherbone_tx_sink_sink_valid <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_first <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_last <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_payload_data <= 32'd0;
	benchsoc_etherbone_tx_sink_sink_payload_last_be <= 4'd0;
	benchsoc_etherbone_tx_sink_sink_payload_error <= 4'd0;
	benchsoc_etherbone_tx_sink_sink_param_addr_size <= 4'd0;
	benchsoc_etherbone_tx_sink_sink_param_nr <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_param_pf <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_param_port_size <= 4'd0;
	benchsoc_etherbone_tx_sink_sink_param_pr <= 1'd0;
	benchsoc_etherbone_tx_sink_sink_param_src_port <= 16'd0;
	benchsoc_etherbone_tx_sink_sink_param_dst_port <= 16'd0;
	benchsoc_etherbone_tx_sink_sink_param_ip_address <= 32'd0;
	benchsoc_etherbone_record_source_source_ready <= 1'd0;
	case (benchsoc_etherbone_grant)
		1'd0: begin
			benchsoc_etherbone_tx_sink_sink_valid <= benchsoc_etherbone_probe_source_valid;
			benchsoc_etherbone_probe_source_ready <= benchsoc_etherbone_tx_sink_sink_ready;
			benchsoc_etherbone_tx_sink_sink_first <= benchsoc_etherbone_probe_source_first;
			benchsoc_etherbone_tx_sink_sink_last <= benchsoc_etherbone_probe_source_last;
			benchsoc_etherbone_tx_sink_sink_payload_data <= benchsoc_etherbone_probe_source_payload_data;
			benchsoc_etherbone_tx_sink_sink_payload_last_be <= benchsoc_etherbone_probe_source_payload_last_be;
			benchsoc_etherbone_tx_sink_sink_payload_error <= benchsoc_etherbone_probe_source_payload_error;
			benchsoc_etherbone_tx_sink_sink_param_addr_size <= benchsoc_etherbone_probe_source_param_addr_size;
			benchsoc_etherbone_tx_sink_sink_param_nr <= benchsoc_etherbone_probe_source_param_nr;
			benchsoc_etherbone_tx_sink_sink_param_pf <= benchsoc_etherbone_probe_source_param_pf;
			benchsoc_etherbone_tx_sink_sink_param_port_size <= benchsoc_etherbone_probe_source_param_port_size;
			benchsoc_etherbone_tx_sink_sink_param_pr <= benchsoc_etherbone_probe_source_param_pr;
			benchsoc_etherbone_tx_sink_sink_param_src_port <= benchsoc_etherbone_probe_source_param_src_port;
			benchsoc_etherbone_tx_sink_sink_param_dst_port <= benchsoc_etherbone_probe_source_param_dst_port;
			benchsoc_etherbone_tx_sink_sink_param_ip_address <= benchsoc_etherbone_probe_source_param_ip_address;
			benchsoc_etherbone_tx_sink_sink_param_length <= benchsoc_etherbone_probe_source_param_length;
		end
		1'd1: begin
			benchsoc_etherbone_tx_sink_sink_valid <= benchsoc_etherbone_record_source_source_valid;
			benchsoc_etherbone_record_source_source_ready <= benchsoc_etherbone_tx_sink_sink_ready;
			benchsoc_etherbone_tx_sink_sink_first <= benchsoc_etherbone_record_source_source_first;
			benchsoc_etherbone_tx_sink_sink_last <= benchsoc_etherbone_record_source_source_last;
			benchsoc_etherbone_tx_sink_sink_payload_data <= benchsoc_etherbone_record_source_source_payload_data;
			benchsoc_etherbone_tx_sink_sink_payload_last_be <= benchsoc_etherbone_record_source_source_payload_last_be;
			benchsoc_etherbone_tx_sink_sink_payload_error <= benchsoc_etherbone_record_source_source_payload_error;
			benchsoc_etherbone_tx_sink_sink_param_addr_size <= benchsoc_etherbone_record_source_source_param_addr_size;
			benchsoc_etherbone_tx_sink_sink_param_nr <= benchsoc_etherbone_record_source_source_param_nr;
			benchsoc_etherbone_tx_sink_sink_param_pf <= benchsoc_etherbone_record_source_source_param_pf;
			benchsoc_etherbone_tx_sink_sink_param_port_size <= benchsoc_etherbone_record_source_source_param_port_size;
			benchsoc_etherbone_tx_sink_sink_param_pr <= benchsoc_etherbone_record_source_source_param_pr;
			benchsoc_etherbone_tx_sink_sink_param_src_port <= benchsoc_etherbone_record_source_source_param_src_port;
			benchsoc_etherbone_tx_sink_sink_param_dst_port <= benchsoc_etherbone_record_source_source_param_dst_port;
			benchsoc_etherbone_tx_sink_sink_param_ip_address <= benchsoc_etherbone_record_source_source_param_ip_address;
			benchsoc_etherbone_tx_sink_sink_param_length <= benchsoc_etherbone_record_source_source_param_length;
		end
	endcase
end
always @(*) begin
	benchsoc_etherbone_status0_last <= 1'd0;
	if (benchsoc_etherbone_probe_source_valid) begin
		benchsoc_etherbone_status0_last <= (benchsoc_etherbone_probe_source_last & benchsoc_etherbone_probe_source_ready);
	end
end
assign benchsoc_etherbone_status0_ongoing0 = ((benchsoc_etherbone_probe_source_valid | benchsoc_etherbone_status0_ongoing1) & (~benchsoc_etherbone_status0_last));
always @(*) begin
	benchsoc_etherbone_status1_last <= 1'd0;
	if (benchsoc_etherbone_record_source_source_valid) begin
		benchsoc_etherbone_status1_last <= (benchsoc_etherbone_record_source_source_last & benchsoc_etherbone_record_source_source_ready);
	end
end
assign benchsoc_etherbone_status1_ongoing0 = ((benchsoc_etherbone_record_source_source_valid | benchsoc_etherbone_status1_ongoing1) & (~benchsoc_etherbone_status1_last));
always @(*) begin
	benchsoc_etherbone_liteethetherbonewishbonemaster_bus_adr <= 30'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_w <= 32'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_bus_sel <= 4'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cyc <= 1'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb <= 1'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_valid <= 1'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_bus_we <= 1'd0;
	liteethetherbonewishbonemaster_next_state <= 2'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_last <= 1'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_last_be <= 4'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready <= 1'd0;
	benchsoc_etherbone_liteethetherbonewishbonemaster_data_update <= 1'd0;
	liteethetherbonewishbonemaster_next_state <= liteethetherbonewishbonemaster_state;
	case (liteethetherbonewishbonemaster_state)
		1'd1: begin
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_adr <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_addr;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_w <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_data;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_sel <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_be;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_valid;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_we <= 1'd1;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cyc <= 1'd1;
			if ((benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb & benchsoc_etherbone_liteethetherbonewishbonemaster_bus_ack)) begin
				benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready <= 1'd1;
				if (benchsoc_etherbone_liteethetherbonewishbonemaster_sink_last) begin
					liteethetherbonewishbonemaster_next_state <= 1'd0;
				end
			end
		end
		2'd2: begin
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_adr <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_addr;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_sel <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_be;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_valid;
			benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cyc <= 1'd1;
			if ((benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb & benchsoc_etherbone_liteethetherbonewishbonemaster_bus_ack)) begin
				benchsoc_etherbone_liteethetherbonewishbonemaster_data_update <= 1'd1;
				liteethetherbonewishbonemaster_next_state <= 2'd3;
			end
		end
		2'd3: begin
			benchsoc_etherbone_liteethetherbonewishbonemaster_source_valid <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_valid;
			benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready <= benchsoc_etherbone_liteethetherbonewishbonemaster_source_ready;
			benchsoc_etherbone_liteethetherbonewishbonemaster_source_last <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_last;
			benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_last_be <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_last_be;
			if ((benchsoc_etherbone_liteethetherbonewishbonemaster_source_valid & benchsoc_etherbone_liteethetherbonewishbonemaster_source_ready)) begin
				if (benchsoc_etherbone_liteethetherbonewishbonemaster_source_last) begin
					liteethetherbonewishbonemaster_next_state <= 1'd0;
				end else begin
					liteethetherbonewishbonemaster_next_state <= 2'd2;
				end
			end
		end
		default: begin
			benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready <= 1'd1;
			if (benchsoc_etherbone_liteethetherbonewishbonemaster_sink_valid) begin
				benchsoc_etherbone_liteethetherbonewishbonemaster_sink_ready <= 1'd0;
				if (benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_we) begin
					liteethetherbonewishbonemaster_next_state <= 1'd1;
				end else begin
					liteethetherbonewishbonemaster_next_state <= 2'd2;
				end
			end
		end
	endcase
end
assign encoder1_A = encoderJ7_10_A;
assign encoder1_B = encoderJ7_10_B;
assign encoder1_Z = encoderJ7_10_Z;
assign encoder1_out = {encoder1_c, encoder1_i, encoder1_zl};
assign encoder1_good_one = ((encoder1_Zc[2] & encoder1_Zc[1]) & encoder1_Zc[0]);
assign encoder1_good_zero = (~((encoder1_Zc[2] | encoder1_Zc[1]) | encoder1_Zc[0]));
assign encoder1_index_pulse = (encoder1_good_one & (~encoder1_last_good));
assign encoder1_count_enable = (((encoder1_Ad[1] ^ encoder1_Ad[2]) ^ encoder1_Bd[1]) ^ encoder1_Bd[2]);
assign encoder1_count_direction = (encoder1_Ad[1] ^ encoder1_Bd[2]);
assign encoder2_A = encoderJ7_21_A;
assign encoder2_B = encoderJ7_21_B;
assign encoder2_Z = encoderJ7_21_Z;
assign encoder2_out = {encoder2_c, encoder2_i, encoder2_zl};
assign encoder2_good_one = ((encoder2_Zc[2] & encoder2_Zc[1]) & encoder2_Zc[0]);
assign encoder2_good_zero = (~((encoder2_Zc[2] | encoder2_Zc[1]) | encoder2_Zc[0]));
assign encoder2_index_pulse = (encoder2_good_one & (~encoder2_last_good));
assign encoder2_count_enable = (((encoder2_Ad[1] ^ encoder2_Ad[2]) ^ encoder2_Bd[1]) ^ encoder2_Bd[2]);
assign encoder2_count_direction = (encoder2_Ad[1] ^ encoder2_Bd[2]);
assign encoder3_A = encoderJ8_12_A;
assign encoder3_B = encoderJ8_12_B;
assign encoder3_Z = encoderJ8_12_Z;
assign encoder3_out = {encoder3_c, encoder3_i, encoder3_zl};
assign encoder3_good_one = ((encoder3_Zc[2] & encoder3_Zc[1]) & encoder3_Zc[0]);
assign encoder3_good_zero = (~((encoder3_Zc[2] | encoder3_Zc[1]) | encoder3_Zc[0]));
assign encoder3_index_pulse = (encoder3_good_one & (~encoder3_last_good));
assign encoder3_count_enable = (((encoder3_Ad[1] ^ encoder3_Ad[2]) ^ encoder3_Bd[1]) ^ encoder3_Bd[2]);
assign encoder3_count_direction = (encoder3_Ad[1] ^ encoder3_Bd[2]);
assign encoder4_A = encoderJ8_23_A;
assign encoder4_B = encoderJ8_23_B;
assign encoder4_Z = encoderJ8_23_Z;
assign encoder4_out = {encoder4_c, encoder4_i, encoder4_zl};
assign encoder4_good_one = ((encoder4_Zc[2] & encoder4_Zc[1]) & encoder4_Zc[0]);
assign encoder4_good_zero = (~((encoder4_Zc[2] | encoder4_Zc[1]) | encoder4_Zc[0]));
assign encoder4_index_pulse = (encoder4_good_one & (~encoder4_last_good));
assign encoder4_count_enable = (((encoder4_Ad[1] ^ encoder4_Ad[2]) ^ encoder4_Bd[1]) ^ encoder4_Bd[2]);
assign encoder4_count_direction = (encoder4_Ad[1] ^ encoder4_Bd[2]);
assign stepgenJ10_dir = (stepgen1_internal_dir ^ stepgen1_inverse_dir);
assign stepgenJ10_step = (stepgen1_internal_step ^ stepgen1_inverse_step);
assign stepgenJ21_dir = (stepgen2_internal_dir ^ stepgen2_inverse_dir);
assign stepgenJ21_step = (stepgen2_internal_step ^ stepgen2_inverse_step);
assign stepgenJ32_dir = (stepgen3_internal_dir ^ stepgen3_inverse_dir);
assign stepgenJ32_step = (stepgen3_internal_step ^ stepgen3_inverse_step);
assign stepgenJ43_dir = (stepgen4_internal_dir ^ stepgen4_inverse_dir);
assign stepgenJ43_step = (stepgen4_internal_step ^ stepgen4_inverse_step);
assign stepgenJ54_dir = (stepgen5_internal_dir ^ stepgen5_inverse_dir);
assign stepgenJ54_step = (stepgen5_internal_step ^ stepgen5_inverse_step);
assign stepgenJ65_dir = (stepgen6_internal_dir ^ stepgen6_inverse_dir);
assign stepgenJ65_step = (stepgen6_internal_step ^ stepgen6_inverse_step);
assign leds_wait = (~leds_done);
always @(*) begin
	user_led_n0 <= 1'd0;
	if ((leds_mode == 1'd1)) begin
		{user_led_n0} <= leds_storage;
	end else begin
		{user_led_n0} <= leds_chaser;
	end
	if ((~ledchaser_pwm)) begin
		{user_led_n0} <= 1'd0;
	end
end
assign leds_done = (leds_count == 1'd0);
always @(*) begin
	benchsoc_adr <= 14'd0;
	benchsoc_we <= 1'd0;
	benchsoc_dat_w <= 32'd0;
	benchsoc_wishbone_ack <= 1'd0;
	next_state <= 1'd0;
	benchsoc_wishbone_dat_r <= 32'd0;
	next_state <= state;
	case (state)
		1'd1: begin
			benchsoc_wishbone_ack <= 1'd1;
			benchsoc_wishbone_dat_r <= benchsoc_dat_r;
			next_state <= 1'd0;
		end
		default: begin
			benchsoc_dat_w <= benchsoc_wishbone_dat_w;
			if ((benchsoc_wishbone_cyc & benchsoc_wishbone_stb)) begin
				benchsoc_adr <= benchsoc_wishbone_adr;
				benchsoc_we <= (benchsoc_wishbone_we & (benchsoc_wishbone_sel != 1'd0));
				next_state <= 1'd1;
			end
		end
	endcase
end
assign benchsoc_wishbone_adr = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_adr;
assign benchsoc_wishbone_dat_w = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_w;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_r = benchsoc_wishbone_dat_r;
assign benchsoc_wishbone_sel = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_sel;
assign benchsoc_wishbone_cyc = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cyc;
assign benchsoc_wishbone_stb = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_stb;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_bus_ack = benchsoc_wishbone_ack;
assign benchsoc_wishbone_we = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_we;
assign benchsoc_wishbone_cti = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_cti;
assign benchsoc_wishbone_bte = benchsoc_etherbone_liteethetherbonewishbonemaster_bus_bte;
assign benchsoc_etherbone_liteethetherbonewishbonemaster_bus_err = benchsoc_wishbone_err;
assign csr_bankarray_csrbank0_sel = (csr_bankarray_interface0_bank_bus_adr[13:9] == 1'd0);
assign csr_bankarray_csrbank0_velocity10_r = csr_bankarray_interface0_bank_bus_dat_w[30:0];
always @(*) begin
	csr_bankarray_csrbank0_velocity10_we <= 1'd0;
	csr_bankarray_csrbank0_velocity10_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank0_velocity10_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_velocity10_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_velocity20_r = csr_bankarray_interface0_bank_bus_dat_w[30:0];
always @(*) begin
	csr_bankarray_csrbank0_velocity20_re <= 1'd0;
	csr_bankarray_csrbank0_velocity20_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank0_velocity20_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_velocity20_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_velocity30_r = csr_bankarray_interface0_bank_bus_dat_w[30:0];
always @(*) begin
	csr_bankarray_csrbank0_velocity30_we <= 1'd0;
	csr_bankarray_csrbank0_velocity30_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank0_velocity30_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_velocity30_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_velocity40_r = csr_bankarray_interface0_bank_bus_dat_w[30:0];
always @(*) begin
	csr_bankarray_csrbank0_velocity40_we <= 1'd0;
	csr_bankarray_csrbank0_velocity40_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank0_velocity40_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_velocity40_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_velocity50_r = csr_bankarray_interface0_bank_bus_dat_w[30:0];
always @(*) begin
	csr_bankarray_csrbank0_velocity50_re <= 1'd0;
	csr_bankarray_csrbank0_velocity50_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank0_velocity50_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_velocity50_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_velocity60_r = csr_bankarray_interface0_bank_bus_dat_w[30:0];
always @(*) begin
	csr_bankarray_csrbank0_velocity60_we <= 1'd0;
	csr_bankarray_csrbank0_velocity60_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 3'd5))) begin
		csr_bankarray_csrbank0_velocity60_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_velocity60_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_dirtime0_r = csr_bankarray_interface0_bank_bus_dat_w[9:0];
always @(*) begin
	csr_bankarray_csrbank0_dirtime0_re <= 1'd0;
	csr_bankarray_csrbank0_dirtime0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 3'd6))) begin
		csr_bankarray_csrbank0_dirtime0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_dirtime0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_steptime0_r = csr_bankarray_interface0_bank_bus_dat_w[9:0];
always @(*) begin
	csr_bankarray_csrbank0_steptime0_re <= 1'd0;
	csr_bankarray_csrbank0_steptime0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 3'd7))) begin
		csr_bankarray_csrbank0_steptime0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_steptime0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_stepgens_ctrlword0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_stepgens_ctrlword0_we <= 1'd0;
	csr_bankarray_csrbank0_stepgens_ctrlword0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd8))) begin
		csr_bankarray_csrbank0_stepgens_ctrlword0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_stepgens_ctrlword0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_apply_time1_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_apply_time1_re <= 1'd0;
	csr_bankarray_csrbank0_apply_time1_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd9))) begin
		csr_bankarray_csrbank0_apply_time1_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_apply_time1_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_apply_time0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_apply_time0_we <= 1'd0;
	csr_bankarray_csrbank0_apply_time0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd10))) begin
		csr_bankarray_csrbank0_apply_time0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_apply_time0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_gpios_out0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_gpios_out0_we <= 1'd0;
	csr_bankarray_csrbank0_gpios_out0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd11))) begin
		csr_bankarray_csrbank0_gpios_out0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_gpios_out0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm0_width0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm0_width0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm0_width0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd12))) begin
		csr_bankarray_csrbank0_pwm0_width0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm0_width0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm0_period0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm0_period0_we <= 1'd0;
	csr_bankarray_csrbank0_pwm0_period0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd13))) begin
		csr_bankarray_csrbank0_pwm0_period0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm0_period0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm1_width0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm1_width0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm1_width0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd14))) begin
		csr_bankarray_csrbank0_pwm1_width0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm1_width0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm1_period0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm1_period0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm1_period0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 4'd15))) begin
		csr_bankarray_csrbank0_pwm1_period0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm1_period0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm2_width0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm2_width0_we <= 1'd0;
	csr_bankarray_csrbank0_pwm2_width0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd16))) begin
		csr_bankarray_csrbank0_pwm2_width0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm2_width0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm2_period0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm2_period0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm2_period0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd17))) begin
		csr_bankarray_csrbank0_pwm2_period0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm2_period0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm3_width0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm3_width0_we <= 1'd0;
	csr_bankarray_csrbank0_pwm3_width0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd18))) begin
		csr_bankarray_csrbank0_pwm3_width0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm3_width0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm3_period0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm3_period0_we <= 1'd0;
	csr_bankarray_csrbank0_pwm3_period0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd19))) begin
		csr_bankarray_csrbank0_pwm3_period0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm3_period0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm4_width0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm4_width0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm4_width0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd20))) begin
		csr_bankarray_csrbank0_pwm4_width0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm4_width0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm4_period0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm4_period0_we <= 1'd0;
	csr_bankarray_csrbank0_pwm4_period0_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd21))) begin
		csr_bankarray_csrbank0_pwm4_period0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm4_period0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm5_width0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm5_width0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm5_width0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd22))) begin
		csr_bankarray_csrbank0_pwm5_width0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm5_width0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_pwm5_period0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_pwm5_period0_re <= 1'd0;
	csr_bankarray_csrbank0_pwm5_period0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd23))) begin
		csr_bankarray_csrbank0_pwm5_period0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_pwm5_period0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position11_r = csr_bankarray_interface0_bank_bus_dat_w[29:0];
always @(*) begin
	csr_bankarray_csrbank0_position11_we <= 1'd0;
	csr_bankarray_csrbank0_position11_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd24))) begin
		csr_bankarray_csrbank0_position11_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position11_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position10_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_position10_re <= 1'd0;
	csr_bankarray_csrbank0_position10_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd25))) begin
		csr_bankarray_csrbank0_position10_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position10_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position21_r = csr_bankarray_interface0_bank_bus_dat_w[29:0];
always @(*) begin
	csr_bankarray_csrbank0_position21_re <= 1'd0;
	csr_bankarray_csrbank0_position21_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd26))) begin
		csr_bankarray_csrbank0_position21_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position21_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position20_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_position20_we <= 1'd0;
	csr_bankarray_csrbank0_position20_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd27))) begin
		csr_bankarray_csrbank0_position20_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position20_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position31_r = csr_bankarray_interface0_bank_bus_dat_w[29:0];
always @(*) begin
	csr_bankarray_csrbank0_position31_we <= 1'd0;
	csr_bankarray_csrbank0_position31_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd28))) begin
		csr_bankarray_csrbank0_position31_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position31_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position30_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_position30_re <= 1'd0;
	csr_bankarray_csrbank0_position30_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd29))) begin
		csr_bankarray_csrbank0_position30_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position30_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position41_r = csr_bankarray_interface0_bank_bus_dat_w[29:0];
always @(*) begin
	csr_bankarray_csrbank0_position41_re <= 1'd0;
	csr_bankarray_csrbank0_position41_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd30))) begin
		csr_bankarray_csrbank0_position41_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position41_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position40_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_position40_we <= 1'd0;
	csr_bankarray_csrbank0_position40_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 5'd31))) begin
		csr_bankarray_csrbank0_position40_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position40_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position51_r = csr_bankarray_interface0_bank_bus_dat_w[29:0];
always @(*) begin
	csr_bankarray_csrbank0_position51_we <= 1'd0;
	csr_bankarray_csrbank0_position51_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd32))) begin
		csr_bankarray_csrbank0_position51_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position51_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position50_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_position50_re <= 1'd0;
	csr_bankarray_csrbank0_position50_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd33))) begin
		csr_bankarray_csrbank0_position50_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position50_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position61_r = csr_bankarray_interface0_bank_bus_dat_w[29:0];
always @(*) begin
	csr_bankarray_csrbank0_position61_re <= 1'd0;
	csr_bankarray_csrbank0_position61_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd34))) begin
		csr_bankarray_csrbank0_position61_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position61_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_position60_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_position60_we <= 1'd0;
	csr_bankarray_csrbank0_position60_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd35))) begin
		csr_bankarray_csrbank0_position60_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_position60_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_wallclock1_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_wallclock1_we <= 1'd0;
	csr_bankarray_csrbank0_wallclock1_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd36))) begin
		csr_bankarray_csrbank0_wallclock1_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_wallclock1_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_wallclock0_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_wallclock0_re <= 1'd0;
	csr_bankarray_csrbank0_wallclock0_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd37))) begin
		csr_bankarray_csrbank0_wallclock0_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_wallclock0_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_gpios_in_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_gpios_in_re <= 1'd0;
	csr_bankarray_csrbank0_gpios_in_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd38))) begin
		csr_bankarray_csrbank0_gpios_in_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_gpios_in_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_encoder_position1_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_encoder_position1_we <= 1'd0;
	csr_bankarray_csrbank0_encoder_position1_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd39))) begin
		csr_bankarray_csrbank0_encoder_position1_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_encoder_position1_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_encoder_position2_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_encoder_position2_we <= 1'd0;
	csr_bankarray_csrbank0_encoder_position2_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd40))) begin
		csr_bankarray_csrbank0_encoder_position2_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_encoder_position2_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_encoder_position3_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_encoder_position3_re <= 1'd0;
	csr_bankarray_csrbank0_encoder_position3_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd41))) begin
		csr_bankarray_csrbank0_encoder_position3_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_encoder_position3_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_encoder_position4_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_encoder_position4_re <= 1'd0;
	csr_bankarray_csrbank0_encoder_position4_we <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd42))) begin
		csr_bankarray_csrbank0_encoder_position4_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_encoder_position4_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_encoder_position5_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_encoder_position5_we <= 1'd0;
	csr_bankarray_csrbank0_encoder_position5_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd43))) begin
		csr_bankarray_csrbank0_encoder_position5_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_encoder_position5_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_encoder_position6_r = csr_bankarray_interface0_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank0_encoder_position6_we <= 1'd0;
	csr_bankarray_csrbank0_encoder_position6_re <= 1'd0;
	if ((csr_bankarray_csrbank0_sel & (csr_bankarray_interface0_bank_bus_adr[8:0] == 6'd44))) begin
		csr_bankarray_csrbank0_encoder_position6_re <= csr_bankarray_interface0_bank_bus_we;
		csr_bankarray_csrbank0_encoder_position6_we <= (~csr_bankarray_interface0_bank_bus_we);
	end
end
assign csr_bankarray_csrbank0_velocity10_w = velocity1_storage[30:0];
assign csr_bankarray_csrbank0_velocity20_w = velocity2_storage[30:0];
assign csr_bankarray_csrbank0_velocity30_w = velocity3_storage[30:0];
assign csr_bankarray_csrbank0_velocity40_w = velocity4_storage[30:0];
assign csr_bankarray_csrbank0_velocity50_w = velocity5_storage[30:0];
assign csr_bankarray_csrbank0_velocity60_w = velocity6_storage[30:0];
assign csr_bankarray_csrbank0_dirtime0_w = dirtime_storage[9:0];
assign csr_bankarray_csrbank0_steptime0_w = steptime_storage[9:0];
assign csr_bankarray_csrbank0_stepgens_ctrlword0_w = stepgens_ctrlword_storage[31:0];
assign csr_bankarray_csrbank0_apply_time1_w = apply_time_storage[63:32];
assign csr_bankarray_csrbank0_apply_time0_w = apply_time_storage[31:0];
assign csr_bankarray_csrbank0_gpios_out0_w = gpios_out_storage[31:0];
assign csr_bankarray_csrbank0_pwm0_width0_w = pwm_out0_width_storage[31:0];
assign csr_bankarray_csrbank0_pwm0_period0_w = pwm_out0_period_storage[31:0];
assign csr_bankarray_csrbank0_pwm1_width0_w = pwm_out1_width_storage[31:0];
assign csr_bankarray_csrbank0_pwm1_period0_w = pwm_out1_period_storage[31:0];
assign csr_bankarray_csrbank0_pwm2_width0_w = pwm_out2_width_storage[31:0];
assign csr_bankarray_csrbank0_pwm2_period0_w = pwm_out2_period_storage[31:0];
assign csr_bankarray_csrbank0_pwm3_width0_w = pwm_out3_width_storage[31:0];
assign csr_bankarray_csrbank0_pwm3_period0_w = pwm_out3_period_storage[31:0];
assign csr_bankarray_csrbank0_pwm4_width0_w = pwm_out4_width_storage[31:0];
assign csr_bankarray_csrbank0_pwm4_period0_w = pwm_out4_period_storage[31:0];
assign csr_bankarray_csrbank0_pwm5_width0_w = pwm_out5_width_storage[31:0];
assign csr_bankarray_csrbank0_pwm5_period0_w = pwm_out5_period_storage[31:0];
assign csr_bankarray_csrbank0_position11_w = position1_status[61:32];
assign csr_bankarray_csrbank0_position10_w = position1_status[31:0];
assign position1_we = csr_bankarray_csrbank0_position10_we;
assign csr_bankarray_csrbank0_position21_w = position2_status[61:32];
assign csr_bankarray_csrbank0_position20_w = position2_status[31:0];
assign position2_we = csr_bankarray_csrbank0_position20_we;
assign csr_bankarray_csrbank0_position31_w = position3_status[61:32];
assign csr_bankarray_csrbank0_position30_w = position3_status[31:0];
assign position3_we = csr_bankarray_csrbank0_position30_we;
assign csr_bankarray_csrbank0_position41_w = position4_status[61:32];
assign csr_bankarray_csrbank0_position40_w = position4_status[31:0];
assign position4_we = csr_bankarray_csrbank0_position40_we;
assign csr_bankarray_csrbank0_position51_w = position5_status[61:32];
assign csr_bankarray_csrbank0_position50_w = position5_status[31:0];
assign position5_we = csr_bankarray_csrbank0_position50_we;
assign csr_bankarray_csrbank0_position61_w = position6_status[61:32];
assign csr_bankarray_csrbank0_position60_w = position6_status[31:0];
assign position6_we = csr_bankarray_csrbank0_position60_we;
assign csr_bankarray_csrbank0_wallclock1_w = wallclock_status[63:32];
assign csr_bankarray_csrbank0_wallclock0_w = wallclock_status[31:0];
assign wallclock_we = csr_bankarray_csrbank0_wallclock0_we;
assign csr_bankarray_csrbank0_gpios_in_w = gpios_in_status[31:0];
assign gpios_in_we = csr_bankarray_csrbank0_gpios_in_we;
assign csr_bankarray_csrbank0_encoder_position1_w = encoder_position1_status[31:0];
assign encoder_position1_we = csr_bankarray_csrbank0_encoder_position1_we;
assign csr_bankarray_csrbank0_encoder_position2_w = encoder_position2_status[31:0];
assign encoder_position2_we = csr_bankarray_csrbank0_encoder_position2_we;
assign csr_bankarray_csrbank0_encoder_position3_w = encoder_position3_status[31:0];
assign encoder_position3_we = csr_bankarray_csrbank0_encoder_position3_we;
assign csr_bankarray_csrbank0_encoder_position4_w = encoder_position4_status[31:0];
assign encoder_position4_we = csr_bankarray_csrbank0_encoder_position4_we;
assign csr_bankarray_csrbank0_encoder_position5_w = encoder_position5_status[31:0];
assign encoder_position5_we = csr_bankarray_csrbank0_encoder_position5_we;
assign csr_bankarray_csrbank0_encoder_position6_w = encoder_position6_status[31:0];
assign encoder_position6_we = csr_bankarray_csrbank0_encoder_position6_we;
assign csr_bankarray_csrbank1_sel = (csr_bankarray_interface1_bank_bus_adr[13:9] == 1'd1);
assign csr_bankarray_csrbank1_reset0_r = csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank1_reset0_re <= 1'd0;
	csr_bankarray_csrbank1_reset0_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank1_reset0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_reset0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_scratch0_r = csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank1_scratch0_we <= 1'd0;
	csr_bankarray_csrbank1_scratch0_re <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank1_scratch0_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_scratch0_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
assign csr_bankarray_csrbank1_bus_errors_r = csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank1_bus_errors_re <= 1'd0;
	csr_bankarray_csrbank1_bus_errors_we <= 1'd0;
	if ((csr_bankarray_csrbank1_sel & (csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank1_bus_errors_re <= csr_bankarray_interface1_bank_bus_we;
		csr_bankarray_csrbank1_bus_errors_we <= (~csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	benchsoc_soc_rst <= 1'd0;
	if (benchsoc_reset_re) begin
		benchsoc_soc_rst <= benchsoc_reset_storage[0];
	end
end
assign benchsoc_cpu_rst = benchsoc_reset_storage[1];
assign csr_bankarray_csrbank1_reset0_w = benchsoc_reset_storage[1:0];
assign csr_bankarray_csrbank1_scratch0_w = benchsoc_scratch_storage[31:0];
assign csr_bankarray_csrbank1_bus_errors_w = benchsoc_bus_errors_status[31:0];
assign benchsoc_bus_errors_we = csr_bankarray_csrbank1_bus_errors_we;
assign csr_bankarray_csrbank2_sel = (csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd2);
assign csr_bankarray_csrbank2_crg_reset0_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_crg_reset0_we <= 1'd0;
	csr_bankarray_csrbank2_crg_reset0_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank2_crg_reset0_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_crg_reset0_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_rx_inband_status_r = csr_bankarray_interface2_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank2_rx_inband_status_re <= 1'd0;
	csr_bankarray_csrbank2_rx_inband_status_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank2_rx_inband_status_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_rx_inband_status_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_mdio_w0_r = csr_bankarray_interface2_bank_bus_dat_w[2:0];
always @(*) begin
	csr_bankarray_csrbank2_mdio_w0_re <= 1'd0;
	csr_bankarray_csrbank2_mdio_w0_we <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank2_mdio_w0_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_mdio_w0_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_mdio_r_r = csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank2_mdio_r_we <= 1'd0;
	csr_bankarray_csrbank2_mdio_r_re <= 1'd0;
	if ((csr_bankarray_csrbank2_sel & (csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank2_mdio_r_re <= csr_bankarray_interface2_bank_bus_we;
		csr_bankarray_csrbank2_mdio_r_we <= (~csr_bankarray_interface2_bank_bus_we);
	end
end
assign csr_bankarray_csrbank2_crg_reset0_w = ethphy_reset_storage;
always @(*) begin
	ethphy_status <= 3'd0;
	ethphy_status[0] <= ethphy_link_status;
	ethphy_status[1] <= ethphy_clock_speed;
	ethphy_status[2] <= ethphy_duplex_status;
end
assign csr_bankarray_csrbank2_rx_inband_status_w = ethphy_status[2:0];
assign ethphy_we = csr_bankarray_csrbank2_rx_inband_status_we;
assign ethphy_mdc = ethphy__w_storage[0];
assign ethphy_oe = ethphy__w_storage[1];
assign ethphy_w = ethphy__w_storage[2];
assign csr_bankarray_csrbank2_mdio_w0_w = ethphy__w_storage[2:0];
assign csr_bankarray_csrbank2_mdio_r_w = ethphy__r_status;
assign ethphy__r_we = csr_bankarray_csrbank2_mdio_r_we;
assign csr_bankarray_sel = (csr_bankarray_sram_bus_adr[13:9] == 2'd3);
always @(*) begin
	csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (csr_bankarray_sel_r) begin
		csr_bankarray_sram_bus_dat_r <= csr_bankarray_dat_r;
	end
end
assign csr_bankarray_adr = csr_bankarray_sram_bus_adr[5:0];
assign csr_bankarray_csrbank3_sel = (csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign csr_bankarray_csrbank3_out0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank3_out0_re <= 1'd0;
	csr_bankarray_csrbank3_out0_we <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		csr_bankarray_csrbank3_out0_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_out0_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_pwm_enable0_r = csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank3_pwm_enable0_we <= 1'd0;
	csr_bankarray_csrbank3_pwm_enable0_re <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank3_pwm_enable0_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_pwm_enable0_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_pwm_width0_r = csr_bankarray_interface3_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank3_pwm_width0_we <= 1'd0;
	csr_bankarray_csrbank3_pwm_width0_re <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank3_pwm_width0_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_pwm_width0_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_pwm_period0_r = csr_bankarray_interface3_bank_bus_dat_w[31:0];
always @(*) begin
	csr_bankarray_csrbank3_pwm_period0_re <= 1'd0;
	csr_bankarray_csrbank3_pwm_period0_we <= 1'd0;
	if ((csr_bankarray_csrbank3_sel & (csr_bankarray_interface3_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank3_pwm_period0_re <= csr_bankarray_interface3_bank_bus_we;
		csr_bankarray_csrbank3_pwm_period0_we <= (~csr_bankarray_interface3_bank_bus_we);
	end
end
assign csr_bankarray_csrbank3_out0_w = leds_storage;
assign csr_bankarray_csrbank3_pwm_enable0_w = ledchaser_pwm_enable_storage;
assign csr_bankarray_csrbank3_pwm_width0_w = ledchaser_pwm_width_storage[31:0];
assign csr_bankarray_csrbank3_pwm_period0_w = ledchaser_pwm_period_storage[31:0];
assign csr_bankarray_csrbank4_sel = (csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign benchsoc_uartcrossover_rxtx_r = csr_bankarray_interface4_bank_bus_dat_w[7:0];
always @(*) begin
	benchsoc_uartcrossover_rxtx_we <= 1'd0;
	benchsoc_uartcrossover_rxtx_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
		benchsoc_uartcrossover_rxtx_re <= csr_bankarray_interface4_bank_bus_we;
		benchsoc_uartcrossover_rxtx_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_txfull_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_txfull_re <= 1'd0;
	csr_bankarray_csrbank4_txfull_we <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
		csr_bankarray_csrbank4_txfull_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_txfull_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_rxempty_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_rxempty_re <= 1'd0;
	csr_bankarray_csrbank4_rxempty_we <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd2))) begin
		csr_bankarray_csrbank4_rxempty_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_rxempty_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_ev_status_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank4_ev_status_we <= 1'd0;
	csr_bankarray_csrbank4_ev_status_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 2'd3))) begin
		csr_bankarray_csrbank4_ev_status_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_ev_status_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_ev_pending_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank4_ev_pending_we <= 1'd0;
	csr_bankarray_csrbank4_ev_pending_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd4))) begin
		csr_bankarray_csrbank4_ev_pending_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_ev_pending_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_ev_enable0_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank4_ev_enable0_re <= 1'd0;
	csr_bankarray_csrbank4_ev_enable0_we <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd5))) begin
		csr_bankarray_csrbank4_ev_enable0_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_ev_enable0_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_txempty_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_txempty_we <= 1'd0;
	csr_bankarray_csrbank4_txempty_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd6))) begin
		csr_bankarray_csrbank4_txempty_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_txempty_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_rxfull_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_rxfull_we <= 1'd0;
	csr_bankarray_csrbank4_rxfull_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 3'd7))) begin
		csr_bankarray_csrbank4_rxfull_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_rxfull_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign benchsoc_xover_rxtx_r = csr_bankarray_interface4_bank_bus_dat_w[7:0];
always @(*) begin
	benchsoc_xover_rxtx_we <= 1'd0;
	benchsoc_xover_rxtx_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd8))) begin
		benchsoc_xover_rxtx_re <= csr_bankarray_interface4_bank_bus_we;
		benchsoc_xover_rxtx_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_txfull_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_xover_txfull_re <= 1'd0;
	csr_bankarray_csrbank4_xover_txfull_we <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd9))) begin
		csr_bankarray_csrbank4_xover_txfull_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_txfull_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_rxempty_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_xover_rxempty_re <= 1'd0;
	csr_bankarray_csrbank4_xover_rxempty_we <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd10))) begin
		csr_bankarray_csrbank4_xover_rxempty_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_rxempty_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_ev_status_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank4_xover_ev_status_we <= 1'd0;
	csr_bankarray_csrbank4_xover_ev_status_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd11))) begin
		csr_bankarray_csrbank4_xover_ev_status_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_ev_status_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_ev_pending_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank4_xover_ev_pending_we <= 1'd0;
	csr_bankarray_csrbank4_xover_ev_pending_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd12))) begin
		csr_bankarray_csrbank4_xover_ev_pending_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_ev_pending_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_ev_enable0_r = csr_bankarray_interface4_bank_bus_dat_w[1:0];
always @(*) begin
	csr_bankarray_csrbank4_xover_ev_enable0_re <= 1'd0;
	csr_bankarray_csrbank4_xover_ev_enable0_we <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd13))) begin
		csr_bankarray_csrbank4_xover_ev_enable0_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_ev_enable0_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_txempty_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_xover_txempty_we <= 1'd0;
	csr_bankarray_csrbank4_xover_txempty_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd14))) begin
		csr_bankarray_csrbank4_xover_txempty_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_txempty_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_xover_rxfull_r = csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	csr_bankarray_csrbank4_xover_rxfull_we <= 1'd0;
	csr_bankarray_csrbank4_xover_rxfull_re <= 1'd0;
	if ((csr_bankarray_csrbank4_sel & (csr_bankarray_interface4_bank_bus_adr[8:0] == 4'd15))) begin
		csr_bankarray_csrbank4_xover_rxfull_re <= csr_bankarray_interface4_bank_bus_we;
		csr_bankarray_csrbank4_xover_rxfull_we <= (~csr_bankarray_interface4_bank_bus_we);
	end
end
assign csr_bankarray_csrbank4_txfull_w = benchsoc_uartcrossover_txfull_status;
assign benchsoc_uartcrossover_txfull_we = csr_bankarray_csrbank4_txfull_we;
assign csr_bankarray_csrbank4_rxempty_w = benchsoc_uartcrossover_rxempty_status;
assign benchsoc_uartcrossover_rxempty_we = csr_bankarray_csrbank4_rxempty_we;
always @(*) begin
	benchsoc_uartcrossover_status_status <= 2'd0;
	benchsoc_uartcrossover_status_status[0] <= benchsoc_uartcrossover_tx0;
	benchsoc_uartcrossover_status_status[1] <= benchsoc_uartcrossover_rx0;
end
assign csr_bankarray_csrbank4_ev_status_w = benchsoc_uartcrossover_status_status[1:0];
assign benchsoc_uartcrossover_status_we = csr_bankarray_csrbank4_ev_status_we;
always @(*) begin
	benchsoc_uartcrossover_pending_status <= 2'd0;
	benchsoc_uartcrossover_pending_status[0] <= benchsoc_uartcrossover_tx1;
	benchsoc_uartcrossover_pending_status[1] <= benchsoc_uartcrossover_rx1;
end
assign csr_bankarray_csrbank4_ev_pending_w = benchsoc_uartcrossover_pending_status[1:0];
assign benchsoc_uartcrossover_pending_we = csr_bankarray_csrbank4_ev_pending_we;
assign benchsoc_uartcrossover_tx2 = benchsoc_uartcrossover_enable_storage[0];
assign benchsoc_uartcrossover_rx2 = benchsoc_uartcrossover_enable_storage[1];
assign csr_bankarray_csrbank4_ev_enable0_w = benchsoc_uartcrossover_enable_storage[1:0];
assign csr_bankarray_csrbank4_txempty_w = benchsoc_uartcrossover_txempty_status;
assign benchsoc_uartcrossover_txempty_we = csr_bankarray_csrbank4_txempty_we;
assign csr_bankarray_csrbank4_rxfull_w = benchsoc_uartcrossover_rxfull_status;
assign benchsoc_uartcrossover_rxfull_we = csr_bankarray_csrbank4_rxfull_we;
assign csr_bankarray_csrbank4_xover_txfull_w = benchsoc_xover_txfull_status;
assign benchsoc_xover_txfull_we = csr_bankarray_csrbank4_xover_txfull_we;
assign csr_bankarray_csrbank4_xover_rxempty_w = benchsoc_xover_rxempty_status;
assign benchsoc_xover_rxempty_we = csr_bankarray_csrbank4_xover_rxempty_we;
always @(*) begin
	benchsoc_xover_status_status <= 2'd0;
	benchsoc_xover_status_status[0] <= benchsoc_xover_tx0;
	benchsoc_xover_status_status[1] <= benchsoc_xover_rx0;
end
assign csr_bankarray_csrbank4_xover_ev_status_w = benchsoc_xover_status_status[1:0];
assign benchsoc_xover_status_we = csr_bankarray_csrbank4_xover_ev_status_we;
always @(*) begin
	benchsoc_xover_pending_status <= 2'd0;
	benchsoc_xover_pending_status[0] <= benchsoc_xover_tx1;
	benchsoc_xover_pending_status[1] <= benchsoc_xover_rx1;
end
assign csr_bankarray_csrbank4_xover_ev_pending_w = benchsoc_xover_pending_status[1:0];
assign benchsoc_xover_pending_we = csr_bankarray_csrbank4_xover_ev_pending_we;
assign benchsoc_xover_tx2 = benchsoc_xover_enable_storage[0];
assign benchsoc_xover_rx2 = benchsoc_xover_enable_storage[1];
assign csr_bankarray_csrbank4_xover_ev_enable0_w = benchsoc_xover_enable_storage[1:0];
assign csr_bankarray_csrbank4_xover_txempty_w = benchsoc_xover_txempty_status;
assign benchsoc_xover_txempty_we = csr_bankarray_csrbank4_xover_txempty_we;
assign csr_bankarray_csrbank4_xover_rxfull_w = benchsoc_xover_rxfull_status;
assign benchsoc_xover_rxfull_we = csr_bankarray_csrbank4_xover_rxfull_we;
assign csr_interconnect_adr = benchsoc_adr;
assign csr_interconnect_we = benchsoc_we;
assign csr_interconnect_dat_w = benchsoc_dat_w;
assign benchsoc_dat_r = csr_interconnect_dat_r;
assign csr_bankarray_interface0_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface1_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface2_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface3_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface4_bank_bus_adr = csr_interconnect_adr;
assign csr_bankarray_sram_bus_adr = csr_interconnect_adr;
assign csr_bankarray_interface0_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface1_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface2_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface3_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_interface4_bank_bus_we = csr_interconnect_we;
assign csr_bankarray_sram_bus_we = csr_interconnect_we;
assign csr_bankarray_interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign csr_bankarray_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((csr_bankarray_interface0_bank_bus_dat_r | csr_bankarray_interface1_bank_bus_dat_r) | csr_bankarray_interface2_bank_bus_dat_r) | csr_bankarray_interface3_bank_bus_dat_r) | csr_bankarray_interface4_bank_bus_dat_r) | csr_bankarray_sram_bus_dat_r);
assign t_slice_proxy0 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy1 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy2 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy3 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy4 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy5 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy6 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy7 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy8 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy9 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy10 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy11 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy12 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy13 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy14 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy15 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy16 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy17 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy18 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy19 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy20 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy21 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy22 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy23 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy24 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy25 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy26 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy27 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy28 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy29 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy30 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign t_slice_proxy31 = (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next);
assign cases_slice_proxy = {benchsoc_ethcore_mac_core_liteethmaccrc32inserter_value, benchsoc_ethcore_mac_core_liteethmaccrc32inserter_sink_payload_data[7:0]};
assign t_slice_proxy32 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy33 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy34 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy35 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy36 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy37 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy38 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy39 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy40 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy41 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy42 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy43 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy44 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy45 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy46 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy47 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy48 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy49 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy50 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy51 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy52 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy53 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy54 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy55 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy56 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy57 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy58 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy59 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy60 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy61 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy62 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign t_slice_proxy63 = (~benchsoc_ethcore_mac_core_rx_crc_crc_next);
assign rhs_slice_proxy0 = benchsoc_ethcore_mac_depacketizer_header[111:96];
assign rhs_slice_proxy1 = benchsoc_ethcore_mac_depacketizer_header[111:96];
assign rhs_slice_proxy2 = benchsoc_ethcore_mac_depacketizer_header[95:48];
assign rhs_slice_proxy3 = benchsoc_ethcore_mac_depacketizer_header[95:48];
assign rhs_slice_proxy4 = benchsoc_ethcore_mac_depacketizer_header[95:48];
assign rhs_slice_proxy5 = benchsoc_ethcore_mac_depacketizer_header[95:48];
assign rhs_slice_proxy6 = benchsoc_ethcore_mac_depacketizer_header[95:48];
assign rhs_slice_proxy7 = benchsoc_ethcore_mac_depacketizer_header[95:48];
assign rhs_slice_proxy8 = benchsoc_ethcore_mac_depacketizer_header[47:0];
assign rhs_slice_proxy9 = benchsoc_ethcore_mac_depacketizer_header[47:0];
assign rhs_slice_proxy10 = benchsoc_ethcore_mac_depacketizer_header[47:0];
assign rhs_slice_proxy11 = benchsoc_ethcore_mac_depacketizer_header[47:0];
assign rhs_slice_proxy12 = benchsoc_ethcore_mac_depacketizer_header[47:0];
assign rhs_slice_proxy13 = benchsoc_ethcore_mac_depacketizer_header[47:0];
assign rhs_slice_proxy14 = benchsoc_ethcore_arp_rx_depacketizer_header[39:32];
assign rhs_slice_proxy15 = benchsoc_ethcore_arp_rx_depacketizer_header[15:0];
assign rhs_slice_proxy16 = benchsoc_ethcore_arp_rx_depacketizer_header[15:0];
assign rhs_slice_proxy17 = benchsoc_ethcore_arp_rx_depacketizer_header[63:48];
assign rhs_slice_proxy18 = benchsoc_ethcore_arp_rx_depacketizer_header[63:48];
assign rhs_slice_proxy19 = benchsoc_ethcore_arp_rx_depacketizer_header[31:16];
assign rhs_slice_proxy20 = benchsoc_ethcore_arp_rx_depacketizer_header[31:16];
assign rhs_slice_proxy21 = benchsoc_ethcore_arp_rx_depacketizer_header[47:40];
assign rhs_slice_proxy22 = benchsoc_ethcore_arp_rx_depacketizer_header[143:112];
assign rhs_slice_proxy23 = benchsoc_ethcore_arp_rx_depacketizer_header[143:112];
assign rhs_slice_proxy24 = benchsoc_ethcore_arp_rx_depacketizer_header[143:112];
assign rhs_slice_proxy25 = benchsoc_ethcore_arp_rx_depacketizer_header[143:112];
assign rhs_slice_proxy26 = benchsoc_ethcore_arp_rx_depacketizer_header[111:64];
assign rhs_slice_proxy27 = benchsoc_ethcore_arp_rx_depacketizer_header[111:64];
assign rhs_slice_proxy28 = benchsoc_ethcore_arp_rx_depacketizer_header[111:64];
assign rhs_slice_proxy29 = benchsoc_ethcore_arp_rx_depacketizer_header[111:64];
assign rhs_slice_proxy30 = benchsoc_ethcore_arp_rx_depacketizer_header[111:64];
assign rhs_slice_proxy31 = benchsoc_ethcore_arp_rx_depacketizer_header[111:64];
assign rhs_slice_proxy32 = benchsoc_ethcore_arp_rx_depacketizer_header[223:192];
assign rhs_slice_proxy33 = benchsoc_ethcore_arp_rx_depacketizer_header[223:192];
assign rhs_slice_proxy34 = benchsoc_ethcore_arp_rx_depacketizer_header[223:192];
assign rhs_slice_proxy35 = benchsoc_ethcore_arp_rx_depacketizer_header[223:192];
assign rhs_slice_proxy36 = benchsoc_ethcore_arp_rx_depacketizer_header[191:144];
assign rhs_slice_proxy37 = benchsoc_ethcore_arp_rx_depacketizer_header[191:144];
assign rhs_slice_proxy38 = benchsoc_ethcore_arp_rx_depacketizer_header[191:144];
assign rhs_slice_proxy39 = benchsoc_ethcore_arp_rx_depacketizer_header[191:144];
assign rhs_slice_proxy40 = benchsoc_ethcore_arp_rx_depacketizer_header[191:144];
assign rhs_slice_proxy41 = benchsoc_ethcore_arp_rx_depacketizer_header[191:144];
assign rhs_slice_proxy42 = benchsoc_ethcore_ip_rx_depacketizer_header[95:80];
assign rhs_slice_proxy43 = benchsoc_ethcore_ip_rx_depacketizer_header[95:80];
assign rhs_slice_proxy44 = benchsoc_ethcore_ip_rx_depacketizer_header[47:32];
assign rhs_slice_proxy45 = benchsoc_ethcore_ip_rx_depacketizer_header[47:32];
assign rhs_slice_proxy46 = benchsoc_ethcore_ip_rx_depacketizer_header[3:0];
assign rhs_slice_proxy47 = benchsoc_ethcore_ip_rx_depacketizer_header[79:72];
assign rhs_slice_proxy48 = benchsoc_ethcore_ip_rx_depacketizer_header[127:96];
assign rhs_slice_proxy49 = benchsoc_ethcore_ip_rx_depacketizer_header[127:96];
assign rhs_slice_proxy50 = benchsoc_ethcore_ip_rx_depacketizer_header[127:96];
assign rhs_slice_proxy51 = benchsoc_ethcore_ip_rx_depacketizer_header[127:96];
assign rhs_slice_proxy52 = benchsoc_ethcore_ip_rx_depacketizer_header[159:128];
assign rhs_slice_proxy53 = benchsoc_ethcore_ip_rx_depacketizer_header[159:128];
assign rhs_slice_proxy54 = benchsoc_ethcore_ip_rx_depacketizer_header[159:128];
assign rhs_slice_proxy55 = benchsoc_ethcore_ip_rx_depacketizer_header[159:128];
assign rhs_slice_proxy56 = benchsoc_ethcore_ip_rx_depacketizer_header[31:16];
assign rhs_slice_proxy57 = benchsoc_ethcore_ip_rx_depacketizer_header[31:16];
assign rhs_slice_proxy58 = benchsoc_ethcore_ip_rx_depacketizer_header[71:64];
assign rhs_slice_proxy59 = benchsoc_ethcore_ip_rx_depacketizer_header[7:4];
assign rhs_slice_proxy60 = benchsoc_ethcore_icmp_rx_depacketizer_header[31:16];
assign rhs_slice_proxy61 = benchsoc_ethcore_icmp_rx_depacketizer_header[31:16];
assign rhs_slice_proxy62 = benchsoc_ethcore_icmp_rx_depacketizer_header[15:8];
assign rhs_slice_proxy63 = benchsoc_ethcore_icmp_rx_depacketizer_header[7:0];
assign rhs_slice_proxy64 = benchsoc_ethcore_icmp_rx_depacketizer_header[63:32];
assign rhs_slice_proxy65 = benchsoc_ethcore_icmp_rx_depacketizer_header[63:32];
assign rhs_slice_proxy66 = benchsoc_ethcore_icmp_rx_depacketizer_header[63:32];
assign rhs_slice_proxy67 = benchsoc_ethcore_icmp_rx_depacketizer_header[63:32];
assign rhs_slice_proxy68 = benchsoc_ethcore_rx_depacketizer_header[63:48];
assign rhs_slice_proxy69 = benchsoc_ethcore_rx_depacketizer_header[63:48];
assign rhs_slice_proxy70 = benchsoc_ethcore_rx_depacketizer_header[31:16];
assign rhs_slice_proxy71 = benchsoc_ethcore_rx_depacketizer_header[31:16];
assign rhs_slice_proxy72 = benchsoc_ethcore_rx_depacketizer_header[47:32];
assign rhs_slice_proxy73 = benchsoc_ethcore_rx_depacketizer_header[47:32];
assign rhs_slice_proxy74 = benchsoc_ethcore_rx_depacketizer_header[15:0];
assign rhs_slice_proxy75 = benchsoc_ethcore_rx_depacketizer_header[15:0];
assign rhs_slice_proxy76 = benchsoc_etherbone_rx_depacketizer_header[31:28];
assign rhs_slice_proxy77 = benchsoc_etherbone_rx_depacketizer_header[15:0];
assign rhs_slice_proxy78 = benchsoc_etherbone_rx_depacketizer_header[15:0];
assign rhs_slice_proxy79 = benchsoc_etherbone_rx_depacketizer_header[18];
assign rhs_slice_proxy80 = benchsoc_etherbone_rx_depacketizer_header[16];
assign rhs_slice_proxy81 = benchsoc_etherbone_rx_depacketizer_header[27:24];
assign rhs_slice_proxy82 = benchsoc_etherbone_rx_depacketizer_header[17];
assign rhs_slice_proxy83 = benchsoc_etherbone_rx_depacketizer_header[23:20];
assign rhs_slice_proxy84 = benchsoc_etherbone_record_depacketizer_header[0];
assign rhs_slice_proxy85 = benchsoc_etherbone_record_depacketizer_header[15:8];
assign rhs_slice_proxy86 = benchsoc_etherbone_record_depacketizer_header[4];
assign rhs_slice_proxy87 = benchsoc_etherbone_record_depacketizer_header[1];
assign rhs_slice_proxy88 = benchsoc_etherbone_record_depacketizer_header[31:24];
assign rhs_slice_proxy89 = benchsoc_etherbone_record_depacketizer_header[2];
assign rhs_slice_proxy90 = benchsoc_etherbone_record_depacketizer_header[5];
assign rhs_slice_proxy91 = benchsoc_etherbone_record_depacketizer_header[23:16];
assign rhs_slice_proxy92 = benchsoc_etherbone_record_depacketizer_header[6];
always @(*) begin
	ethphy__r_status <= 1'd0;
	ethphy__r_status <= ethphy_r;
	ethphy__r_status <= multiregimpl0_regs1;
end
assign benchsoc_ethcore_mac_core_cdc_produce_rdomain = multiregimpl1_regs1;
assign benchsoc_ethcore_mac_core_cdc_consume_wdomain = multiregimpl2_regs1;
assign benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o = multiregimpl3_regs1;
assign benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o = multiregimpl4_regs1;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_produce_rdomain = multiregimpl5_regs1;
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_consume_wdomain = multiregimpl6_regs1;
assign benchsoc_etherbone_tx_cdc_cdc_produce_rdomain = multiregimpl7_regs1;
assign benchsoc_etherbone_tx_cdc_cdc_consume_wdomain = multiregimpl8_regs1;
assign benchsoc_etherbone_rx_cdc_cdc_produce_rdomain = multiregimpl9_regs1;
assign benchsoc_etherbone_rx_cdc_cdc_consume_wdomain = multiregimpl10_regs1;
assign ledchaser_enable = ledchaser_pwm_enable_storage;
assign ledchaser_width = ledchaser_pwm_width_storage;
assign ledchaser_period = ledchaser_pwm_period_storage;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge eth_rx_clk) begin
	ethphy_rx_ctl_reg <= ethphy_rx_ctl;
	ethphy_rx_data_reg <= ethphy_rx_data;
	ethphy_rx_ctl_reg_d <= ethphy_rx_ctl_reg;
	ethphy_source_valid <= ethphy_rx_ctl_reg[0];
	ethphy_source_payload_data <= ethphy_rx_data_reg;
	if ((ethphy_rx_ctl == 1'd0)) begin
		ethphy_link_status <= ethphy_rx_data[0];
		ethphy_clock_speed <= ethphy_rx_data[2:1];
		ethphy_duplex_status <= ethphy_rx_data[3];
	end
	liteethmac_rxdatapath_liteethmacpreamblechecker_state <= liteethmac_rxdatapath_liteethmacpreamblechecker_next_state;
	if (benchsoc_ethcore_mac_core_pulsesynchronizer0_i) begin
		benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_i <= (~benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_i);
	end
	if (benchsoc_ethcore_mac_core_rx_crc_crc_ce) begin
		benchsoc_ethcore_mac_core_rx_crc_crc_reg <= benchsoc_ethcore_mac_core_rx_crc_crc_next;
	end
	if (benchsoc_ethcore_mac_core_rx_crc_crc_reset) begin
		benchsoc_ethcore_mac_core_rx_crc_crc_reg <= 32'd4294967295;
	end
	if (((benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_we & benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_writable) & (~benchsoc_ethcore_mac_core_rx_crc_syncfifo_replace))) begin
		if ((benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce == 3'd4)) begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce <= 1'd0;
		end else begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce <= (benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce + 1'd1);
		end
	end
	if (benchsoc_ethcore_mac_core_rx_crc_syncfifo_do_read) begin
		if ((benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume == 3'd4)) begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume <= 1'd0;
		end else begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume <= (benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume + 1'd1);
		end
	end
	if (((benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_we & benchsoc_ethcore_mac_core_rx_crc_syncfifo_syncfifo_writable) & (~benchsoc_ethcore_mac_core_rx_crc_syncfifo_replace))) begin
		if ((~benchsoc_ethcore_mac_core_rx_crc_syncfifo_do_read)) begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_level <= (benchsoc_ethcore_mac_core_rx_crc_syncfifo_level + 1'd1);
		end
	end else begin
		if (benchsoc_ethcore_mac_core_rx_crc_syncfifo_do_read) begin
			benchsoc_ethcore_mac_core_rx_crc_syncfifo_level <= (benchsoc_ethcore_mac_core_rx_crc_syncfifo_level - 1'd1);
		end
	end
	if (benchsoc_ethcore_mac_core_rx_crc_fifo_reset) begin
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_level <= 3'd0;
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce <= 3'd0;
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume <= 3'd0;
	end
	liteethmac_rxdatapath_bufferizeendpoints_state <= liteethmac_rxdatapath_bufferizeendpoints_next_state;
	if (benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value_ce0) begin
		benchsoc_ethcore_mac_core_rx_crc_last_be <= benchsoc_ethcore_mac_core_rx_crc_last_be_liteethmac_next_value0;
	end
	if (benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value_ce1) begin
		benchsoc_ethcore_mac_core_rx_crc_crc_error1 <= benchsoc_ethcore_mac_core_rx_crc_crc_error1_liteethmac_next_value1;
	end
	if (((~benchsoc_ethcore_mac_core_rx_crc_source_valid) | benchsoc_ethcore_mac_core_rx_crc_source_ready)) begin
		benchsoc_ethcore_mac_core_rx_crc_source_valid <= benchsoc_ethcore_mac_core_rx_crc_sink_valid;
		benchsoc_ethcore_mac_core_rx_crc_source_first <= benchsoc_ethcore_mac_core_rx_crc_sink_first;
		benchsoc_ethcore_mac_core_rx_crc_source_last <= benchsoc_ethcore_mac_core_rx_crc_sink_last;
		benchsoc_ethcore_mac_core_rx_crc_source_payload_data <= benchsoc_ethcore_mac_core_rx_crc_sink_payload_data;
		benchsoc_ethcore_mac_core_rx_crc_source_payload_last_be <= benchsoc_ethcore_mac_core_rx_crc_sink_payload_last_be;
		benchsoc_ethcore_mac_core_rx_crc_source_payload_error <= benchsoc_ethcore_mac_core_rx_crc_sink_payload_error;
	end
	if (benchsoc_ethcore_mac_core_pulsesynchronizer1_i) begin
		benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_i <= (~benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_i);
	end
	benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_binary <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next_binary;
	benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_next;
	benchsoc_ethcore_mac_core_cdc_graycounter0_q_binary <= benchsoc_ethcore_mac_core_cdc_graycounter0_q_next_binary;
	benchsoc_ethcore_mac_core_cdc_graycounter0_q <= benchsoc_ethcore_mac_core_cdc_graycounter0_q_next;
	if (benchsoc_ethcore_mac_core_pulsesynchronizer0_o) begin
		benchsoc_ethcore_mac_core_preamble_errors_status <= (benchsoc_ethcore_mac_core_preamble_errors_status + 1'd1);
	end
	if (benchsoc_ethcore_mac_core_pulsesynchronizer1_o) begin
		benchsoc_ethcore_mac_core_crc_errors_status <= (benchsoc_ethcore_mac_core_crc_errors_status + 1'd1);
	end
	benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o_r <= benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_o;
	benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o_r <= benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_o;
	benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_binary <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next_binary;
	benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_next;
	case (liteethmac_grant)
		1'd0: begin
			if ((~liteethmac_request[0])) begin
				if (liteethmac_request[1]) begin
					liteethmac_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~liteethmac_request[1])) begin
				if (liteethmac_request[0]) begin
					liteethmac_grant <= 1'd0;
				end
			end
		end
	endcase
	liteethmac_status0_ongoing1 <= ((benchsoc_ethcore_arp_mac_port_sink_valid | liteethmac_status0_ongoing1) & (~liteethmac_status0_last));
	if (liteethmac_status0_last) begin
		liteethmac_status0_first <= 1'd1;
	end else begin
		if ((benchsoc_ethcore_arp_mac_port_sink_valid & benchsoc_ethcore_arp_mac_port_sink_ready)) begin
			liteethmac_status0_first <= 1'd0;
		end
	end
	liteethmac_status1_ongoing1 <= ((benchsoc_ethcore_ip_mac_port_sink_valid | liteethmac_status1_ongoing1) & (~liteethmac_status1_last));
	if (liteethmac_status1_last) begin
		liteethmac_status1_first <= 1'd1;
	end else begin
		if ((benchsoc_ethcore_ip_mac_port_sink_valid & benchsoc_ethcore_ip_mac_port_sink_ready)) begin
			liteethmac_status1_first <= 1'd0;
		end
	end
	if (liteethmac_first) begin
		liteethmac_sel_ongoing <= liteethmac_sel0;
	end
	liteethmac_ongoing1 <= ((benchsoc_ethcore_mac_crossbar_sink_valid | liteethmac_ongoing1) & (~liteethmac_last));
	if (liteethmac_last) begin
		liteethmac_first <= 1'd1;
	end else begin
		if ((benchsoc_ethcore_mac_crossbar_sink_valid & benchsoc_ethcore_mac_crossbar_sink_ready)) begin
			liteethmac_first <= 1'd0;
		end
	end
	if (benchsoc_ethcore_mac_packetizer_sr_load) begin
		benchsoc_ethcore_mac_packetizer_sr <= benchsoc_ethcore_mac_packetizer_header;
	end
	if (benchsoc_ethcore_mac_packetizer_sr_shift) begin
		benchsoc_ethcore_mac_packetizer_sr <= benchsoc_ethcore_mac_packetizer_sr[111:8];
	end
	liteethmac_fsm0_state0 <= liteethmac_fsm0_next_state0;
	if (benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value_ce0) begin
		benchsoc_ethcore_mac_packetizer_count <= benchsoc_ethcore_mac_packetizer_count_liteethmac_fsm0_next_value0;
	end
	if (benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value_ce1) begin
		benchsoc_ethcore_mac_packetizer_fsm_from_idle <= benchsoc_ethcore_mac_packetizer_fsm_from_idle_liteethmac_fsm0_next_value1;
	end
	liteethmac_fsm1_state0 <= liteethmac_fsm1_next_state0;
	if (benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value_ce0) begin
		benchsoc_ethcore_mac_packetizer_delayed_last_be <= benchsoc_ethcore_mac_packetizer_delayed_last_be_liteethmac_fsm1_next_value0;
	end
	if (benchsoc_ethcore_mac_depacketizer_sr_shift) begin
		benchsoc_ethcore_mac_depacketizer_sr <= {benchsoc_ethcore_mac_depacketizer_sink_payload_data, benchsoc_ethcore_mac_depacketizer_sr[111:8]};
	end
	if (benchsoc_ethcore_mac_depacketizer_sr_shift_leftover) begin
		benchsoc_ethcore_mac_depacketizer_sr <= {benchsoc_ethcore_mac_depacketizer_sink_payload_data, benchsoc_ethcore_mac_depacketizer_sr[111:0]};
	end
	benchsoc_ethcore_mac_depacketizer_was_in_copy <= benchsoc_ethcore_mac_depacketizer_is_in_copy;
	liteethmac_fsm0_state1 <= liteethmac_fsm0_next_state1;
	if (benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value_ce2) begin
		benchsoc_ethcore_mac_depacketizer_count <= benchsoc_ethcore_mac_depacketizer_count_liteethmac_fsm0_next_value2;
	end
	if (benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value_ce3) begin
		benchsoc_ethcore_mac_depacketizer_fsm_from_idle <= benchsoc_ethcore_mac_depacketizer_fsm_from_idle_liteethmac_fsm0_next_value3;
	end
	liteethmac_fsm1_state1 <= liteethmac_fsm1_next_state1;
	if (benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value_ce1) begin
		benchsoc_ethcore_mac_depacketizer_delayed_last_be <= benchsoc_ethcore_mac_depacketizer_delayed_last_be_liteethmac_fsm1_next_value1;
	end
	if (benchsoc_ethcore_arp_tx_packetizer_sr_load) begin
		benchsoc_ethcore_arp_tx_packetizer_sr <= benchsoc_ethcore_arp_tx_packetizer_header;
	end
	if (benchsoc_ethcore_arp_tx_packetizer_sr_shift) begin
		benchsoc_ethcore_arp_tx_packetizer_sr <= benchsoc_ethcore_arp_tx_packetizer_sr[223:8];
	end
	liteetharptx_fsm0_state <= liteetharptx_fsm0_next_state;
	if (benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value_ce0) begin
		benchsoc_ethcore_arp_tx_packetizer_count <= benchsoc_ethcore_arp_tx_packetizer_count_liteetharp_fsm0_next_value0;
	end
	if (benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value_ce1) begin
		benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle <= benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle_liteetharp_fsm0_next_value1;
	end
	liteetharptx_fsm1_state <= liteetharptx_fsm1_next_state;
	if (benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value_ce0) begin
		benchsoc_ethcore_arp_tx_packetizer_delayed_last_be <= benchsoc_ethcore_arp_tx_packetizer_delayed_last_be_liteetharp_fsm1_next_value0;
	end
	liteetharptx_state <= liteetharptx_next_state;
	if (benchsoc_ethcore_arp_tx_counter_liteetharp_next_value_ce) begin
		benchsoc_ethcore_arp_tx_counter <= benchsoc_ethcore_arp_tx_counter_liteetharp_next_value;
	end
	benchsoc_ethcore_arp_rx_valid <= (((((benchsoc_ethcore_arp_rx_depacketizer_source_valid & (benchsoc_ethcore_arp_rx_depacketizer_source_param_hwtype == 1'd1)) & (benchsoc_ethcore_arp_rx_depacketizer_source_param_proto == 12'd2048)) & (benchsoc_ethcore_arp_rx_depacketizer_source_param_hwsize == 3'd6)) & (benchsoc_ethcore_arp_rx_depacketizer_source_param_protosize == 3'd4)) & (benchsoc_ethcore_arp_rx_depacketizer_source_param_target_ip == 32'd3232236082));
	if (benchsoc_ethcore_arp_rx_depacketizer_sr_shift) begin
		benchsoc_ethcore_arp_rx_depacketizer_sr <= {benchsoc_ethcore_arp_rx_depacketizer_sink_payload_data, benchsoc_ethcore_arp_rx_depacketizer_sr[223:8]};
	end
	if (benchsoc_ethcore_arp_rx_depacketizer_sr_shift_leftover) begin
		benchsoc_ethcore_arp_rx_depacketizer_sr <= {benchsoc_ethcore_arp_rx_depacketizer_sink_payload_data, benchsoc_ethcore_arp_rx_depacketizer_sr[223:0]};
	end
	benchsoc_ethcore_arp_rx_depacketizer_was_in_copy <= benchsoc_ethcore_arp_rx_depacketizer_is_in_copy;
	liteetharprx_fsm0_state <= liteetharprx_fsm0_next_state;
	if (benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value_ce2) begin
		benchsoc_ethcore_arp_rx_depacketizer_count <= benchsoc_ethcore_arp_rx_depacketizer_count_liteetharp_fsm0_next_value2;
	end
	if (benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value_ce3) begin
		benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle <= benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle_liteetharp_fsm0_next_value3;
	end
	liteetharprx_fsm1_state <= liteetharprx_fsm1_next_state;
	if (benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value_ce1) begin
		benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be <= benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be_liteetharp_fsm1_next_value1;
	end
	liteetharprx_state <= liteetharprx_next_state;
	if (benchsoc_ethcore_arp_table_request_pending_clr) begin
		benchsoc_ethcore_arp_table_request_pending <= 1'd0;
	end else begin
		if (benchsoc_ethcore_arp_table_request_pending_set) begin
			benchsoc_ethcore_arp_table_request_pending <= 1'd1;
		end
	end
	if (benchsoc_ethcore_arp_table_request_ip_address_reset) begin
		benchsoc_ethcore_arp_table_request_ip_address <= 1'd0;
	end else begin
		if (benchsoc_ethcore_arp_table_request_ip_address_update) begin
			benchsoc_ethcore_arp_table_request_ip_address <= benchsoc_ethcore_arp_table_request_payload_ip_address;
		end
	end
	if (benchsoc_ethcore_arp_table_request_counter_reset) begin
		benchsoc_ethcore_arp_table_request_counter <= 1'd0;
	end else begin
		if (benchsoc_ethcore_arp_table_request_counter_ce) begin
			benchsoc_ethcore_arp_table_request_counter <= (benchsoc_ethcore_arp_table_request_counter + 1'd1);
		end
	end
	if (benchsoc_ethcore_arp_table_update) begin
		benchsoc_ethcore_arp_table_cached_valid <= 1'd1;
		benchsoc_ethcore_arp_table_cached_ip_address <= benchsoc_ethcore_arp_table_sink_payload_ip_address;
		benchsoc_ethcore_arp_table_cached_mac_address <= benchsoc_ethcore_arp_table_sink_payload_mac_address;
	end else begin
		if (benchsoc_ethcore_arp_table_cached_timer_done) begin
			benchsoc_ethcore_arp_table_cached_valid <= 1'd0;
		end
	end
	if (benchsoc_ethcore_arp_table_request_timer_wait) begin
		if ((~benchsoc_ethcore_arp_table_request_timer_done)) begin
			benchsoc_ethcore_arp_table_request_timer_count <= (benchsoc_ethcore_arp_table_request_timer_count - 1'd1);
		end
	end else begin
		benchsoc_ethcore_arp_table_request_timer_count <= 23'd5000000;
	end
	if (benchsoc_ethcore_arp_table_cached_timer_wait) begin
		if ((~benchsoc_ethcore_arp_table_cached_timer_done)) begin
			benchsoc_ethcore_arp_table_cached_timer_count <= (benchsoc_ethcore_arp_table_cached_timer_count - 1'd1);
		end
	end else begin
		benchsoc_ethcore_arp_table_cached_timer_count <= 29'd500000000;
	end
	liteetharptable_state <= liteetharptable_next_state;
	if (benchsoc_ethcore_ip_tx_ce) begin
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next0 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum0, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next0[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next0[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next1 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum1, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next1[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next1[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next2 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum2, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next2[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next2[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next3 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum3, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next3[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next3[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next4 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum4, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next4[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next4[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next5 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum5, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next5[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next5[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next6 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum6, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next6[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next6[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next7 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum7, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next7[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next7[16])};
		end
		if ((~benchsoc_ethcore_ip_tx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_r_next8 <= {benchsoc_ethcore_ip_tx_liteethipv4checksum8, (benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next8[15:0] + benchsoc_ethcore_ip_tx_liteethipv4checksum_s_next8[16])};
		end
		if (benchsoc_ethcore_ip_tx_liteethipv4checksum_counter_ce) begin
			benchsoc_ethcore_ip_tx_liteethipv4checksum_counter <= (benchsoc_ethcore_ip_tx_liteethipv4checksum_counter + 1'd1);
		end
	end
	if (benchsoc_ethcore_ip_tx_reset) begin
		benchsoc_ethcore_ip_tx_liteethipv4checksum_counter <= 4'd0;
	end
	if (benchsoc_ethcore_ip_tx_packetizer_sr_load) begin
		benchsoc_ethcore_ip_tx_packetizer_sr <= benchsoc_ethcore_ip_tx_packetizer_header;
	end
	if (benchsoc_ethcore_ip_tx_packetizer_sr_shift) begin
		benchsoc_ethcore_ip_tx_packetizer_sr <= benchsoc_ethcore_ip_tx_packetizer_sr[159:8];
	end
	liteethip_liteethiptx_fsm0_state <= liteethip_liteethiptx_fsm0_next_state;
	if (benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value_ce0) begin
		benchsoc_ethcore_ip_tx_packetizer_count <= benchsoc_ethcore_ip_tx_packetizer_count_liteethip_fsm0_next_value0;
	end
	if (benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value_ce1) begin
		benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle <= benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle_liteethip_fsm0_next_value1;
	end
	liteethip_liteethiptx_fsm1_state <= liteethip_liteethiptx_fsm1_next_state;
	if (benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value_ce0) begin
		benchsoc_ethcore_ip_tx_packetizer_delayed_last_be <= benchsoc_ethcore_ip_tx_packetizer_delayed_last_be_liteethip_fsm1_next_value0;
	end
	liteethip_liteethiptx_state <= liteethip_liteethiptx_next_state;
	if (benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value_ce) begin
		benchsoc_ethcore_ip_tx_target_mac <= benchsoc_ethcore_ip_tx_target_mac_liteethip_next_value;
	end
	if (benchsoc_ethcore_ip_rx_depacketizer_sr_shift) begin
		benchsoc_ethcore_ip_rx_depacketizer_sr <= {benchsoc_ethcore_ip_rx_depacketizer_sink_payload_data, benchsoc_ethcore_ip_rx_depacketizer_sr[159:8]};
	end
	if (benchsoc_ethcore_ip_rx_depacketizer_sr_shift_leftover) begin
		benchsoc_ethcore_ip_rx_depacketizer_sr <= {benchsoc_ethcore_ip_rx_depacketizer_sink_payload_data, benchsoc_ethcore_ip_rx_depacketizer_sr[159:0]};
	end
	benchsoc_ethcore_ip_rx_depacketizer_was_in_copy <= benchsoc_ethcore_ip_rx_depacketizer_is_in_copy;
	liteethip_liteethiprx_fsm0_state <= liteethip_liteethiprx_fsm0_next_state;
	if (benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value_ce2) begin
		benchsoc_ethcore_ip_rx_depacketizer_count <= benchsoc_ethcore_ip_rx_depacketizer_count_liteethip_fsm0_next_value2;
	end
	if (benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value_ce3) begin
		benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle <= benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle_liteethip_fsm0_next_value3;
	end
	liteethip_liteethiprx_fsm1_state <= liteethip_liteethiprx_fsm1_next_state;
	if (benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value_ce1) begin
		benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be <= benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be_liteethip_fsm1_next_value1;
	end
	if (benchsoc_ethcore_ip_rx_ce) begin
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next0 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum0, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next0[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next0[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next1 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum1, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next1[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next1[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next2 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum2, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next2[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next2[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next3 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum3, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next3[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next3[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next4 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum4, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next4[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next4[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next5 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum5, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next5[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next5[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next6 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum6, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next6[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next6[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next7 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum7, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next7[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next7[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next8 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum8, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next8[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next8[16])};
		end
		if ((~benchsoc_ethcore_ip_rx_liteethipv4checksum_done)) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_r_next9 <= {benchsoc_ethcore_ip_rx_liteethipv4checksum9, (benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next9[15:0] + benchsoc_ethcore_ip_rx_liteethipv4checksum_s_next9[16])};
		end
		if (benchsoc_ethcore_ip_rx_liteethipv4checksum_counter_ce) begin
			benchsoc_ethcore_ip_rx_liteethipv4checksum_counter <= (benchsoc_ethcore_ip_rx_liteethipv4checksum_counter + 1'd1);
		end
	end
	if (benchsoc_ethcore_ip_rx_reset) begin
		benchsoc_ethcore_ip_rx_liteethipv4checksum_counter <= 4'd0;
	end
	liteethip_liteethiprx_state <= liteethip_liteethiprx_next_state;
	case (liteethip_grant)
		1'd0: begin
			if ((~liteethip_request[0])) begin
				if (liteethip_request[1]) begin
					liteethip_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~liteethip_request[1])) begin
				if (liteethip_request[0]) begin
					liteethip_grant <= 1'd0;
				end
			end
		end
	endcase
	liteethip_status0_ongoing1 <= ((benchsoc_ethcore_icmp_sink_valid | liteethip_status0_ongoing1) & (~liteethip_status0_last));
	if (liteethip_status0_last) begin
		liteethip_status0_first <= 1'd1;
	end else begin
		if ((benchsoc_ethcore_icmp_sink_valid & benchsoc_ethcore_icmp_sink_ready)) begin
			liteethip_status0_first <= 1'd0;
		end
	end
	liteethip_status1_ongoing1 <= ((benchsoc_ethcore_ip_port_sink_valid | liteethip_status1_ongoing1) & (~liteethip_status1_last));
	if (liteethip_status1_last) begin
		liteethip_status1_first <= 1'd1;
	end else begin
		if ((benchsoc_ethcore_ip_port_sink_valid & benchsoc_ethcore_ip_port_sink_ready)) begin
			liteethip_status1_first <= 1'd0;
		end
	end
	if (liteethip_first) begin
		liteethip_sel_ongoing <= liteethip_sel0;
	end
	liteethip_ongoing1 <= ((benchsoc_ethcore_ip_crossbar_sink_valid | liteethip_ongoing1) & (~liteethip_last));
	if (liteethip_last) begin
		liteethip_first <= 1'd1;
	end else begin
		if ((benchsoc_ethcore_ip_crossbar_sink_valid & benchsoc_ethcore_ip_crossbar_sink_ready)) begin
			liteethip_first <= 1'd0;
		end
	end
	if (benchsoc_ethcore_icmp_tx_packetizer_sr_load) begin
		benchsoc_ethcore_icmp_tx_packetizer_sr <= benchsoc_ethcore_icmp_tx_packetizer_header;
	end
	if (benchsoc_ethcore_icmp_tx_packetizer_sr_shift) begin
		benchsoc_ethcore_icmp_tx_packetizer_sr <= benchsoc_ethcore_icmp_tx_packetizer_sr[63:8];
	end
	liteethicmptx_fsm0_state <= liteethicmptx_fsm0_next_state;
	if (benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value_ce0) begin
		benchsoc_ethcore_icmp_tx_packetizer_count <= benchsoc_ethcore_icmp_tx_packetizer_count_fsm0_next_value0;
	end
	if (benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value_ce1) begin
		benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle <= benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle_fsm0_next_value1;
	end
	liteethicmptx_fsm1_state <= liteethicmptx_fsm1_next_state;
	if (benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value_ce0) begin
		benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be <= benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be_fsm1_next_value0;
	end
	liteethicmptx_state <= liteethicmptx_next_state;
	if (benchsoc_ethcore_icmp_rx_depacketizer_sr_shift) begin
		benchsoc_ethcore_icmp_rx_depacketizer_sr <= {benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_data, benchsoc_ethcore_icmp_rx_depacketizer_sr[63:8]};
	end
	if (benchsoc_ethcore_icmp_rx_depacketizer_sr_shift_leftover) begin
		benchsoc_ethcore_icmp_rx_depacketizer_sr <= {benchsoc_ethcore_icmp_rx_depacketizer_sink_payload_data, benchsoc_ethcore_icmp_rx_depacketizer_sr[63:0]};
	end
	benchsoc_ethcore_icmp_rx_depacketizer_was_in_copy <= benchsoc_ethcore_icmp_rx_depacketizer_is_in_copy;
	liteethicmprx_fsm0_state <= liteethicmprx_fsm0_next_state;
	if (benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value_ce2) begin
		benchsoc_ethcore_icmp_rx_depacketizer_count <= benchsoc_ethcore_icmp_rx_depacketizer_count_fsm0_next_value2;
	end
	if (benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce3) begin
		benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle <= benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle_fsm0_next_value3;
	end
	liteethicmprx_fsm1_state <= liteethicmprx_fsm1_next_state;
	if (benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value_ce1) begin
		benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be <= benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be_fsm1_next_value1;
	end
	liteethicmprx_state <= liteethicmprx_next_state;
	if (benchsoc_ethcore_icmp_echo_buffer_syncfifo_re) begin
		benchsoc_ethcore_icmp_echo_buffer_readable <= 1'd1;
	end else begin
		if (benchsoc_ethcore_icmp_echo_buffer_re) begin
			benchsoc_ethcore_icmp_echo_buffer_readable <= 1'd0;
		end
	end
	if (((benchsoc_ethcore_icmp_echo_buffer_syncfifo_we & benchsoc_ethcore_icmp_echo_buffer_syncfifo_writable) & (~benchsoc_ethcore_icmp_echo_buffer_replace))) begin
		benchsoc_ethcore_icmp_echo_buffer_produce <= (benchsoc_ethcore_icmp_echo_buffer_produce + 1'd1);
	end
	if (benchsoc_ethcore_icmp_echo_buffer_do_read) begin
		benchsoc_ethcore_icmp_echo_buffer_consume <= (benchsoc_ethcore_icmp_echo_buffer_consume + 1'd1);
	end
	if (((benchsoc_ethcore_icmp_echo_buffer_syncfifo_we & benchsoc_ethcore_icmp_echo_buffer_syncfifo_writable) & (~benchsoc_ethcore_icmp_echo_buffer_replace))) begin
		if ((~benchsoc_ethcore_icmp_echo_buffer_do_read)) begin
			benchsoc_ethcore_icmp_echo_buffer_level0 <= (benchsoc_ethcore_icmp_echo_buffer_level0 + 1'd1);
		end
	end else begin
		if (benchsoc_ethcore_icmp_echo_buffer_do_read) begin
			benchsoc_ethcore_icmp_echo_buffer_level0 <= (benchsoc_ethcore_icmp_echo_buffer_level0 - 1'd1);
		end
	end
	if (benchsoc_ethcore_tx_packetizer_sr_load) begin
		benchsoc_ethcore_tx_packetizer_sr <= benchsoc_ethcore_tx_packetizer_header;
	end
	if (benchsoc_ethcore_tx_packetizer_sr_shift) begin
		benchsoc_ethcore_tx_packetizer_sr <= benchsoc_ethcore_tx_packetizer_sr[63:8];
	end
	liteethudp_liteethudptx_fsm0_state <= liteethudp_liteethudptx_fsm0_next_state;
	if (benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value_ce0) begin
		benchsoc_ethcore_tx_packetizer_count <= benchsoc_ethcore_tx_packetizer_count_liteethudp_fsm0_next_value0;
	end
	if (benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value_ce1) begin
		benchsoc_ethcore_tx_packetizer_fsm_from_idle <= benchsoc_ethcore_tx_packetizer_fsm_from_idle_liteethudp_fsm0_next_value1;
	end
	liteethudp_liteethudptx_fsm1_state <= liteethudp_liteethudptx_fsm1_next_state;
	if (benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value_ce0) begin
		benchsoc_ethcore_tx_packetizer_delayed_last_be <= benchsoc_ethcore_tx_packetizer_delayed_last_be_liteethudp_fsm1_next_value0;
	end
	liteethudp_liteethudptx_state <= liteethudp_liteethudptx_next_state;
	if (benchsoc_ethcore_rx_depacketizer_sr_shift) begin
		benchsoc_ethcore_rx_depacketizer_sr <= {benchsoc_ethcore_rx_depacketizer_sink_payload_data, benchsoc_ethcore_rx_depacketizer_sr[63:8]};
	end
	if (benchsoc_ethcore_rx_depacketizer_sr_shift_leftover) begin
		benchsoc_ethcore_rx_depacketizer_sr <= {benchsoc_ethcore_rx_depacketizer_sink_payload_data, benchsoc_ethcore_rx_depacketizer_sr[63:0]};
	end
	benchsoc_ethcore_rx_depacketizer_was_in_copy <= benchsoc_ethcore_rx_depacketizer_is_in_copy;
	liteethudp_liteethudprx_fsm0_state <= liteethudp_liteethudprx_fsm0_next_state;
	if (benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value_ce2) begin
		benchsoc_ethcore_rx_depacketizer_count <= benchsoc_ethcore_rx_depacketizer_count_liteethudp_fsm0_next_value2;
	end
	if (benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value_ce3) begin
		benchsoc_ethcore_rx_depacketizer_fsm_from_idle <= benchsoc_ethcore_rx_depacketizer_fsm_from_idle_liteethudp_fsm0_next_value3;
	end
	liteethudp_liteethudprx_fsm1_state <= liteethudp_liteethudprx_fsm1_next_state;
	if (benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value_ce1) begin
		benchsoc_ethcore_rx_depacketizer_delayed_last_be <= benchsoc_ethcore_rx_depacketizer_delayed_last_be_liteethudp_fsm1_next_value1;
	end
	liteethudp_liteethudprx_state <= liteethudp_liteethudprx_next_state;
	if (benchsoc_ethcore_rx_count_liteethudp_next_value_ce) begin
		benchsoc_ethcore_rx_count <= benchsoc_ethcore_rx_count_liteethudp_next_value;
	end
	benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_binary <= benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next_binary;
	benchsoc_etherbone_tx_cdc_cdc_graycounter1_q <= benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_next;
	if ((benchsoc_etherbone_tx_converter_converter_source_valid & benchsoc_etherbone_tx_converter_converter_source_ready)) begin
		if (benchsoc_etherbone_tx_converter_converter_last) begin
			benchsoc_etherbone_tx_converter_converter_mux <= 1'd0;
		end else begin
			benchsoc_etherbone_tx_converter_converter_mux <= (benchsoc_etherbone_tx_converter_converter_mux + 1'd1);
		end
	end
	benchsoc_etherbone_rx_converter_source_param_src_port <= benchsoc_etherbone_rx_converter_sink_param_src_port;
	benchsoc_etherbone_rx_converter_source_param_dst_port <= benchsoc_etherbone_rx_converter_sink_param_dst_port;
	benchsoc_etherbone_rx_converter_source_param_ip_address <= benchsoc_etherbone_rx_converter_sink_param_ip_address;
	benchsoc_etherbone_rx_converter_source_param_length <= benchsoc_etherbone_rx_converter_sink_param_length;
	if (benchsoc_etherbone_rx_converter_converter_source_ready) begin
		benchsoc_etherbone_rx_converter_converter_strobe_all <= 1'd0;
	end
	if (benchsoc_etherbone_rx_converter_converter_load_part) begin
		if (((benchsoc_etherbone_rx_converter_converter_demux == 2'd3) | benchsoc_etherbone_rx_converter_converter_sink_last)) begin
			benchsoc_etherbone_rx_converter_converter_demux <= 1'd0;
			benchsoc_etherbone_rx_converter_converter_strobe_all <= 1'd1;
		end else begin
			benchsoc_etherbone_rx_converter_converter_demux <= (benchsoc_etherbone_rx_converter_converter_demux + 1'd1);
		end
	end
	if ((benchsoc_etherbone_rx_converter_converter_source_valid & benchsoc_etherbone_rx_converter_converter_source_ready)) begin
		if ((benchsoc_etherbone_rx_converter_converter_sink_valid & benchsoc_etherbone_rx_converter_converter_sink_ready)) begin
			benchsoc_etherbone_rx_converter_converter_source_first <= benchsoc_etherbone_rx_converter_converter_sink_first;
			benchsoc_etherbone_rx_converter_converter_source_last <= benchsoc_etherbone_rx_converter_converter_sink_last;
		end else begin
			benchsoc_etherbone_rx_converter_converter_source_first <= 1'd0;
			benchsoc_etherbone_rx_converter_converter_source_last <= 1'd0;
		end
	end else begin
		if ((benchsoc_etherbone_rx_converter_converter_sink_valid & benchsoc_etherbone_rx_converter_converter_sink_ready)) begin
			benchsoc_etherbone_rx_converter_converter_source_first <= (benchsoc_etherbone_rx_converter_converter_sink_first | benchsoc_etherbone_rx_converter_converter_source_first);
			benchsoc_etherbone_rx_converter_converter_source_last <= (benchsoc_etherbone_rx_converter_converter_sink_last | benchsoc_etherbone_rx_converter_converter_source_last);
		end
	end
	if (benchsoc_etherbone_rx_converter_converter_load_part) begin
		case (benchsoc_etherbone_rx_converter_converter_demux)
			1'd0: begin
				benchsoc_etherbone_rx_converter_converter_source_payload_data[9:0] <= benchsoc_etherbone_rx_converter_converter_sink_payload_data;
			end
			1'd1: begin
				benchsoc_etherbone_rx_converter_converter_source_payload_data[19:10] <= benchsoc_etherbone_rx_converter_converter_sink_payload_data;
			end
			2'd2: begin
				benchsoc_etherbone_rx_converter_converter_source_payload_data[29:20] <= benchsoc_etherbone_rx_converter_converter_sink_payload_data;
			end
			2'd3: begin
				benchsoc_etherbone_rx_converter_converter_source_payload_data[39:30] <= benchsoc_etherbone_rx_converter_converter_sink_payload_data;
			end
		endcase
	end
	if (benchsoc_etherbone_rx_converter_converter_load_part) begin
		benchsoc_etherbone_rx_converter_converter_source_payload_valid_token_count <= (benchsoc_etherbone_rx_converter_converter_demux + 1'd1);
	end
	benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_binary <= benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next_binary;
	benchsoc_etherbone_rx_cdc_cdc_graycounter0_q <= benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_next;
	if (eth_rx_rst) begin
		ethphy_source_valid <= 1'd0;
		ethphy_source_payload_data <= 8'd0;
		ethphy_link_status <= 1'd0;
		ethphy_clock_speed <= 1'd0;
		ethphy_duplex_status <= 1'd0;
		ethphy_rx_ctl_reg <= 2'd0;
		ethphy_rx_data_reg <= 8'd0;
		ethphy_rx_ctl_reg_d <= 2'd0;
		benchsoc_ethcore_mac_core_cdc_graycounter0_q <= 6'd0;
		benchsoc_ethcore_mac_core_cdc_graycounter0_q_binary <= 6'd0;
		benchsoc_ethcore_mac_core_preamble_errors_status <= 32'd0;
		benchsoc_ethcore_mac_core_crc_errors_status <= 32'd0;
		benchsoc_ethcore_mac_core_rx_crc_crc_reg <= 32'd4294967295;
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_level <= 3'd0;
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_produce <= 3'd0;
		benchsoc_ethcore_mac_core_rx_crc_syncfifo_consume <= 3'd0;
		benchsoc_ethcore_mac_core_rx_crc_last_be <= 1'd0;
		benchsoc_ethcore_mac_core_rx_crc_crc_error1 <= 1'd0;
		benchsoc_ethcore_mac_core_rx_crc_source_valid <= 1'd0;
		benchsoc_ethcore_mac_core_rx_crc_source_payload_data <= 8'd0;
		benchsoc_ethcore_mac_core_rx_crc_source_payload_last_be <= 1'd0;
		benchsoc_ethcore_mac_core_rx_crc_source_payload_error <= 1'd0;
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q <= 6'd0;
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q_binary <= 6'd0;
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q <= 6'd0;
		benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q_binary <= 6'd0;
		benchsoc_ethcore_mac_packetizer_count <= 4'd0;
		benchsoc_ethcore_mac_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_mac_packetizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_mac_depacketizer_count <= 4'd0;
		benchsoc_ethcore_mac_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_mac_depacketizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_mac_depacketizer_was_in_copy <= 1'd0;
		benchsoc_ethcore_arp_tx_packetizer_count <= 5'd0;
		benchsoc_ethcore_arp_tx_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_arp_tx_packetizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_arp_rx_depacketizer_count <= 5'd0;
		benchsoc_ethcore_arp_rx_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_arp_rx_depacketizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_arp_rx_depacketizer_was_in_copy <= 1'd0;
		benchsoc_ethcore_arp_table_request_pending <= 1'd0;
		benchsoc_ethcore_arp_table_request_timer_count <= 23'd5000000;
		benchsoc_ethcore_arp_table_request_counter <= 3'd0;
		benchsoc_ethcore_arp_table_cached_valid <= 1'd0;
		benchsoc_ethcore_arp_table_cached_timer_count <= 29'd500000000;
		benchsoc_ethcore_ip_tx_liteethipv4checksum_counter <= 4'd0;
		benchsoc_ethcore_ip_tx_packetizer_count <= 5'd0;
		benchsoc_ethcore_ip_tx_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_ip_tx_packetizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_ip_rx_depacketizer_count <= 5'd0;
		benchsoc_ethcore_ip_rx_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_ip_rx_depacketizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_ip_rx_depacketizer_was_in_copy <= 1'd0;
		benchsoc_ethcore_ip_rx_liteethipv4checksum_counter <= 4'd0;
		benchsoc_ethcore_icmp_tx_packetizer_count <= 3'd0;
		benchsoc_ethcore_icmp_tx_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_icmp_tx_packetizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_icmp_rx_depacketizer_count <= 3'd0;
		benchsoc_ethcore_icmp_rx_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_icmp_rx_depacketizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_icmp_rx_depacketizer_was_in_copy <= 1'd0;
		benchsoc_ethcore_icmp_echo_buffer_readable <= 1'd0;
		benchsoc_ethcore_icmp_echo_buffer_level0 <= 8'd0;
		benchsoc_ethcore_icmp_echo_buffer_produce <= 7'd0;
		benchsoc_ethcore_icmp_echo_buffer_consume <= 7'd0;
		benchsoc_ethcore_tx_packetizer_count <= 3'd0;
		benchsoc_ethcore_tx_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_tx_packetizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_rx_depacketizer_count <= 3'd0;
		benchsoc_ethcore_rx_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_ethcore_rx_depacketizer_delayed_last_be <= 1'd0;
		benchsoc_ethcore_rx_depacketizer_was_in_copy <= 1'd0;
		benchsoc_ethcore_rx_count <= 16'd0;
		benchsoc_etherbone_tx_cdc_cdc_graycounter1_q <= 3'd0;
		benchsoc_etherbone_tx_cdc_cdc_graycounter1_q_binary <= 3'd0;
		benchsoc_etherbone_tx_converter_converter_mux <= 2'd0;
		benchsoc_etherbone_rx_converter_converter_source_payload_data <= 40'd0;
		benchsoc_etherbone_rx_converter_converter_source_payload_valid_token_count <= 3'd0;
		benchsoc_etherbone_rx_converter_converter_demux <= 2'd0;
		benchsoc_etherbone_rx_converter_converter_strobe_all <= 1'd0;
		benchsoc_etherbone_rx_cdc_cdc_graycounter0_q <= 3'd0;
		benchsoc_etherbone_rx_cdc_cdc_graycounter0_q_binary <= 3'd0;
		liteethmac_rxdatapath_liteethmacpreamblechecker_state <= 1'd0;
		liteethmac_rxdatapath_bufferizeendpoints_state <= 2'd0;
		liteethmac_grant <= 1'd0;
		liteethmac_status0_first <= 1'd1;
		liteethmac_status0_ongoing1 <= 1'd0;
		liteethmac_status1_first <= 1'd1;
		liteethmac_status1_ongoing1 <= 1'd0;
		liteethmac_first <= 1'd1;
		liteethmac_ongoing1 <= 1'd0;
		liteethmac_sel_ongoing <= 2'd0;
		liteethmac_fsm0_state0 <= 2'd0;
		liteethmac_fsm1_state0 <= 1'd0;
		liteethmac_fsm0_state1 <= 2'd0;
		liteethmac_fsm1_state1 <= 1'd0;
		liteetharptx_fsm0_state <= 2'd0;
		liteetharptx_fsm1_state <= 1'd0;
		liteetharptx_state <= 1'd0;
		liteetharprx_fsm0_state <= 2'd0;
		liteetharprx_fsm1_state <= 1'd0;
		liteetharprx_state <= 2'd0;
		liteetharptable_state <= 3'd0;
		liteethip_liteethiptx_fsm0_state <= 2'd0;
		liteethip_liteethiptx_fsm1_state <= 1'd0;
		liteethip_liteethiptx_state <= 3'd0;
		liteethip_liteethiprx_fsm0_state <= 2'd0;
		liteethip_liteethiprx_fsm1_state <= 1'd0;
		liteethip_liteethiprx_state <= 2'd0;
		liteethip_grant <= 1'd0;
		liteethip_status0_first <= 1'd1;
		liteethip_status0_ongoing1 <= 1'd0;
		liteethip_status1_first <= 1'd1;
		liteethip_status1_ongoing1 <= 1'd0;
		liteethip_first <= 1'd1;
		liteethip_ongoing1 <= 1'd0;
		liteethip_sel_ongoing <= 2'd0;
		liteethicmptx_fsm0_state <= 2'd0;
		liteethicmptx_fsm1_state <= 1'd0;
		liteethicmptx_state <= 1'd0;
		liteethicmprx_fsm0_state <= 2'd0;
		liteethicmprx_fsm1_state <= 1'd0;
		liteethicmprx_state <= 2'd0;
		liteethudp_liteethudptx_fsm0_state <= 2'd0;
		liteethudp_liteethudptx_fsm1_state <= 1'd0;
		liteethudp_liteethudptx_state <= 1'd0;
		liteethudp_liteethudprx_fsm0_state <= 2'd0;
		liteethudp_liteethudprx_fsm1_state <= 1'd0;
		liteethudp_liteethudprx_state <= 2'd0;
	end
	multiregimpl2_regs0 <= benchsoc_ethcore_mac_core_cdc_graycounter1_q;
	multiregimpl2_regs1 <= multiregimpl2_regs0;
	multiregimpl3_regs0 <= benchsoc_ethcore_mac_core_pulsesynchronizer0_toggle_i;
	multiregimpl3_regs1 <= multiregimpl3_regs0;
	multiregimpl4_regs0 <= benchsoc_ethcore_mac_core_pulsesynchronizer1_toggle_i;
	multiregimpl4_regs1 <= multiregimpl4_regs0;
	multiregimpl5_regs0 <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter0_q;
	multiregimpl5_regs1 <= multiregimpl5_regs0;
	multiregimpl6_regs0 <= benchsoc_ethcore_mac_core_rx_cdc_cdc_graycounter1_q;
	multiregimpl6_regs1 <= multiregimpl6_regs0;
	multiregimpl7_regs0 <= benchsoc_etherbone_tx_cdc_cdc_graycounter0_q;
	multiregimpl7_regs1 <= multiregimpl7_regs0;
	multiregimpl10_regs0 <= benchsoc_etherbone_rx_cdc_cdc_graycounter1_q;
	multiregimpl10_regs1 <= multiregimpl10_regs0;
end

always @(posedge eth_tx_clk) begin
	benchsoc_ethcore_mac_core_cdc_graycounter1_q_binary <= benchsoc_ethcore_mac_core_cdc_graycounter1_q_next_binary;
	benchsoc_ethcore_mac_core_cdc_graycounter1_q <= benchsoc_ethcore_mac_core_cdc_graycounter1_q_next;
	liteethmac_txdatapath_liteethmacpaddinginserter_state <= liteethmac_txdatapath_liteethmacpaddinginserter_next_state;
	if (benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value_ce) begin
		benchsoc_ethcore_mac_core_tx_padding_counter <= benchsoc_ethcore_mac_core_tx_padding_counter_liteethmac_clockdomainsrenamer0_next_value;
	end
	if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing0) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt <= 2'd3;
	end else begin
		if ((benchsoc_ethcore_mac_core_liteethmaccrc32inserter_is_ongoing1 & (~benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt_done))) begin
			benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt <= (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt - benchsoc_ethcore_mac_core_liteethmaccrc32inserter_source_ready);
		end
	end
	if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_ce) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reg <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_next;
	end
	if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reset) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reg <= 32'd4294967295;
	end
	liteethmac_txdatapath_bufferizeendpoints_state <= liteethmac_txdatapath_bufferizeendpoints_next_state;
	if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value_ce0) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet_liteethmac_clockdomainsrenamer1_next_value0;
	end
	if (benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value_ce1) begin
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2 <= benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2_liteethmac_clockdomainsrenamer1_next_value1;
	end
	if (((~benchsoc_ethcore_mac_core_bufferizeendpoints_source_valid) | benchsoc_ethcore_mac_core_bufferizeendpoints_source_ready)) begin
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_valid <= benchsoc_ethcore_mac_core_bufferizeendpoints_sink_valid;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_first <= benchsoc_ethcore_mac_core_bufferizeendpoints_sink_first;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_last <= benchsoc_ethcore_mac_core_bufferizeendpoints_sink_last;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_data <= benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_data;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_last_be <= benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_last_be;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_error <= benchsoc_ethcore_mac_core_bufferizeendpoints_sink_payload_error;
	end
	liteethmac_txdatapath_liteethmacpreambleinserter_state <= liteethmac_txdatapath_liteethmacpreambleinserter_next_state;
	if (benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value_ce) begin
		benchsoc_ethcore_mac_core_tx_preamble_count <= benchsoc_ethcore_mac_core_tx_preamble_count_liteethmac_clockdomainsrenamer2_next_value;
	end
	liteethmac_txdatapath_liteethmacgap_state <= liteethmac_txdatapath_liteethmacgap_next_state;
	if (benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value_ce) begin
		benchsoc_ethcore_mac_core_tx_gap_counter <= benchsoc_ethcore_mac_core_tx_gap_counter_liteethmac_clockdomainsrenamer3_next_value;
	end
	if (eth_tx_rst) begin
		benchsoc_ethcore_mac_core_cdc_graycounter1_q <= 6'd0;
		benchsoc_ethcore_mac_core_cdc_graycounter1_q_binary <= 6'd0;
		benchsoc_ethcore_mac_core_tx_padding_counter <= 16'd0;
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_reg <= 32'd4294967295;
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_crc_packet <= 32'd0;
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_last_be2 <= 1'd0;
		benchsoc_ethcore_mac_core_liteethmaccrc32inserter_cnt <= 2'd3;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_valid <= 1'd0;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_data <= 8'd0;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_last_be <= 1'd0;
		benchsoc_ethcore_mac_core_bufferizeendpoints_source_payload_error <= 1'd0;
		liteethmac_txdatapath_liteethmacpaddinginserter_state <= 1'd0;
		liteethmac_txdatapath_bufferizeendpoints_state <= 2'd0;
		liteethmac_txdatapath_liteethmacpreambleinserter_state <= 2'd0;
		liteethmac_txdatapath_liteethmacgap_state <= 1'd0;
	end
	multiregimpl1_regs0 <= benchsoc_ethcore_mac_core_cdc_graycounter0_q;
	multiregimpl1_regs1 <= multiregimpl1_regs0;
end

always @(posedge etherbone_clk) begin
	benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_binary <= benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next_binary;
	benchsoc_etherbone_tx_cdc_cdc_graycounter0_q <= benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_next;
	benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_binary <= benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next_binary;
	benchsoc_etherbone_rx_cdc_cdc_graycounter1_q <= benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_next;
	if (etherbone_rst) begin
		benchsoc_etherbone_tx_cdc_cdc_graycounter0_q <= 3'd0;
		benchsoc_etherbone_tx_cdc_cdc_graycounter0_q_binary <= 3'd0;
		benchsoc_etherbone_rx_cdc_cdc_graycounter1_q <= 3'd0;
		benchsoc_etherbone_rx_cdc_cdc_graycounter1_q_binary <= 3'd0;
	end
	multiregimpl8_regs0 <= benchsoc_etherbone_tx_cdc_cdc_graycounter1_q;
	multiregimpl8_regs1 <= multiregimpl8_regs0;
	multiregimpl9_regs0 <= benchsoc_etherbone_rx_cdc_cdc_graycounter0_q;
	multiregimpl9_regs1 <= multiregimpl9_regs0;
end

always @(posedge sys_clk) begin
	gpios_in_status <= {gpio_in10, gpio_in9, gpio_in8, gpio_in7, gpio_in6, gpio_in5, gpio_in4, gpio_in3, gpio_in2, gpio_in1, gpio_in0};
	gpios_in_we <= 1'd1;
	position1_status <= stepgen1_position;
	position1_we <= 1'd1;
	position2_status <= stepgen2_position;
	position2_we <= 1'd1;
	position3_status <= stepgen3_position;
	position3_we <= 1'd1;
	position4_status <= stepgen4_position;
	position4_we <= 1'd1;
	position5_status <= stepgen5_position;
	position5_we <= 1'd1;
	position6_status <= stepgen6_position;
	position6_we <= 1'd1;
	encoder_position1_status <= encoder1_out;
	encoder_position1_we <= 1'd1;
	encoder_position2_status <= encoder2_out;
	encoder_position2_we <= 1'd1;
	encoder_position3_status <= encoder3_out;
	encoder_position3_we <= 1'd1;
	encoder_position4_status <= encoder4_out;
	encoder_position4_we <= 1'd1;
	stepgen1_enable <= stepgens_ctrlword_storage[0];
	stepgen1_reset <= stepgens_ctrlword_storage[1];
	stepgen1_inverse_step <= stepgens_ctrlword_storage[10];
	stepgen1_inverse_dir <= stepgens_ctrlword_storage[11];
	stepgen2_enable <= stepgens_ctrlword_storage[0];
	stepgen2_reset <= stepgens_ctrlword_storage[1];
	stepgen2_inverse_step <= stepgens_ctrlword_storage[12];
	stepgen2_inverse_dir <= stepgens_ctrlword_storage[13];
	stepgen3_enable <= stepgens_ctrlword_storage[0];
	stepgen3_reset <= stepgens_ctrlword_storage[1];
	stepgen3_inverse_step <= stepgens_ctrlword_storage[14];
	stepgen3_inverse_dir <= stepgens_ctrlword_storage[15];
	stepgen4_enable <= stepgens_ctrlword_storage[0];
	stepgen4_reset <= stepgens_ctrlword_storage[1];
	stepgen4_inverse_step <= stepgens_ctrlword_storage[16];
	stepgen4_inverse_dir <= stepgens_ctrlword_storage[17];
	stepgen5_enable <= stepgens_ctrlword_storage[0];
	stepgen5_reset <= stepgens_ctrlword_storage[1];
	stepgen5_inverse_step <= stepgens_ctrlword_storage[18];
	stepgen5_inverse_dir <= stepgens_ctrlword_storage[19];
	stepgen6_enable <= stepgens_ctrlword_storage[0];
	stepgen6_reset <= stepgens_ctrlword_storage[1];
	stepgen6_inverse_step <= stepgens_ctrlword_storage[20];
	stepgen6_inverse_dir <= stepgens_ctrlword_storage[21];
	stepgen1_dirtime <= dirtime_storage;
	stepgen1_steptime <= steptime_storage;
	stepgen2_dirtime <= dirtime_storage;
	stepgen2_steptime <= steptime_storage;
	stepgen3_dirtime <= dirtime_storage;
	stepgen3_steptime <= steptime_storage;
	stepgen4_dirtime <= dirtime_storage;
	stepgen4_steptime <= steptime_storage;
	stepgen5_dirtime <= dirtime_storage;
	stepgen5_steptime <= steptime_storage;
	stepgen6_dirtime <= dirtime_storage;
	stepgen6_steptime <= steptime_storage;
	wallclock_status <= (wallclock_status + 1'd1);
	en_out <= stepgens_ctrlword_storage[0];
	if (stepgens_ctrlword_storage[2]) begin
		if ((wallclock_status >= apply_time_storage)) begin
			apply_time_dat_w <= 1'd0;
			apply_time_we <= 1'd1;
			stepgen1_velocity <= velocity1_storage;
			stepgen2_velocity <= velocity2_storage;
			stepgen3_velocity <= velocity3_storage;
			stepgen4_velocity <= velocity4_storage;
			stepgen5_velocity <= velocity5_storage;
			stepgen6_velocity <= velocity6_storage;
		end else begin
			apply_time_we <= 1'd0;
		end
	end else begin
		stepgen1_velocity <= velocity1_storage;
		stepgen2_velocity <= velocity2_storage;
		stepgen3_velocity <= velocity3_storage;
		stepgen4_velocity <= velocity4_storage;
		stepgen5_velocity <= velocity5_storage;
		stepgen6_velocity <= velocity6_storage;
	end
	gpio_out0 <= gpios_out_storage[0];
	gpio_out1 <= gpios_out_storage[1];
	gpio_out2 <= gpios_out_storage[2];
	gpio_out3 <= gpios_out_storage[3];
	gpio_out4 <= gpios_out_storage[4];
	gpio_out5 <= gpios_out_storage[5];
	gpio_out6 <= gpios_out_storage[6];
	gpio_out7 <= gpios_out_storage[7];
	gpio_out8 <= gpios_out_storage[8];
	gpio_out9 <= gpios_out_storage[9];
	gpio_out10 <= gpios_out_storage[10];
	pwm0_width <= pwm_out0_width_storage;
	pwm0_period <= pwm_out0_period_storage;
	pwm1_width <= pwm_out1_width_storage;
	pwm1_period <= pwm_out1_period_storage;
	pwm2_width <= pwm_out2_width_storage;
	pwm2_period <= pwm_out2_period_storage;
	if ((benchsoc_bus_errors != 32'd4294967295)) begin
		if (benchsoc_bus_error) begin
			benchsoc_bus_errors <= (benchsoc_bus_errors + 1'd1);
		end
	end
	if (benchsoc_uartcrossover_tx_clear) begin
		benchsoc_uartcrossover_tx_pending <= 1'd0;
	end
	benchsoc_uartcrossover_tx_trigger_d <= benchsoc_uartcrossover_tx_trigger;
	if ((benchsoc_uartcrossover_tx_trigger & (~benchsoc_uartcrossover_tx_trigger_d))) begin
		benchsoc_uartcrossover_tx_pending <= 1'd1;
	end
	if (benchsoc_uartcrossover_rx_clear) begin
		benchsoc_uartcrossover_rx_pending <= 1'd0;
	end
	benchsoc_uartcrossover_rx_trigger_d <= benchsoc_uartcrossover_rx_trigger;
	if ((benchsoc_uartcrossover_rx_trigger & (~benchsoc_uartcrossover_rx_trigger_d))) begin
		benchsoc_uartcrossover_rx_pending <= 1'd1;
	end
	if (benchsoc_uartcrossover_tx_fifo_syncfifo_re) begin
		benchsoc_uartcrossover_tx_fifo_readable <= 1'd1;
	end else begin
		if (benchsoc_uartcrossover_tx_fifo_re) begin
			benchsoc_uartcrossover_tx_fifo_readable <= 1'd0;
		end
	end
	if (((benchsoc_uartcrossover_tx_fifo_syncfifo_we & benchsoc_uartcrossover_tx_fifo_syncfifo_writable) & (~benchsoc_uartcrossover_tx_fifo_replace))) begin
		benchsoc_uartcrossover_tx_fifo_produce <= (benchsoc_uartcrossover_tx_fifo_produce + 1'd1);
	end
	if (benchsoc_uartcrossover_tx_fifo_do_read) begin
		benchsoc_uartcrossover_tx_fifo_consume <= (benchsoc_uartcrossover_tx_fifo_consume + 1'd1);
	end
	if (((benchsoc_uartcrossover_tx_fifo_syncfifo_we & benchsoc_uartcrossover_tx_fifo_syncfifo_writable) & (~benchsoc_uartcrossover_tx_fifo_replace))) begin
		if ((~benchsoc_uartcrossover_tx_fifo_do_read)) begin
			benchsoc_uartcrossover_tx_fifo_level0 <= (benchsoc_uartcrossover_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (benchsoc_uartcrossover_tx_fifo_do_read) begin
			benchsoc_uartcrossover_tx_fifo_level0 <= (benchsoc_uartcrossover_tx_fifo_level0 - 1'd1);
		end
	end
	if (benchsoc_uartcrossover_rx_fifo_syncfifo_re) begin
		benchsoc_uartcrossover_rx_fifo_readable <= 1'd1;
	end else begin
		if (benchsoc_uartcrossover_rx_fifo_re) begin
			benchsoc_uartcrossover_rx_fifo_readable <= 1'd0;
		end
	end
	if (((benchsoc_uartcrossover_rx_fifo_syncfifo_we & benchsoc_uartcrossover_rx_fifo_syncfifo_writable) & (~benchsoc_uartcrossover_rx_fifo_replace))) begin
		benchsoc_uartcrossover_rx_fifo_produce <= (benchsoc_uartcrossover_rx_fifo_produce + 1'd1);
	end
	if (benchsoc_uartcrossover_rx_fifo_do_read) begin
		benchsoc_uartcrossover_rx_fifo_consume <= (benchsoc_uartcrossover_rx_fifo_consume + 1'd1);
	end
	if (((benchsoc_uartcrossover_rx_fifo_syncfifo_we & benchsoc_uartcrossover_rx_fifo_syncfifo_writable) & (~benchsoc_uartcrossover_rx_fifo_replace))) begin
		if ((~benchsoc_uartcrossover_rx_fifo_do_read)) begin
			benchsoc_uartcrossover_rx_fifo_level0 <= (benchsoc_uartcrossover_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (benchsoc_uartcrossover_rx_fifo_do_read) begin
			benchsoc_uartcrossover_rx_fifo_level0 <= (benchsoc_uartcrossover_rx_fifo_level0 - 1'd1);
		end
	end
	if (benchsoc_xover_tx_clear) begin
		benchsoc_xover_tx_pending <= 1'd0;
	end
	benchsoc_xover_tx_trigger_d <= benchsoc_xover_tx_trigger;
	if ((benchsoc_xover_tx_trigger & (~benchsoc_xover_tx_trigger_d))) begin
		benchsoc_xover_tx_pending <= 1'd1;
	end
	if (benchsoc_xover_rx_clear) begin
		benchsoc_xover_rx_pending <= 1'd0;
	end
	benchsoc_xover_rx_trigger_d <= benchsoc_xover_rx_trigger;
	if ((benchsoc_xover_rx_trigger & (~benchsoc_xover_rx_trigger_d))) begin
		benchsoc_xover_rx_pending <= 1'd1;
	end
	if (((~benchsoc_xover_tx_fifo_source_valid) | benchsoc_xover_tx_fifo_source_ready)) begin
		benchsoc_xover_tx_fifo_source_valid <= benchsoc_xover_tx_fifo_sink_valid;
		benchsoc_xover_tx_fifo_source_first <= benchsoc_xover_tx_fifo_sink_first;
		benchsoc_xover_tx_fifo_source_last <= benchsoc_xover_tx_fifo_sink_last;
		benchsoc_xover_tx_fifo_source_payload_data <= benchsoc_xover_tx_fifo_sink_payload_data;
	end
	if (benchsoc_xover_rx_fifo_syncfifo_re) begin
		benchsoc_xover_rx_fifo_readable <= 1'd1;
	end else begin
		if (benchsoc_xover_rx_fifo_re) begin
			benchsoc_xover_rx_fifo_readable <= 1'd0;
		end
	end
	if (((benchsoc_xover_rx_fifo_syncfifo_we & benchsoc_xover_rx_fifo_syncfifo_writable) & (~benchsoc_xover_rx_fifo_replace))) begin
		benchsoc_xover_rx_fifo_produce <= (benchsoc_xover_rx_fifo_produce + 1'd1);
	end
	if (benchsoc_xover_rx_fifo_do_read) begin
		benchsoc_xover_rx_fifo_consume <= (benchsoc_xover_rx_fifo_consume + 1'd1);
	end
	if (((benchsoc_xover_rx_fifo_syncfifo_we & benchsoc_xover_rx_fifo_syncfifo_writable) & (~benchsoc_xover_rx_fifo_replace))) begin
		if ((~benchsoc_xover_rx_fifo_do_read)) begin
			benchsoc_xover_rx_fifo_level0 <= (benchsoc_xover_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (benchsoc_xover_rx_fifo_do_read) begin
			benchsoc_xover_rx_fifo_level0 <= (benchsoc_xover_rx_fifo_level0 - 1'd1);
		end
	end
	if (benchsoc_etherbone_tx_packetizer_sr_load) begin
		benchsoc_etherbone_tx_packetizer_sr <= benchsoc_etherbone_tx_packetizer_header;
	end
	if (benchsoc_etherbone_tx_packetizer_sr_shift) begin
		benchsoc_etherbone_tx_packetizer_sr <= benchsoc_etherbone_tx_packetizer_sr[63:32];
	end
	liteethetherbonepackettx_fsm0_state <= liteethetherbonepackettx_fsm0_next_state;
	if (benchsoc_etherbone_tx_packetizer_count_fsm0_next_value_ce4) begin
		benchsoc_etherbone_tx_packetizer_count <= benchsoc_etherbone_tx_packetizer_count_fsm0_next_value4;
	end
	if (benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value_ce5) begin
		benchsoc_etherbone_tx_packetizer_fsm_from_idle <= benchsoc_etherbone_tx_packetizer_fsm_from_idle_fsm0_next_value5;
	end
	liteethetherbonepackettx_fsm1_state <= liteethetherbonepackettx_fsm1_next_state;
	if (benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value_ce2) begin
		benchsoc_etherbone_tx_packetizer_delayed_last_be <= benchsoc_etherbone_tx_packetizer_delayed_last_be_fsm1_next_value2;
	end
	liteethetherbonepackettx_state <= liteethetherbonepackettx_next_state;
	if (benchsoc_etherbone_rx_depacketizer_sr_shift) begin
		benchsoc_etherbone_rx_depacketizer_sr <= {benchsoc_etherbone_rx_depacketizer_sink_payload_data, benchsoc_etherbone_rx_depacketizer_sr[63:32]};
	end
	if (benchsoc_etherbone_rx_depacketizer_sr_shift_leftover) begin
		benchsoc_etherbone_rx_depacketizer_sr <= {benchsoc_etherbone_rx_depacketizer_sink_payload_data, benchsoc_etherbone_rx_depacketizer_sr[63:0]};
	end
	benchsoc_etherbone_rx_depacketizer_was_in_copy <= benchsoc_etherbone_rx_depacketizer_is_in_copy;
	liteethetherbonepacketrx_fsm0_state <= liteethetherbonepacketrx_fsm0_next_state;
	if (benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value_ce6) begin
		benchsoc_etherbone_rx_depacketizer_count <= benchsoc_etherbone_rx_depacketizer_count_fsm0_next_value6;
	end
	if (benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value_ce7) begin
		benchsoc_etherbone_rx_depacketizer_fsm_from_idle <= benchsoc_etherbone_rx_depacketizer_fsm_from_idle_fsm0_next_value7;
	end
	liteethetherbonepacketrx_fsm1_state <= liteethetherbonepacketrx_fsm1_next_state;
	if (benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value_ce3) begin
		benchsoc_etherbone_rx_depacketizer_delayed_last_be <= benchsoc_etherbone_rx_depacketizer_delayed_last_be_fsm1_next_value3;
	end
	liteethetherbonepacketrx_state <= liteethetherbonepacketrx_next_state;
	if (((~benchsoc_etherbone_probe_payload_fifo_source_valid) | benchsoc_etherbone_probe_payload_fifo_source_ready)) begin
		benchsoc_etherbone_probe_payload_fifo_source_valid <= benchsoc_etherbone_probe_payload_fifo_sink_valid;
		benchsoc_etherbone_probe_payload_fifo_source_first <= benchsoc_etherbone_probe_payload_fifo_sink_first;
		benchsoc_etherbone_probe_payload_fifo_source_last <= benchsoc_etherbone_probe_payload_fifo_sink_last;
		benchsoc_etherbone_probe_payload_fifo_source_payload_data <= benchsoc_etherbone_probe_payload_fifo_sink_payload_data;
		benchsoc_etherbone_probe_payload_fifo_source_payload_last_be <= benchsoc_etherbone_probe_payload_fifo_sink_payload_last_be;
		benchsoc_etherbone_probe_payload_fifo_source_payload_error <= benchsoc_etherbone_probe_payload_fifo_sink_payload_error;
	end
	if (((~benchsoc_etherbone_probe_param_fifo_source_valid) | benchsoc_etherbone_probe_param_fifo_source_ready)) begin
		benchsoc_etherbone_probe_param_fifo_source_valid <= benchsoc_etherbone_probe_param_fifo_sink_valid;
		benchsoc_etherbone_probe_param_fifo_source_first <= benchsoc_etherbone_probe_param_fifo_sink_first;
		benchsoc_etherbone_probe_param_fifo_source_last <= benchsoc_etherbone_probe_param_fifo_sink_last;
		benchsoc_etherbone_probe_param_fifo_source_param_addr_size <= benchsoc_etherbone_probe_param_fifo_sink_param_addr_size;
		benchsoc_etherbone_probe_param_fifo_source_param_nr <= benchsoc_etherbone_probe_param_fifo_sink_param_nr;
		benchsoc_etherbone_probe_param_fifo_source_param_pf <= benchsoc_etherbone_probe_param_fifo_sink_param_pf;
		benchsoc_etherbone_probe_param_fifo_source_param_port_size <= benchsoc_etherbone_probe_param_fifo_sink_param_port_size;
		benchsoc_etherbone_probe_param_fifo_source_param_pr <= benchsoc_etherbone_probe_param_fifo_sink_param_pr;
		benchsoc_etherbone_probe_param_fifo_source_param_src_port <= benchsoc_etherbone_probe_param_fifo_sink_param_src_port;
		benchsoc_etherbone_probe_param_fifo_source_param_dst_port <= benchsoc_etherbone_probe_param_fifo_sink_param_dst_port;
		benchsoc_etherbone_probe_param_fifo_source_param_ip_address <= benchsoc_etherbone_probe_param_fifo_sink_param_ip_address;
		benchsoc_etherbone_probe_param_fifo_source_param_length <= benchsoc_etherbone_probe_param_fifo_sink_param_length;
	end
	liteethetherboneprobe_state <= liteethetherboneprobe_next_state;
	if ((benchsoc_etherbone_record_sink_sink_valid & benchsoc_etherbone_record_sink_sink_ready)) begin
		if (benchsoc_etherbone_record_first) begin
			benchsoc_etherbone_record_last_ip_address <= benchsoc_etherbone_record_sink_sink_param_ip_address;
		end
		benchsoc_etherbone_record_first <= benchsoc_etherbone_record_sink_sink_last;
	end
	if (benchsoc_etherbone_record_depacketizer_sr_shift) begin
		benchsoc_etherbone_record_depacketizer_sr <= benchsoc_etherbone_record_depacketizer_sink_payload_data;
	end
	benchsoc_etherbone_record_depacketizer_was_in_copy <= benchsoc_etherbone_record_depacketizer_is_in_copy;
	fsm0_state0 <= fsm0_next_state0;
	if (benchsoc_etherbone_record_depacketizer_count_fsm0_next_value_ce8) begin
		benchsoc_etherbone_record_depacketizer_count <= benchsoc_etherbone_record_depacketizer_count_fsm0_next_value8;
	end
	if (benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value_ce9) begin
		benchsoc_etherbone_record_depacketizer_fsm_from_idle <= benchsoc_etherbone_record_depacketizer_fsm_from_idle_fsm0_next_value9;
	end
	fsm1_state0 <= fsm1_next_state0;
	if (benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value_ce4) begin
		benchsoc_etherbone_record_depacketizer_delayed_last_be <= benchsoc_etherbone_record_depacketizer_delayed_last_be_fsm1_next_value4;
	end
	if (benchsoc_etherbone_record_receiver_base_addr_update) begin
		benchsoc_etherbone_record_receiver_base_addr <= benchsoc_etherbone_record_receiver_source_source_payload_data;
	end
	if (benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_re) begin
		benchsoc_etherbone_record_receiver_payload_fifo_readable <= 1'd1;
	end else begin
		if (benchsoc_etherbone_record_receiver_payload_fifo_re) begin
			benchsoc_etherbone_record_receiver_payload_fifo_readable <= 1'd0;
		end
	end
	if (((benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_we & benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_writable) & (~benchsoc_etherbone_record_receiver_payload_fifo_replace))) begin
		if ((benchsoc_etherbone_record_receiver_payload_fifo_produce == 11'd1059)) begin
			benchsoc_etherbone_record_receiver_payload_fifo_produce <= 1'd0;
		end else begin
			benchsoc_etherbone_record_receiver_payload_fifo_produce <= (benchsoc_etherbone_record_receiver_payload_fifo_produce + 1'd1);
		end
	end
	if (benchsoc_etherbone_record_receiver_payload_fifo_do_read) begin
		if ((benchsoc_etherbone_record_receiver_payload_fifo_consume == 11'd1059)) begin
			benchsoc_etherbone_record_receiver_payload_fifo_consume <= 1'd0;
		end else begin
			benchsoc_etherbone_record_receiver_payload_fifo_consume <= (benchsoc_etherbone_record_receiver_payload_fifo_consume + 1'd1);
		end
	end
	if (((benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_we & benchsoc_etherbone_record_receiver_payload_fifo_syncfifo_writable) & (~benchsoc_etherbone_record_receiver_payload_fifo_replace))) begin
		if ((~benchsoc_etherbone_record_receiver_payload_fifo_do_read)) begin
			benchsoc_etherbone_record_receiver_payload_fifo_level0 <= (benchsoc_etherbone_record_receiver_payload_fifo_level0 + 1'd1);
		end
	end else begin
		if (benchsoc_etherbone_record_receiver_payload_fifo_do_read) begin
			benchsoc_etherbone_record_receiver_payload_fifo_level0 <= (benchsoc_etherbone_record_receiver_payload_fifo_level0 - 1'd1);
		end
	end
	if (((~benchsoc_etherbone_record_receiver_param_fifo_source_valid) | benchsoc_etherbone_record_receiver_param_fifo_source_ready)) begin
		benchsoc_etherbone_record_receiver_param_fifo_source_valid <= benchsoc_etherbone_record_receiver_param_fifo_sink_valid;
		benchsoc_etherbone_record_receiver_param_fifo_source_first <= benchsoc_etherbone_record_receiver_param_fifo_sink_first;
		benchsoc_etherbone_record_receiver_param_fifo_source_last <= benchsoc_etherbone_record_receiver_param_fifo_sink_last;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_bca <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_bca;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_byte_enable <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_byte_enable;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_cyc <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_cyc;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_rca <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_rca;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_rcount <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_rcount;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_rff <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_rff;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_wca <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_wca;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_wcount <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_wcount;
		benchsoc_etherbone_record_receiver_param_fifo_source_param_wff <= benchsoc_etherbone_record_receiver_param_fifo_sink_param_wff;
	end
	liteethetherbonerecordreceiver_state <= liteethetherbonerecordreceiver_next_state;
	if (benchsoc_etherbone_record_receiver_count_next_value_ce) begin
		benchsoc_etherbone_record_receiver_count <= benchsoc_etherbone_record_receiver_count_next_value;
	end
	if (benchsoc_etherbone_record_sender_payload_fifo_syncfifo_re) begin
		benchsoc_etherbone_record_sender_payload_fifo_readable <= 1'd1;
	end else begin
		if (benchsoc_etherbone_record_sender_payload_fifo_re) begin
			benchsoc_etherbone_record_sender_payload_fifo_readable <= 1'd0;
		end
	end
	if (((benchsoc_etherbone_record_sender_payload_fifo_syncfifo_we & benchsoc_etherbone_record_sender_payload_fifo_syncfifo_writable) & (~benchsoc_etherbone_record_sender_payload_fifo_replace))) begin
		if ((benchsoc_etherbone_record_sender_payload_fifo_produce == 11'd1059)) begin
			benchsoc_etherbone_record_sender_payload_fifo_produce <= 1'd0;
		end else begin
			benchsoc_etherbone_record_sender_payload_fifo_produce <= (benchsoc_etherbone_record_sender_payload_fifo_produce + 1'd1);
		end
	end
	if (benchsoc_etherbone_record_sender_payload_fifo_do_read) begin
		if ((benchsoc_etherbone_record_sender_payload_fifo_consume == 11'd1059)) begin
			benchsoc_etherbone_record_sender_payload_fifo_consume <= 1'd0;
		end else begin
			benchsoc_etherbone_record_sender_payload_fifo_consume <= (benchsoc_etherbone_record_sender_payload_fifo_consume + 1'd1);
		end
	end
	if (((benchsoc_etherbone_record_sender_payload_fifo_syncfifo_we & benchsoc_etherbone_record_sender_payload_fifo_syncfifo_writable) & (~benchsoc_etherbone_record_sender_payload_fifo_replace))) begin
		if ((~benchsoc_etherbone_record_sender_payload_fifo_do_read)) begin
			benchsoc_etherbone_record_sender_payload_fifo_level0 <= (benchsoc_etherbone_record_sender_payload_fifo_level0 + 1'd1);
		end
	end else begin
		if (benchsoc_etherbone_record_sender_payload_fifo_do_read) begin
			benchsoc_etherbone_record_sender_payload_fifo_level0 <= (benchsoc_etherbone_record_sender_payload_fifo_level0 - 1'd1);
		end
	end
	if (((~benchsoc_etherbone_record_sender_param_fifo_source_valid) | benchsoc_etherbone_record_sender_param_fifo_source_ready)) begin
		benchsoc_etherbone_record_sender_param_fifo_source_valid <= benchsoc_etherbone_record_sender_param_fifo_sink_valid;
		benchsoc_etherbone_record_sender_param_fifo_source_first <= benchsoc_etherbone_record_sender_param_fifo_sink_first;
		benchsoc_etherbone_record_sender_param_fifo_source_last <= benchsoc_etherbone_record_sender_param_fifo_sink_last;
		benchsoc_etherbone_record_sender_param_fifo_source_param_we <= benchsoc_etherbone_record_sender_param_fifo_sink_param_we;
		benchsoc_etherbone_record_sender_param_fifo_source_param_count <= benchsoc_etherbone_record_sender_param_fifo_sink_param_count;
		benchsoc_etherbone_record_sender_param_fifo_source_param_base_addr <= benchsoc_etherbone_record_sender_param_fifo_sink_param_base_addr;
		benchsoc_etherbone_record_sender_param_fifo_source_param_be <= benchsoc_etherbone_record_sender_param_fifo_sink_param_be;
	end
	liteethetherbonerecordsender_state <= liteethetherbonerecordsender_next_state;
	if (benchsoc_etherbone_record_packetizer_sr_load) begin
		benchsoc_etherbone_record_packetizer_sr <= benchsoc_etherbone_record_packetizer_header;
	end
	fsm0_state1 <= fsm0_next_state1;
	if (benchsoc_etherbone_record_packetizer_count_fsm0_next_value_ce10) begin
		benchsoc_etherbone_record_packetizer_count <= benchsoc_etherbone_record_packetizer_count_fsm0_next_value10;
	end
	if (benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value_ce11) begin
		benchsoc_etherbone_record_packetizer_fsm_from_idle <= benchsoc_etherbone_record_packetizer_fsm_from_idle_fsm0_next_value11;
	end
	fsm1_state1 <= fsm1_next_state1;
	if (benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value_ce5) begin
		benchsoc_etherbone_record_packetizer_delayed_last_be <= benchsoc_etherbone_record_packetizer_delayed_last_be_fsm1_next_value5;
	end
	if (benchsoc_etherbone_dispatcher_first) begin
		benchsoc_etherbone_dispatcher_sel_ongoing <= benchsoc_etherbone_dispatcher_sel0;
	end
	benchsoc_etherbone_dispatcher_ongoing1 <= ((benchsoc_etherbone_rx_source_source_valid | benchsoc_etherbone_dispatcher_ongoing1) & (~benchsoc_etherbone_dispatcher_last));
	if (benchsoc_etherbone_dispatcher_last) begin
		benchsoc_etherbone_dispatcher_first <= 1'd1;
	end else begin
		if ((benchsoc_etherbone_rx_source_source_valid & benchsoc_etherbone_rx_source_source_ready)) begin
			benchsoc_etherbone_dispatcher_first <= 1'd0;
		end
	end
	case (benchsoc_etherbone_grant)
		1'd0: begin
			if ((~benchsoc_etherbone_request[0])) begin
				if (benchsoc_etherbone_request[1]) begin
					benchsoc_etherbone_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~benchsoc_etherbone_request[1])) begin
				if (benchsoc_etherbone_request[0]) begin
					benchsoc_etherbone_grant <= 1'd0;
				end
			end
		end
	endcase
	benchsoc_etherbone_status0_ongoing1 <= ((benchsoc_etherbone_probe_source_valid | benchsoc_etherbone_status0_ongoing1) & (~benchsoc_etherbone_status0_last));
	if (benchsoc_etherbone_status0_last) begin
		benchsoc_etherbone_status0_first <= 1'd1;
	end else begin
		if ((benchsoc_etherbone_probe_source_valid & benchsoc_etherbone_probe_source_ready)) begin
			benchsoc_etherbone_status0_first <= 1'd0;
		end
	end
	benchsoc_etherbone_status1_ongoing1 <= ((benchsoc_etherbone_record_source_source_valid | benchsoc_etherbone_status1_ongoing1) & (~benchsoc_etherbone_status1_last));
	if (benchsoc_etherbone_status1_last) begin
		benchsoc_etherbone_status1_first <= 1'd1;
	end else begin
		if ((benchsoc_etherbone_record_source_source_valid & benchsoc_etherbone_record_source_source_ready)) begin
			benchsoc_etherbone_status1_first <= 1'd0;
		end
	end
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_addr <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_payload_addr;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_count <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_count;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_base_addr <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_base_addr;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_be <= benchsoc_etherbone_liteethetherbonewishbonemaster_sink_param_be;
	benchsoc_etherbone_liteethetherbonewishbonemaster_source_param_we <= 1'd1;
	if (benchsoc_etherbone_liteethetherbonewishbonemaster_data_update) begin
		benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_data <= benchsoc_etherbone_liteethetherbonewishbonemaster_bus_dat_r;
	end
	liteethetherbonewishbonemaster_state <= liteethetherbonewishbonemaster_next_state;
	encoder1_Ad <= {encoder1_A, encoder1_Ad[0]};
	encoder1_Bd <= {encoder1_B, encoder1_Bd[0]};
	if ((encoder1_Z & (~encoder1_good_one))) begin
		encoder1_Zc <= (encoder1_Zc + 1'd1);
	end else begin
		if ((~encoder1_good_zero)) begin
			encoder1_Zc <= (encoder1_Zc - 1'd1);
		end
	end
	if (encoder1_good_one) begin
		encoder1_last_good <= 1'd1;
	end else begin
		if (encoder1_good_zero) begin
			encoder1_last_good <= 1'd0;
		end
	end
	if (encoder1_count_enable) begin
		if (encoder1_count_direction) begin
			encoder1_c <= (encoder1_c + 1'd1);
		end else begin
			encoder1_c <= (encoder1_c - 1'd1);
		end
	end
	if (encoder1_index_pulse) begin
		encoder1_i <= encoder1_c;
		encoder1_zl <= 1'd1;
	end else begin
		if (encoder1_zr) begin
			encoder1_zl <= 1'd0;
		end
	end
	encoder2_Ad <= {encoder2_A, encoder2_Ad[0]};
	encoder2_Bd <= {encoder2_B, encoder2_Bd[0]};
	if ((encoder2_Z & (~encoder2_good_one))) begin
		encoder2_Zc <= (encoder2_Zc + 1'd1);
	end else begin
		if ((~encoder2_good_zero)) begin
			encoder2_Zc <= (encoder2_Zc - 1'd1);
		end
	end
	if (encoder2_good_one) begin
		encoder2_last_good <= 1'd1;
	end else begin
		if (encoder2_good_zero) begin
			encoder2_last_good <= 1'd0;
		end
	end
	if (encoder2_count_enable) begin
		if (encoder2_count_direction) begin
			encoder2_c <= (encoder2_c + 1'd1);
		end else begin
			encoder2_c <= (encoder2_c - 1'd1);
		end
	end
	if (encoder2_index_pulse) begin
		encoder2_i <= encoder2_c;
		encoder2_zl <= 1'd1;
	end else begin
		if (encoder2_zr) begin
			encoder2_zl <= 1'd0;
		end
	end
	encoder3_Ad <= {encoder3_A, encoder3_Ad[0]};
	encoder3_Bd <= {encoder3_B, encoder3_Bd[0]};
	if ((encoder3_Z & (~encoder3_good_one))) begin
		encoder3_Zc <= (encoder3_Zc + 1'd1);
	end else begin
		if ((~encoder3_good_zero)) begin
			encoder3_Zc <= (encoder3_Zc - 1'd1);
		end
	end
	if (encoder3_good_one) begin
		encoder3_last_good <= 1'd1;
	end else begin
		if (encoder3_good_zero) begin
			encoder3_last_good <= 1'd0;
		end
	end
	if (encoder3_count_enable) begin
		if (encoder3_count_direction) begin
			encoder3_c <= (encoder3_c + 1'd1);
		end else begin
			encoder3_c <= (encoder3_c - 1'd1);
		end
	end
	if (encoder3_index_pulse) begin
		encoder3_i <= encoder3_c;
		encoder3_zl <= 1'd1;
	end else begin
		if (encoder3_zr) begin
			encoder3_zl <= 1'd0;
		end
	end
	encoder4_Ad <= {encoder4_A, encoder4_Ad[0]};
	encoder4_Bd <= {encoder4_B, encoder4_Bd[0]};
	if ((encoder4_Z & (~encoder4_good_one))) begin
		encoder4_Zc <= (encoder4_Zc + 1'd1);
	end else begin
		if ((~encoder4_good_zero)) begin
			encoder4_Zc <= (encoder4_Zc - 1'd1);
		end
	end
	if (encoder4_good_one) begin
		encoder4_last_good <= 1'd1;
	end else begin
		if (encoder4_good_zero) begin
			encoder4_last_good <= 1'd0;
		end
	end
	if (encoder4_count_enable) begin
		if (encoder4_count_direction) begin
			encoder4_c <= (encoder4_c + 1'd1);
		end else begin
			encoder4_c <= (encoder4_c - 1'd1);
		end
	end
	if (encoder4_index_pulse) begin
		encoder4_i <= encoder4_c;
		encoder4_zl <= 1'd1;
	end else begin
		if (encoder4_zr) begin
			encoder4_zl <= 1'd0;
		end
	end
	if (pwm0_enable) begin
		pwm0_counter <= (pwm0_counter + 1'd1);
		if ((pwm0_counter < pwm0_width)) begin
			pwm_out0 <= 1'd1;
		end else begin
			pwm_out0 <= 1'd0;
		end
		if ((pwm0_counter >= (pwm0_period - 1'd1))) begin
			pwm0_counter <= 1'd0;
		end
	end else begin
		pwm0_counter <= 1'd0;
		pwm_out0 <= 1'd0;
	end
	if (pwm1_enable) begin
		pwm1_counter <= (pwm1_counter + 1'd1);
		if ((pwm1_counter < pwm1_width)) begin
			pwm_out1 <= 1'd1;
		end else begin
			pwm_out1 <= 1'd0;
		end
		if ((pwm1_counter >= (pwm1_period - 1'd1))) begin
			pwm1_counter <= 1'd0;
		end
	end else begin
		pwm1_counter <= 1'd0;
		pwm_out1 <= 1'd0;
	end
	if (pwm2_enable) begin
		pwm2_counter <= (pwm2_counter + 1'd1);
		if ((pwm2_counter < pwm2_width)) begin
			pwm_out2 <= 1'd1;
		end else begin
			pwm_out2 <= 1'd0;
		end
		if ((pwm2_counter >= (pwm2_period - 1'd1))) begin
			pwm2_counter <= 1'd0;
		end
	end else begin
		pwm2_counter <= 1'd0;
		pwm_out2 <= 1'd0;
	end
	if (leds_done) begin
		leds_chaser <= {leds_chaser, (~leds_chaser)};
	end
	if (leds_re) begin
		leds_mode <= 1'd1;
	end
	if (leds_wait) begin
		if ((~leds_done)) begin
			leds_count <= (leds_count - 1'd1);
		end
	end else begin
		leds_count <= 25'd25000000;
	end
	if (ledchaser_enable) begin
		ledchaser_counter <= (ledchaser_counter + 1'd1);
		if ((ledchaser_counter < ledchaser_width)) begin
			ledchaser_pwm <= 1'd1;
		end else begin
			ledchaser_pwm <= 1'd0;
		end
		if ((ledchaser_counter >= (ledchaser_period - 1'd1))) begin
			ledchaser_counter <= 1'd0;
		end
	end else begin
		ledchaser_counter <= 1'd0;
		ledchaser_pwm <= 1'd0;
	end
	state <= next_state;
	csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank0_sel) begin
		case (csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_velocity10_w;
			end
			1'd1: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_velocity20_w;
			end
			2'd2: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_velocity30_w;
			end
			2'd3: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_velocity40_w;
			end
			3'd4: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_velocity50_w;
			end
			3'd5: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_velocity60_w;
			end
			3'd6: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_dirtime0_w;
			end
			3'd7: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_steptime0_w;
			end
			4'd8: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_stepgens_ctrlword0_w;
			end
			4'd9: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_apply_time1_w;
			end
			4'd10: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_apply_time0_w;
			end
			4'd11: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_gpios_out0_w;
			end
			4'd12: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm0_width0_w;
			end
			4'd13: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm0_period0_w;
			end
			4'd14: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm1_width0_w;
			end
			4'd15: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm1_period0_w;
			end
			5'd16: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm2_width0_w;
			end
			5'd17: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm2_period0_w;
			end
			5'd18: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm3_width0_w;
			end
			5'd19: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm3_period0_w;
			end
			5'd20: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm4_width0_w;
			end
			5'd21: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm4_period0_w;
			end
			5'd22: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm5_width0_w;
			end
			5'd23: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_pwm5_period0_w;
			end
			5'd24: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position11_w;
			end
			5'd25: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position10_w;
			end
			5'd26: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position21_w;
			end
			5'd27: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position20_w;
			end
			5'd28: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position31_w;
			end
			5'd29: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position30_w;
			end
			5'd30: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position41_w;
			end
			5'd31: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position40_w;
			end
			6'd32: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position51_w;
			end
			6'd33: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position50_w;
			end
			6'd34: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position61_w;
			end
			6'd35: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_position60_w;
			end
			6'd36: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_wallclock1_w;
			end
			6'd37: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_wallclock0_w;
			end
			6'd38: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_gpios_in_w;
			end
			6'd39: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_encoder_position1_w;
			end
			6'd40: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_encoder_position2_w;
			end
			6'd41: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_encoder_position3_w;
			end
			6'd42: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_encoder_position4_w;
			end
			6'd43: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_encoder_position5_w;
			end
			6'd44: begin
				csr_bankarray_interface0_bank_bus_dat_r <= csr_bankarray_csrbank0_encoder_position6_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank0_velocity10_re) begin
		velocity1_storage[30:0] <= csr_bankarray_csrbank0_velocity10_r;
	end
	velocity1_re <= csr_bankarray_csrbank0_velocity10_re;
	if (csr_bankarray_csrbank0_velocity20_re) begin
		velocity2_storage[30:0] <= csr_bankarray_csrbank0_velocity20_r;
	end
	velocity2_re <= csr_bankarray_csrbank0_velocity20_re;
	if (csr_bankarray_csrbank0_velocity30_re) begin
		velocity3_storage[30:0] <= csr_bankarray_csrbank0_velocity30_r;
	end
	velocity3_re <= csr_bankarray_csrbank0_velocity30_re;
	if (csr_bankarray_csrbank0_velocity40_re) begin
		velocity4_storage[30:0] <= csr_bankarray_csrbank0_velocity40_r;
	end
	velocity4_re <= csr_bankarray_csrbank0_velocity40_re;
	if (csr_bankarray_csrbank0_velocity50_re) begin
		velocity5_storage[30:0] <= csr_bankarray_csrbank0_velocity50_r;
	end
	velocity5_re <= csr_bankarray_csrbank0_velocity50_re;
	if (csr_bankarray_csrbank0_velocity60_re) begin
		velocity6_storage[30:0] <= csr_bankarray_csrbank0_velocity60_r;
	end
	velocity6_re <= csr_bankarray_csrbank0_velocity60_re;
	if (csr_bankarray_csrbank0_dirtime0_re) begin
		dirtime_storage[9:0] <= csr_bankarray_csrbank0_dirtime0_r;
	end
	dirtime_re <= csr_bankarray_csrbank0_dirtime0_re;
	if (csr_bankarray_csrbank0_steptime0_re) begin
		steptime_storage[9:0] <= csr_bankarray_csrbank0_steptime0_r;
	end
	steptime_re <= csr_bankarray_csrbank0_steptime0_re;
	if (csr_bankarray_csrbank0_stepgens_ctrlword0_re) begin
		stepgens_ctrlword_storage[31:0] <= csr_bankarray_csrbank0_stepgens_ctrlword0_r;
	end
	stepgens_ctrlword_re <= csr_bankarray_csrbank0_stepgens_ctrlword0_re;
	if (apply_time_we) begin
		apply_time_storage <= apply_time_dat_w;
	end
	if (csr_bankarray_csrbank0_apply_time1_re) begin
		apply_time_storage[63:32] <= csr_bankarray_csrbank0_apply_time1_r;
	end
	if (csr_bankarray_csrbank0_apply_time0_re) begin
		apply_time_storage[31:0] <= csr_bankarray_csrbank0_apply_time0_r;
	end
	apply_time_re <= csr_bankarray_csrbank0_apply_time0_re;
	if (csr_bankarray_csrbank0_gpios_out0_re) begin
		gpios_out_storage[31:0] <= csr_bankarray_csrbank0_gpios_out0_r;
	end
	gpios_out_re <= csr_bankarray_csrbank0_gpios_out0_re;
	if (csr_bankarray_csrbank0_pwm0_width0_re) begin
		pwm_out0_width_storage[31:0] <= csr_bankarray_csrbank0_pwm0_width0_r;
	end
	pwm_out0_width_re <= csr_bankarray_csrbank0_pwm0_width0_re;
	if (csr_bankarray_csrbank0_pwm0_period0_re) begin
		pwm_out0_period_storage[31:0] <= csr_bankarray_csrbank0_pwm0_period0_r;
	end
	pwm_out0_period_re <= csr_bankarray_csrbank0_pwm0_period0_re;
	if (csr_bankarray_csrbank0_pwm1_width0_re) begin
		pwm_out1_width_storage[31:0] <= csr_bankarray_csrbank0_pwm1_width0_r;
	end
	pwm_out1_width_re <= csr_bankarray_csrbank0_pwm1_width0_re;
	if (csr_bankarray_csrbank0_pwm1_period0_re) begin
		pwm_out1_period_storage[31:0] <= csr_bankarray_csrbank0_pwm1_period0_r;
	end
	pwm_out1_period_re <= csr_bankarray_csrbank0_pwm1_period0_re;
	if (csr_bankarray_csrbank0_pwm2_width0_re) begin
		pwm_out2_width_storage[31:0] <= csr_bankarray_csrbank0_pwm2_width0_r;
	end
	pwm_out2_width_re <= csr_bankarray_csrbank0_pwm2_width0_re;
	if (csr_bankarray_csrbank0_pwm2_period0_re) begin
		pwm_out2_period_storage[31:0] <= csr_bankarray_csrbank0_pwm2_period0_r;
	end
	pwm_out2_period_re <= csr_bankarray_csrbank0_pwm2_period0_re;
	if (csr_bankarray_csrbank0_pwm3_width0_re) begin
		pwm_out3_width_storage[31:0] <= csr_bankarray_csrbank0_pwm3_width0_r;
	end
	pwm_out3_width_re <= csr_bankarray_csrbank0_pwm3_width0_re;
	if (csr_bankarray_csrbank0_pwm3_period0_re) begin
		pwm_out3_period_storage[31:0] <= csr_bankarray_csrbank0_pwm3_period0_r;
	end
	pwm_out3_period_re <= csr_bankarray_csrbank0_pwm3_period0_re;
	if (csr_bankarray_csrbank0_pwm4_width0_re) begin
		pwm_out4_width_storage[31:0] <= csr_bankarray_csrbank0_pwm4_width0_r;
	end
	pwm_out4_width_re <= csr_bankarray_csrbank0_pwm4_width0_re;
	if (csr_bankarray_csrbank0_pwm4_period0_re) begin
		pwm_out4_period_storage[31:0] <= csr_bankarray_csrbank0_pwm4_period0_r;
	end
	pwm_out4_period_re <= csr_bankarray_csrbank0_pwm4_period0_re;
	if (csr_bankarray_csrbank0_pwm5_width0_re) begin
		pwm_out5_width_storage[31:0] <= csr_bankarray_csrbank0_pwm5_width0_r;
	end
	pwm_out5_width_re <= csr_bankarray_csrbank0_pwm5_width0_re;
	if (csr_bankarray_csrbank0_pwm5_period0_re) begin
		pwm_out5_period_storage[31:0] <= csr_bankarray_csrbank0_pwm5_period0_r;
	end
	pwm_out5_period_re <= csr_bankarray_csrbank0_pwm5_period0_re;
	position1_re <= csr_bankarray_csrbank0_position10_re;
	position2_re <= csr_bankarray_csrbank0_position20_re;
	position3_re <= csr_bankarray_csrbank0_position30_re;
	position4_re <= csr_bankarray_csrbank0_position40_re;
	position5_re <= csr_bankarray_csrbank0_position50_re;
	position6_re <= csr_bankarray_csrbank0_position60_re;
	wallclock_re <= csr_bankarray_csrbank0_wallclock0_re;
	gpios_in_re <= csr_bankarray_csrbank0_gpios_in_re;
	encoder_position1_re <= csr_bankarray_csrbank0_encoder_position1_re;
	encoder_position2_re <= csr_bankarray_csrbank0_encoder_position2_re;
	encoder_position3_re <= csr_bankarray_csrbank0_encoder_position3_re;
	encoder_position4_re <= csr_bankarray_csrbank0_encoder_position4_re;
	encoder_position5_re <= csr_bankarray_csrbank0_encoder_position5_re;
	encoder_position6_re <= csr_bankarray_csrbank0_encoder_position6_re;
	csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank1_sel) begin
		case (csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_reset0_w;
			end
			1'd1: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_scratch0_w;
			end
			2'd2: begin
				csr_bankarray_interface1_bank_bus_dat_r <= csr_bankarray_csrbank1_bus_errors_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank1_reset0_re) begin
		benchsoc_reset_storage[1:0] <= csr_bankarray_csrbank1_reset0_r;
	end
	benchsoc_reset_re <= csr_bankarray_csrbank1_reset0_re;
	if (csr_bankarray_csrbank1_scratch0_re) begin
		benchsoc_scratch_storage[31:0] <= csr_bankarray_csrbank1_scratch0_r;
	end
	benchsoc_scratch_re <= csr_bankarray_csrbank1_scratch0_re;
	benchsoc_bus_errors_re <= csr_bankarray_csrbank1_bus_errors_re;
	csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank2_sel) begin
		case (csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_crg_reset0_w;
			end
			1'd1: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_rx_inband_status_w;
			end
			2'd2: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_mdio_w0_w;
			end
			2'd3: begin
				csr_bankarray_interface2_bank_bus_dat_r <= csr_bankarray_csrbank2_mdio_r_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank2_crg_reset0_re) begin
		ethphy_reset_storage <= csr_bankarray_csrbank2_crg_reset0_r;
	end
	ethphy_reset_re <= csr_bankarray_csrbank2_crg_reset0_re;
	ethphy_re <= csr_bankarray_csrbank2_rx_inband_status_re;
	if (csr_bankarray_csrbank2_mdio_w0_re) begin
		ethphy__w_storage[2:0] <= csr_bankarray_csrbank2_mdio_w0_r;
	end
	ethphy__w_re <= csr_bankarray_csrbank2_mdio_w0_re;
	ethphy__r_re <= csr_bankarray_csrbank2_mdio_r_re;
	csr_bankarray_sel_r <= csr_bankarray_sel;
	csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank3_sel) begin
		case (csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_out0_w;
			end
			1'd1: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_pwm_enable0_w;
			end
			2'd2: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_pwm_width0_w;
			end
			2'd3: begin
				csr_bankarray_interface3_bank_bus_dat_r <= csr_bankarray_csrbank3_pwm_period0_w;
			end
		endcase
	end
	if (csr_bankarray_csrbank3_out0_re) begin
		leds_storage <= csr_bankarray_csrbank3_out0_r;
	end
	leds_re <= csr_bankarray_csrbank3_out0_re;
	if (csr_bankarray_csrbank3_pwm_enable0_re) begin
		ledchaser_pwm_enable_storage <= csr_bankarray_csrbank3_pwm_enable0_r;
	end
	ledchaser_pwm_enable_re <= csr_bankarray_csrbank3_pwm_enable0_re;
	if (csr_bankarray_csrbank3_pwm_width0_re) begin
		ledchaser_pwm_width_storage[31:0] <= csr_bankarray_csrbank3_pwm_width0_r;
	end
	ledchaser_pwm_width_re <= csr_bankarray_csrbank3_pwm_width0_re;
	if (csr_bankarray_csrbank3_pwm_period0_re) begin
		ledchaser_pwm_period_storage[31:0] <= csr_bankarray_csrbank3_pwm_period0_r;
	end
	ledchaser_pwm_period_re <= csr_bankarray_csrbank3_pwm_period0_re;
	csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (csr_bankarray_csrbank4_sel) begin
		case (csr_bankarray_interface4_bank_bus_adr[8:0])
			1'd0: begin
				csr_bankarray_interface4_bank_bus_dat_r <= benchsoc_uartcrossover_rxtx_w;
			end
			1'd1: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_txfull_w;
			end
			2'd2: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_rxempty_w;
			end
			2'd3: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_ev_status_w;
			end
			3'd4: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_ev_pending_w;
			end
			3'd5: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_ev_enable0_w;
			end
			3'd6: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_txempty_w;
			end
			3'd7: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_rxfull_w;
			end
			4'd8: begin
				csr_bankarray_interface4_bank_bus_dat_r <= benchsoc_xover_rxtx_w;
			end
			4'd9: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_txfull_w;
			end
			4'd10: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_rxempty_w;
			end
			4'd11: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_ev_status_w;
			end
			4'd12: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_ev_pending_w;
			end
			4'd13: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_ev_enable0_w;
			end
			4'd14: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_txempty_w;
			end
			4'd15: begin
				csr_bankarray_interface4_bank_bus_dat_r <= csr_bankarray_csrbank4_xover_rxfull_w;
			end
		endcase
	end
	benchsoc_uartcrossover_txfull_re <= csr_bankarray_csrbank4_txfull_re;
	benchsoc_uartcrossover_rxempty_re <= csr_bankarray_csrbank4_rxempty_re;
	benchsoc_uartcrossover_status_re <= csr_bankarray_csrbank4_ev_status_re;
	if (csr_bankarray_csrbank4_ev_pending_re) begin
		benchsoc_uartcrossover_pending_r[1:0] <= csr_bankarray_csrbank4_ev_pending_r;
	end
	benchsoc_uartcrossover_pending_re <= csr_bankarray_csrbank4_ev_pending_re;
	if (csr_bankarray_csrbank4_ev_enable0_re) begin
		benchsoc_uartcrossover_enable_storage[1:0] <= csr_bankarray_csrbank4_ev_enable0_r;
	end
	benchsoc_uartcrossover_enable_re <= csr_bankarray_csrbank4_ev_enable0_re;
	benchsoc_uartcrossover_txempty_re <= csr_bankarray_csrbank4_txempty_re;
	benchsoc_uartcrossover_rxfull_re <= csr_bankarray_csrbank4_rxfull_re;
	benchsoc_xover_txfull_re <= csr_bankarray_csrbank4_xover_txfull_re;
	benchsoc_xover_rxempty_re <= csr_bankarray_csrbank4_xover_rxempty_re;
	benchsoc_xover_status_re <= csr_bankarray_csrbank4_xover_ev_status_re;
	if (csr_bankarray_csrbank4_xover_ev_pending_re) begin
		benchsoc_xover_pending_r[1:0] <= csr_bankarray_csrbank4_xover_ev_pending_r;
	end
	benchsoc_xover_pending_re <= csr_bankarray_csrbank4_xover_ev_pending_re;
	if (csr_bankarray_csrbank4_xover_ev_enable0_re) begin
		benchsoc_xover_enable_storage[1:0] <= csr_bankarray_csrbank4_xover_ev_enable0_r;
	end
	benchsoc_xover_enable_re <= csr_bankarray_csrbank4_xover_ev_enable0_re;
	benchsoc_xover_txempty_re <= csr_bankarray_csrbank4_xover_txempty_re;
	benchsoc_xover_rxfull_re <= csr_bankarray_csrbank4_xover_rxfull_re;
	if (sys_rst) begin
		benchsoc_reset_storage <= 2'd0;
		benchsoc_reset_re <= 1'd0;
		benchsoc_scratch_storage <= 32'd305419896;
		benchsoc_scratch_re <= 1'd0;
		benchsoc_bus_errors_re <= 1'd0;
		benchsoc_bus_errors <= 32'd0;
		benchsoc_uartcrossover_txfull_re <= 1'd0;
		benchsoc_uartcrossover_rxempty_re <= 1'd0;
		benchsoc_uartcrossover_tx_pending <= 1'd0;
		benchsoc_uartcrossover_tx_trigger_d <= 1'd0;
		benchsoc_uartcrossover_rx_pending <= 1'd0;
		benchsoc_uartcrossover_rx_trigger_d <= 1'd0;
		benchsoc_uartcrossover_status_re <= 1'd0;
		benchsoc_uartcrossover_pending_re <= 1'd0;
		benchsoc_uartcrossover_pending_r <= 2'd0;
		benchsoc_uartcrossover_enable_storage <= 2'd0;
		benchsoc_uartcrossover_enable_re <= 1'd0;
		benchsoc_uartcrossover_txempty_re <= 1'd0;
		benchsoc_uartcrossover_rxfull_re <= 1'd0;
		benchsoc_uartcrossover_tx_fifo_readable <= 1'd0;
		benchsoc_uartcrossover_tx_fifo_level0 <= 5'd0;
		benchsoc_uartcrossover_tx_fifo_produce <= 4'd0;
		benchsoc_uartcrossover_tx_fifo_consume <= 4'd0;
		benchsoc_uartcrossover_rx_fifo_readable <= 1'd0;
		benchsoc_uartcrossover_rx_fifo_level0 <= 5'd0;
		benchsoc_uartcrossover_rx_fifo_produce <= 4'd0;
		benchsoc_uartcrossover_rx_fifo_consume <= 4'd0;
		benchsoc_xover_txfull_re <= 1'd0;
		benchsoc_xover_rxempty_re <= 1'd0;
		benchsoc_xover_tx_pending <= 1'd0;
		benchsoc_xover_tx_trigger_d <= 1'd0;
		benchsoc_xover_rx_pending <= 1'd0;
		benchsoc_xover_rx_trigger_d <= 1'd0;
		benchsoc_xover_status_re <= 1'd0;
		benchsoc_xover_pending_re <= 1'd0;
		benchsoc_xover_pending_r <= 2'd0;
		benchsoc_xover_enable_storage <= 2'd0;
		benchsoc_xover_enable_re <= 1'd0;
		benchsoc_xover_txempty_re <= 1'd0;
		benchsoc_xover_rxfull_re <= 1'd0;
		benchsoc_xover_tx_fifo_source_valid <= 1'd0;
		benchsoc_xover_tx_fifo_source_payload_data <= 8'd0;
		benchsoc_xover_rx_fifo_readable <= 1'd0;
		benchsoc_xover_rx_fifo_level0 <= 5'd0;
		benchsoc_xover_rx_fifo_produce <= 4'd0;
		benchsoc_xover_rx_fifo_consume <= 4'd0;
		ethphy_reset_storage <= 1'd0;
		ethphy_reset_re <= 1'd0;
		ethphy_re <= 1'd0;
		ethphy__w_storage <= 3'd0;
		ethphy__w_re <= 1'd0;
		ethphy__r_re <= 1'd0;
		benchsoc_etherbone_tx_packetizer_count <= 1'd0;
		benchsoc_etherbone_tx_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_etherbone_tx_packetizer_delayed_last_be <= 4'd0;
		benchsoc_etherbone_rx_depacketizer_count <= 1'd0;
		benchsoc_etherbone_rx_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_etherbone_rx_depacketizer_delayed_last_be <= 4'd0;
		benchsoc_etherbone_rx_depacketizer_was_in_copy <= 1'd0;
		benchsoc_etherbone_probe_payload_fifo_source_valid <= 1'd0;
		benchsoc_etherbone_probe_payload_fifo_source_payload_data <= 32'd0;
		benchsoc_etherbone_probe_payload_fifo_source_payload_last_be <= 4'd0;
		benchsoc_etherbone_probe_payload_fifo_source_payload_error <= 4'd0;
		benchsoc_etherbone_probe_param_fifo_source_valid <= 1'd0;
		benchsoc_etherbone_record_depacketizer_count <= 1'd0;
		benchsoc_etherbone_record_depacketizer_fsm_from_idle <= 1'd0;
		benchsoc_etherbone_record_depacketizer_delayed_last_be <= 4'd0;
		benchsoc_etherbone_record_depacketizer_was_in_copy <= 1'd0;
		benchsoc_etherbone_record_receiver_payload_fifo_readable <= 1'd0;
		benchsoc_etherbone_record_receiver_payload_fifo_level0 <= 11'd0;
		benchsoc_etherbone_record_receiver_payload_fifo_produce <= 11'd0;
		benchsoc_etherbone_record_receiver_payload_fifo_consume <= 11'd0;
		benchsoc_etherbone_record_receiver_param_fifo_source_valid <= 1'd0;
		benchsoc_etherbone_record_first <= 1'd1;
		benchsoc_etherbone_record_sender_payload_fifo_readable <= 1'd0;
		benchsoc_etherbone_record_sender_payload_fifo_level0 <= 11'd0;
		benchsoc_etherbone_record_sender_payload_fifo_produce <= 11'd0;
		benchsoc_etherbone_record_sender_payload_fifo_consume <= 11'd0;
		benchsoc_etherbone_record_sender_param_fifo_source_valid <= 1'd0;
		benchsoc_etherbone_record_packetizer_count <= 1'd0;
		benchsoc_etherbone_record_packetizer_fsm_from_idle <= 1'd0;
		benchsoc_etherbone_record_packetizer_delayed_last_be <= 4'd0;
		benchsoc_etherbone_dispatcher_first <= 1'd1;
		benchsoc_etherbone_dispatcher_ongoing1 <= 1'd0;
		benchsoc_etherbone_dispatcher_sel_ongoing <= 1'd0;
		benchsoc_etherbone_grant <= 1'd0;
		benchsoc_etherbone_status0_first <= 1'd1;
		benchsoc_etherbone_status0_ongoing1 <= 1'd0;
		benchsoc_etherbone_status1_first <= 1'd1;
		benchsoc_etherbone_status1_ongoing1 <= 1'd0;
		benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_addr <= 32'd0;
		benchsoc_etherbone_liteethetherbonewishbonemaster_source_payload_data <= 32'd0;
		encoder1_c <= 15'd0;
		encoder1_i <= 15'd0;
		encoder1_zl <= 1'd0;
		encoder1_Ad <= 3'd0;
		encoder1_Bd <= 3'd0;
		encoder1_Zc <= 3'd0;
		encoder1_last_good <= 1'd0;
		encoder2_c <= 15'd0;
		encoder2_i <= 15'd0;
		encoder2_zl <= 1'd0;
		encoder2_Ad <= 3'd0;
		encoder2_Bd <= 3'd0;
		encoder2_Zc <= 3'd0;
		encoder2_last_good <= 1'd0;
		encoder3_c <= 15'd0;
		encoder3_i <= 15'd0;
		encoder3_zl <= 1'd0;
		encoder3_Ad <= 3'd0;
		encoder3_Bd <= 3'd0;
		encoder3_Zc <= 3'd0;
		encoder3_last_good <= 1'd0;
		encoder4_c <= 15'd0;
		encoder4_i <= 15'd0;
		encoder4_zl <= 1'd0;
		encoder4_Ad <= 3'd0;
		encoder4_Bd <= 3'd0;
		encoder4_Zc <= 3'd0;
		encoder4_last_good <= 1'd0;
		stepgen1_velocity <= 31'd0;
		stepgen1_dirtime <= 10'd0;
		stepgen1_steptime <= 10'd0;
		stepgen1_enable <= 1'd0;
		stepgen1_reset <= 1'd0;
		stepgen1_inverse_dir <= 1'd0;
		stepgen1_inverse_step <= 1'd0;
		stepgen2_velocity <= 31'd0;
		stepgen2_dirtime <= 10'd0;
		stepgen2_steptime <= 10'd0;
		stepgen2_enable <= 1'd0;
		stepgen2_reset <= 1'd0;
		stepgen2_inverse_dir <= 1'd0;
		stepgen2_inverse_step <= 1'd0;
		stepgen3_velocity <= 31'd0;
		stepgen3_dirtime <= 10'd0;
		stepgen3_steptime <= 10'd0;
		stepgen3_enable <= 1'd0;
		stepgen3_reset <= 1'd0;
		stepgen3_inverse_dir <= 1'd0;
		stepgen3_inverse_step <= 1'd0;
		stepgen4_velocity <= 31'd0;
		stepgen4_dirtime <= 10'd0;
		stepgen4_steptime <= 10'd0;
		stepgen4_enable <= 1'd0;
		stepgen4_reset <= 1'd0;
		stepgen4_inverse_dir <= 1'd0;
		stepgen4_inverse_step <= 1'd0;
		stepgen5_velocity <= 31'd0;
		stepgen5_dirtime <= 10'd0;
		stepgen5_steptime <= 10'd0;
		stepgen5_enable <= 1'd0;
		stepgen5_reset <= 1'd0;
		stepgen5_inverse_dir <= 1'd0;
		stepgen5_inverse_step <= 1'd0;
		stepgen6_velocity <= 31'd0;
		stepgen6_dirtime <= 10'd0;
		stepgen6_steptime <= 10'd0;
		stepgen6_enable <= 1'd0;
		stepgen6_reset <= 1'd0;
		stepgen6_inverse_dir <= 1'd0;
		stepgen6_inverse_step <= 1'd0;
		velocity1_storage <= 31'd0;
		velocity1_re <= 1'd0;
		velocity2_storage <= 31'd0;
		velocity2_re <= 1'd0;
		velocity3_storage <= 31'd0;
		velocity3_re <= 1'd0;
		velocity4_storage <= 31'd0;
		velocity4_re <= 1'd0;
		velocity5_storage <= 31'd0;
		velocity5_re <= 1'd0;
		velocity6_storage <= 31'd0;
		velocity6_re <= 1'd0;
		dirtime_storage <= 10'd0;
		dirtime_re <= 1'd0;
		steptime_storage <= 10'd0;
		steptime_re <= 1'd0;
		stepgens_ctrlword_storage <= 32'd0;
		stepgens_ctrlword_re <= 1'd0;
		apply_time_storage <= 64'd0;
		apply_time_re <= 1'd0;
		apply_time_we <= 1'd0;
		apply_time_dat_w <= 64'd0;
		gpios_out_storage <= 32'd0;
		gpios_out_re <= 1'd0;
		pwm_out0_width_storage <= 32'd0;
		pwm_out0_width_re <= 1'd0;
		pwm_out0_period_storage <= 32'd0;
		pwm_out0_period_re <= 1'd0;
		pwm_out1_width_storage <= 32'd0;
		pwm_out1_width_re <= 1'd0;
		pwm_out1_period_storage <= 32'd0;
		pwm_out1_period_re <= 1'd0;
		pwm_out2_width_storage <= 32'd0;
		pwm_out2_width_re <= 1'd0;
		pwm_out2_period_storage <= 32'd0;
		pwm_out2_period_re <= 1'd0;
		pwm_out3_width_storage <= 32'd0;
		pwm_out3_width_re <= 1'd0;
		pwm_out3_period_storage <= 32'd0;
		pwm_out3_period_re <= 1'd0;
		pwm_out4_width_storage <= 32'd0;
		pwm_out4_width_re <= 1'd0;
		pwm_out4_period_storage <= 32'd0;
		pwm_out4_period_re <= 1'd0;
		pwm_out5_width_storage <= 32'd0;
		pwm_out5_width_re <= 1'd0;
		pwm_out5_period_storage <= 32'd0;
		pwm_out5_period_re <= 1'd0;
		position1_status <= 62'd0;
		position1_we <= 1'd0;
		position1_re <= 1'd0;
		position2_status <= 62'd0;
		position2_we <= 1'd0;
		position2_re <= 1'd0;
		position3_status <= 62'd0;
		position3_we <= 1'd0;
		position3_re <= 1'd0;
		position4_status <= 62'd0;
		position4_we <= 1'd0;
		position4_re <= 1'd0;
		position5_status <= 62'd0;
		position5_we <= 1'd0;
		position5_re <= 1'd0;
		position6_status <= 62'd0;
		position6_we <= 1'd0;
		position6_re <= 1'd0;
		wallclock_status <= 64'd0;
		wallclock_re <= 1'd0;
		gpios_in_status <= 32'd0;
		gpios_in_we <= 1'd0;
		gpios_in_re <= 1'd0;
		encoder_position1_status <= 32'd0;
		encoder_position1_we <= 1'd0;
		encoder_position1_re <= 1'd0;
		encoder_position2_status <= 32'd0;
		encoder_position2_we <= 1'd0;
		encoder_position2_re <= 1'd0;
		encoder_position3_status <= 32'd0;
		encoder_position3_we <= 1'd0;
		encoder_position3_re <= 1'd0;
		encoder_position4_status <= 32'd0;
		encoder_position4_we <= 1'd0;
		encoder_position4_re <= 1'd0;
		encoder_position5_re <= 1'd0;
		encoder_position6_re <= 1'd0;
		gpio_out0 <= 1'd0;
		gpio_out1 <= 1'd0;
		gpio_out2 <= 1'd0;
		gpio_out3 <= 1'd0;
		gpio_out4 <= 1'd0;
		gpio_out5 <= 1'd0;
		gpio_out6 <= 1'd0;
		gpio_out7 <= 1'd0;
		gpio_out8 <= 1'd0;
		gpio_out9 <= 1'd0;
		gpio_out10 <= 1'd0;
		pwm_out0 <= 1'd0;
		pwm_out1 <= 1'd0;
		pwm_out2 <= 1'd0;
		en_out <= 1'd0;
		pwm0_width <= 32'd32;
		pwm0_period <= 32'd32;
		pwm1_width <= 32'd32;
		pwm1_period <= 32'd32;
		pwm2_width <= 32'd32;
		pwm2_period <= 32'd32;
		leds_storage <= 1'd0;
		leds_re <= 1'd0;
		leds_chaser <= 1'd0;
		leds_mode <= 1'd0;
		leds_count <= 25'd25000000;
		ledchaser_pwm <= 1'd0;
		ledchaser_pwm_enable_storage <= 1'd1;
		ledchaser_pwm_enable_re <= 1'd0;
		ledchaser_pwm_width_re <= 1'd0;
		ledchaser_pwm_period_re <= 1'd0;
		liteethetherbonepackettx_fsm0_state <= 2'd0;
		liteethetherbonepackettx_fsm1_state <= 1'd0;
		liteethetherbonepackettx_state <= 1'd0;
		liteethetherbonepacketrx_fsm0_state <= 2'd0;
		liteethetherbonepacketrx_fsm1_state <= 1'd0;
		liteethetherbonepacketrx_state <= 2'd0;
		liteethetherboneprobe_state <= 1'd0;
		fsm0_state0 <= 2'd0;
		fsm1_state0 <= 1'd0;
		liteethetherbonerecordreceiver_state <= 2'd0;
		liteethetherbonerecordsender_state <= 2'd0;
		fsm0_state1 <= 2'd0;
		fsm1_state1 <= 1'd0;
		liteethetherbonewishbonemaster_state <= 2'd0;
		csr_bankarray_sel_r <= 1'd0;
		state <= 1'd0;
	end
	multiregimpl0_regs0 <= ethphy_data_r;
	multiregimpl0_regs1 <= multiregimpl0_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 41-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:40];
initial begin
	$readmemh("mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= csr_bankarray_adr;
end
assign csr_bankarray_dat_r = mem[mem_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (benchsoc_uartcrossover_tx_fifo_wrport_we)
		storage[benchsoc_uartcrossover_tx_fifo_wrport_adr] <= benchsoc_uartcrossover_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[benchsoc_uartcrossover_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (benchsoc_uartcrossover_tx_fifo_rdport_re)
		storage_dat1 <= storage[benchsoc_uartcrossover_tx_fifo_rdport_adr];
end
assign benchsoc_uartcrossover_tx_fifo_wrport_dat_r = storage_dat0;
assign benchsoc_uartcrossover_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (benchsoc_uartcrossover_rx_fifo_wrport_we)
		storage_1[benchsoc_uartcrossover_rx_fifo_wrport_adr] <= benchsoc_uartcrossover_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[benchsoc_uartcrossover_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (benchsoc_uartcrossover_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[benchsoc_uartcrossover_rx_fifo_rdport_adr];
end
assign benchsoc_uartcrossover_rx_fifo_wrport_dat_r = storage_1_dat0;
assign benchsoc_uartcrossover_rx_fifo_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Memory storage_2: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_2[0:15];
reg [9:0] storage_2_dat0;
reg [9:0] storage_2_dat1;
always @(posedge sys_clk) begin
	if (benchsoc_xover_rx_fifo_wrport_we)
		storage_2[benchsoc_xover_rx_fifo_wrport_adr] <= benchsoc_xover_rx_fifo_wrport_dat_w;
	storage_2_dat0 <= storage_2[benchsoc_xover_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (benchsoc_xover_rx_fifo_rdport_re)
		storage_2_dat1 <= storage_2[benchsoc_xover_rx_fifo_rdport_adr];
end
assign benchsoc_xover_rx_fifo_wrport_dat_r = storage_2_dat0;
assign benchsoc_xover_rx_fifo_rdport_dat_r = storage_2_dat1;


DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(1'd0)
) DELAYG (
	.A(ethphy_eth_tx_clk_o),
	.Z(eth_clocks_tx)
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(1'd0)
) DELAYG_1 (
	.A(ethphy_tx_ctl_oddrx1f),
	.Z(eth_tx_ctl)
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(1'd0)
) DELAYG_2 (
	.A(ethphy_tx_data_oddrx1f[0]),
	.Z(eth_tx_data[0])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(1'd0)
) DELAYG_3 (
	.A(ethphy_tx_data_oddrx1f[1]),
	.Z(eth_tx_data[1])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(1'd0)
) DELAYG_4 (
	.A(ethphy_tx_data_oddrx1f[2]),
	.Z(eth_tx_data[2])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(1'd0)
) DELAYG_5 (
	.A(ethphy_tx_data_oddrx1f[3]),
	.Z(eth_tx_data[3])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(7'd80)
) DELAYG_6 (
	.A(eth_rx_ctl),
	.Z(ethphy_rx_ctl_delayf)
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(7'd80)
) DELAYG_7 (
	.A(eth_rx_data[0]),
	.Z(ethphy_rx_data_delayf[0])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(7'd80)
) DELAYG_8 (
	.A(eth_rx_data[1]),
	.Z(ethphy_rx_data_delayf[1])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(7'd80)
) DELAYG_9 (
	.A(eth_rx_data[2]),
	.Z(ethphy_rx_data_delayf[2])
);

DELAYG #(
	.DEL_MODE("SCLK_ALIGNED"),
	.DEL_VALUE(7'd80)
) DELAYG_10 (
	.A(eth_rx_data[3]),
	.Z(ethphy_rx_data_delayf[3])
);

//------------------------------------------------------------------------------
// Memory storage_3: 32-words x 12-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 12 
// Port 1 | Read: Sync  | Write: ---- | 
reg [11:0] storage_3[0:31];
reg [11:0] storage_3_dat0;
reg [11:0] storage_3_dat1;
always @(posedge eth_rx_clk) begin
	if (benchsoc_ethcore_mac_core_cdc_wrport_we)
		storage_3[benchsoc_ethcore_mac_core_cdc_wrport_adr] <= benchsoc_ethcore_mac_core_cdc_wrport_dat_w;
	storage_3_dat0 <= storage_3[benchsoc_ethcore_mac_core_cdc_wrport_adr];
end
always @(posedge eth_tx_clk) begin
	storage_3_dat1 <= storage_3[benchsoc_ethcore_mac_core_cdc_rdport_adr];
end
assign benchsoc_ethcore_mac_core_cdc_wrport_dat_r = storage_3_dat0;
assign benchsoc_ethcore_mac_core_cdc_rdport_dat_r = storage_3_dat1;


//------------------------------------------------------------------------------
// Memory storage_4: 5-words x 12-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 12 
// Port 1 | Read: Async | Write: ---- | 
reg [11:0] storage_4[0:4];
reg [11:0] storage_4_dat0;
always @(posedge eth_rx_clk) begin
	if (benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_we)
		storage_4[benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_adr] <= benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_dat_w;
	storage_4_dat0 <= storage_4[benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_adr];
end
always @(posedge eth_rx_clk) begin
end
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_wrport_dat_r = storage_4_dat0;
assign benchsoc_ethcore_mac_core_rx_crc_syncfifo_rdport_dat_r = storage_4[benchsoc_ethcore_mac_core_rx_crc_syncfifo_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_5: 32-words x 12-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 12 
// Port 1 | Read: Sync  | Write: ---- | 
reg [11:0] storage_5[0:31];
reg [4:0] storage_5_adr0;
reg [4:0] storage_5_adr1;
always @(posedge eth_rx_clk) begin
	if (benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_we)
		storage_5[benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_adr] <= benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_dat_w;
	storage_5_adr0 <= benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_adr;
end
always @(posedge eth_rx_clk) begin
	storage_5_adr1 <= benchsoc_ethcore_mac_core_rx_cdc_cdc_rdport_adr;
end
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_wrport_dat_r = storage_5[storage_5_adr0];
assign benchsoc_ethcore_mac_core_rx_cdc_cdc_rdport_dat_r = storage_5[storage_5_adr1];


//------------------------------------------------------------------------------
// Memory storage_6: 128-words x 124-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 124 
// Port 1 | Read: Sync  | Write: ---- | 
reg [123:0] storage_6[0:127];
reg [123:0] storage_6_dat0;
reg [123:0] storage_6_dat1;
always @(posedge eth_rx_clk) begin
	if (benchsoc_ethcore_icmp_echo_buffer_wrport_we)
		storage_6[benchsoc_ethcore_icmp_echo_buffer_wrport_adr] <= benchsoc_ethcore_icmp_echo_buffer_wrport_dat_w;
	storage_6_dat0 <= storage_6[benchsoc_ethcore_icmp_echo_buffer_wrport_adr];
end
always @(posedge eth_rx_clk) begin
	if (benchsoc_ethcore_icmp_echo_buffer_rdport_re)
		storage_6_dat1 <= storage_6[benchsoc_ethcore_icmp_echo_buffer_rdport_adr];
end
assign benchsoc_ethcore_icmp_echo_buffer_wrport_dat_r = storage_6_dat0;
assign benchsoc_ethcore_icmp_echo_buffer_rdport_dat_r = storage_6_dat1;


//------------------------------------------------------------------------------
// Memory storage_7: 4-words x 122-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 122 
// Port 1 | Read: Sync  | Write: ---- | 
reg [121:0] storage_7[0:3];
reg [121:0] storage_7_dat0;
reg [121:0] storage_7_dat1;
always @(posedge etherbone_clk) begin
	if (benchsoc_etherbone_tx_cdc_cdc_wrport_we)
		storage_7[benchsoc_etherbone_tx_cdc_cdc_wrport_adr] <= benchsoc_etherbone_tx_cdc_cdc_wrport_dat_w;
	storage_7_dat0 <= storage_7[benchsoc_etherbone_tx_cdc_cdc_wrport_adr];
end
always @(posedge eth_rx_clk) begin
	storage_7_dat1 <= storage_7[benchsoc_etherbone_tx_cdc_cdc_rdport_adr];
end
assign benchsoc_etherbone_tx_cdc_cdc_wrport_dat_r = storage_7_dat0;
assign benchsoc_etherbone_tx_cdc_cdc_rdport_dat_r = storage_7_dat1;


//------------------------------------------------------------------------------
// Memory storage_8: 4-words x 122-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 122 
// Port 1 | Read: Sync  | Write: ---- | 
reg [121:0] storage_8[0:3];
reg [121:0] storage_8_dat0;
reg [121:0] storage_8_dat1;
always @(posedge eth_rx_clk) begin
	if (benchsoc_etherbone_rx_cdc_cdc_wrport_we)
		storage_8[benchsoc_etherbone_rx_cdc_cdc_wrport_adr] <= benchsoc_etherbone_rx_cdc_cdc_wrport_dat_w;
	storage_8_dat0 <= storage_8[benchsoc_etherbone_rx_cdc_cdc_wrport_adr];
end
always @(posedge etherbone_clk) begin
	storage_8_dat1 <= storage_8[benchsoc_etherbone_rx_cdc_cdc_rdport_adr];
end
assign benchsoc_etherbone_rx_cdc_cdc_wrport_dat_r = storage_8_dat0;
assign benchsoc_etherbone_rx_cdc_cdc_rdport_dat_r = storage_8_dat1;


//------------------------------------------------------------------------------
// Memory storage_9: 1060-words x 42-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 42 
// Port 1 | Read: Sync  | Write: ---- | 
reg [41:0] storage_9[0:1059];
reg [41:0] storage_9_dat0;
reg [41:0] storage_9_dat1;
always @(posedge sys_clk) begin
	if (benchsoc_etherbone_record_receiver_payload_fifo_wrport_we)
		storage_9[benchsoc_etherbone_record_receiver_payload_fifo_wrport_adr] <= benchsoc_etherbone_record_receiver_payload_fifo_wrport_dat_w;
	storage_9_dat0 <= storage_9[benchsoc_etherbone_record_receiver_payload_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (benchsoc_etherbone_record_receiver_payload_fifo_rdport_re)
		storage_9_dat1 <= storage_9[benchsoc_etherbone_record_receiver_payload_fifo_rdport_adr];
end
assign benchsoc_etherbone_record_receiver_payload_fifo_wrport_dat_r = storage_9_dat0;
assign benchsoc_etherbone_record_receiver_payload_fifo_rdport_dat_r = storage_9_dat1;


//------------------------------------------------------------------------------
// Memory storage_10: 1060-words x 70-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 70 
// Port 1 | Read: Sync  | Write: ---- | 
reg [69:0] storage_10[0:1059];
reg [69:0] storage_10_dat0;
reg [69:0] storage_10_dat1;
always @(posedge sys_clk) begin
	if (benchsoc_etherbone_record_sender_payload_fifo_wrport_we)
		storage_10[benchsoc_etherbone_record_sender_payload_fifo_wrport_adr] <= benchsoc_etherbone_record_sender_payload_fifo_wrport_dat_w;
	storage_10_dat0 <= storage_10[benchsoc_etherbone_record_sender_payload_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (benchsoc_etherbone_record_sender_payload_fifo_rdport_re)
		storage_10_dat1 <= storage_10[benchsoc_etherbone_record_sender_payload_fifo_rdport_adr];
end
assign benchsoc_etherbone_record_sender_payload_fifo_wrport_dat_r = storage_10_dat0;
assign benchsoc_etherbone_record_sender_payload_fifo_rdport_dat_r = storage_10_dat1;


stepgen #(
	.F(5'd30),
	.T(4'd10),
	.W(6'd32)
) stepgen (
	.clk(sys_clk),
	.dirtime(stepgen1_dirtime),
	.enable(stepgen1_enable),
	.reset(stepgen1_reset),
	.steptime(stepgen1_steptime),
	.tap(stepgen1_tap),
	.velocity(stepgen1_velocity),
	.dir(stepgen1_internal_dir),
	.out_position(stepgen1_position),
	.step(stepgen1_internal_step)
);

stepgen #(
	.F(5'd30),
	.T(4'd10),
	.W(6'd32)
) stepgen_1 (
	.clk(sys_clk),
	.dirtime(stepgen2_dirtime),
	.enable(stepgen2_enable),
	.reset(stepgen2_reset),
	.steptime(stepgen2_steptime),
	.tap(stepgen2_tap),
	.velocity(stepgen2_velocity),
	.dir(stepgen2_internal_dir),
	.out_position(stepgen2_position),
	.step(stepgen2_internal_step)
);

stepgen #(
	.F(5'd30),
	.T(4'd10),
	.W(6'd32)
) stepgen_2 (
	.clk(sys_clk),
	.dirtime(stepgen3_dirtime),
	.enable(stepgen3_enable),
	.reset(stepgen3_reset),
	.steptime(stepgen3_steptime),
	.tap(stepgen3_tap),
	.velocity(stepgen3_velocity),
	.dir(stepgen3_internal_dir),
	.out_position(stepgen3_position),
	.step(stepgen3_internal_step)
);

stepgen #(
	.F(5'd30),
	.T(4'd10),
	.W(6'd32)
) stepgen_3 (
	.clk(sys_clk),
	.dirtime(stepgen4_dirtime),
	.enable(stepgen4_enable),
	.reset(stepgen4_reset),
	.steptime(stepgen4_steptime),
	.tap(stepgen4_tap),
	.velocity(stepgen4_velocity),
	.dir(stepgen4_internal_dir),
	.out_position(stepgen4_position),
	.step(stepgen4_internal_step)
);

stepgen #(
	.F(5'd30),
	.T(4'd10),
	.W(6'd32)
) stepgen_4 (
	.clk(sys_clk),
	.dirtime(stepgen5_dirtime),
	.enable(stepgen5_enable),
	.reset(stepgen5_reset),
	.steptime(stepgen5_steptime),
	.tap(stepgen5_tap),
	.velocity(stepgen5_velocity),
	.dir(stepgen5_internal_dir),
	.out_position(stepgen5_position),
	.step(stepgen5_internal_step)
);

stepgen #(
	.F(5'd30),
	.T(4'd10),
	.W(6'd32)
) stepgen_5 (
	.clk(sys_clk),
	.dirtime(stepgen6_dirtime),
	.enable(stepgen6_enable),
	.reset(stepgen6_reset),
	.steptime(stepgen6_steptime),
	.tap(stepgen6_tap),
	.velocity(stepgen6_velocity),
	.dir(stepgen6_internal_dir),
	.out_position(stepgen6_position),
	.step(stepgen6_internal_step)
);

(* FREQUENCY_PIN_CLKI = "25.0", FREQUENCY_PIN_CLKOP = "50.0", FREQUENCY_PIN_CLKOS = "50.0", ICP_CURRENT = "6", LPF_RESISTOR = "16", MFG_ENABLE_FILTEROPAMP = "1", MFG_GMCREF_SEL = "2" *) EHXPLLL #(
	.CLKFB_DIV(5'd16),
	.CLKI_DIV(1'd1),
	.CLKOP_CPHASE(3'd7),
	.CLKOP_DIV(4'd8),
	.CLKOP_ENABLE("ENABLED"),
	.CLKOP_FPHASE(1'd0),
	.CLKOS2_CPHASE(1'd0),
	.CLKOS2_DIV(1'd1),
	.CLKOS2_ENABLE("ENABLED"),
	.CLKOS2_FPHASE(1'd0),
	.CLKOS_CPHASE(4'd11),
	.CLKOS_DIV(4'd8),
	.CLKOS_ENABLE("ENABLED"),
	.CLKOS_FPHASE(1'd0),
	.FEEDBK_PATH("INT_OS2")
) EHXPLLL (
	.CLKI(crg_clkin),
	.RST(crg_reset),
	.STDBY(crg_stdby),
	.CLKOP(crg_clkout0),
	.CLKOS(crg_clkout1),
	.CLKOS2(ecp5pll),
	.LOCK(locked)
);

FD1S3BX FD1S3BX(
	.CK(sys_clk),
	.D(1'd0),
	.PD((~crg_locked)),
	.Q(latticeecp5asyncresetsynchronizerimpl0_rst1)
);

FD1S3BX FD1S3BX_1(
	.CK(sys_clk),
	.D(latticeecp5asyncresetsynchronizerimpl0_rst1),
	.PD((~crg_locked)),
	.Q(sys_rst)
);

FD1S3BX FD1S3BX_2(
	.CK(sys_ps_clk),
	.D(1'd0),
	.PD((~crg_locked)),
	.Q(latticeecp5asyncresetsynchronizerimpl1_rst1)
);

FD1S3BX FD1S3BX_3(
	.CK(sys_ps_clk),
	.D(latticeecp5asyncresetsynchronizerimpl1_rst1),
	.PD((~crg_locked)),
	.Q(latticeecp5asyncresetsynchronizerimpl1_expr)
);

ODDRX1F ODDRX1F(
	.D0(1'd1),
	.D1(1'd0),
	.SCLK(sys_ps_clk),
	.Q(sdram_clock)
);

ODDRX1F ODDRX1F_1(
	.D0(1'd1),
	.D1(1'd0),
	.SCLK(eth_tx_clk),
	.Q(ethphy_eth_tx_clk_o)
);

FD1S3BX FD1S3BX_4(
	.CK(eth_tx_clk),
	.D(1'd0),
	.PD(ethphy_reset),
	.Q(latticeecp5asyncresetsynchronizerimpl2_rst1)
);

FD1S3BX FD1S3BX_5(
	.CK(eth_tx_clk),
	.D(latticeecp5asyncresetsynchronizerimpl2_rst1),
	.PD(ethphy_reset),
	.Q(eth_tx_rst)
);

FD1S3BX FD1S3BX_6(
	.CK(eth_rx_clk),
	.D(1'd0),
	.PD(ethphy_reset),
	.Q(latticeecp5asyncresetsynchronizerimpl3_rst1)
);

FD1S3BX FD1S3BX_7(
	.CK(eth_rx_clk),
	.D(latticeecp5asyncresetsynchronizerimpl3_rst1),
	.PD(ethphy_reset),
	.Q(eth_rx_rst)
);

ODDRX1F ODDRX1F_2(
	.D0(ethphy_sink_valid),
	.D1(ethphy_sink_valid),
	.SCLK(eth_tx_clk),
	.Q(ethphy_tx_ctl_oddrx1f)
);

ODDRX1F ODDRX1F_3(
	.D0(ethphy_sink_payload_data[0]),
	.D1(ethphy_sink_payload_data[4]),
	.SCLK(eth_tx_clk),
	.Q(ethphy_tx_data_oddrx1f[0])
);

ODDRX1F ODDRX1F_4(
	.D0(ethphy_sink_payload_data[1]),
	.D1(ethphy_sink_payload_data[5]),
	.SCLK(eth_tx_clk),
	.Q(ethphy_tx_data_oddrx1f[1])
);

ODDRX1F ODDRX1F_5(
	.D0(ethphy_sink_payload_data[2]),
	.D1(ethphy_sink_payload_data[6]),
	.SCLK(eth_tx_clk),
	.Q(ethphy_tx_data_oddrx1f[2])
);

ODDRX1F ODDRX1F_6(
	.D0(ethphy_sink_payload_data[3]),
	.D1(ethphy_sink_payload_data[7]),
	.SCLK(eth_tx_clk),
	.Q(ethphy_tx_data_oddrx1f[3])
);

IDDRX1F IDDRX1F(
	.D(ethphy_rx_ctl_delayf),
	.SCLK(eth_rx_clk),
	.Q0(ethphy_rx_ctl[0]),
	.Q1(ethphy_rx_ctl[1])
);

IDDRX1F IDDRX1F_1(
	.D(ethphy_rx_data_delayf[0]),
	.SCLK(eth_rx_clk),
	.Q0(ethphy_rx_data[0]),
	.Q1(ethphy_rx_data[4])
);

IDDRX1F IDDRX1F_2(
	.D(ethphy_rx_data_delayf[1]),
	.SCLK(eth_rx_clk),
	.Q0(ethphy_rx_data[1]),
	.Q1(ethphy_rx_data[5])
);

IDDRX1F IDDRX1F_3(
	.D(ethphy_rx_data_delayf[2]),
	.SCLK(eth_rx_clk),
	.Q0(ethphy_rx_data[2]),
	.Q1(ethphy_rx_data[6])
);

IDDRX1F IDDRX1F_4(
	.D(ethphy_rx_data_delayf[3]),
	.SCLK(eth_rx_clk),
	.Q0(ethphy_rx_data[3]),
	.Q1(ethphy_rx_data[7])
);

TRELLIS_IO #(
	.DIR("BIDIR")
) TRELLIS_IO (
	.B(eth_mdio),
	.I(ethphy_data_w),
	.T((~ethphy_data_oe)),
	.O(ethphy_data_r)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-02-24 23:58:27.
//------------------------------------------------------------------------------
